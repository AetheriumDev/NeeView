<!--
    Copyright (c) 2016 Mitsuhiro Ito (nee)

    This software is released under the MIT License.
    http://opensource.org/licenses/mit-license.php
-->

<Window x:Class="NeeView.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NeeView"
        xmlns:susie="clr-namespace:Susie"
        xmlns:drag="clr-namespace:DragExtensions"
        xmlns:nlc="clr-namespace:NeeLaboratory.Controls"
        mc:Ignorable="d"
        Title="設定" Height="600" Width="700" Closed="Window_Closed" >

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:MouseGestureToDispTextConverter x:Key="MouseGestureToDispTextConverter"/>
        <local:DragActionTypeToTipsConverter x:Key="DragActionTypeToTipsConverter"/>
        <local:LongButtonDownModeToTipsConverter x:Key="LongButtonDownModeToTipsConverter"/>
        <local:BannerSizeConverter x:Key="BannerSizeConverter"/>
        <local:HistoryLimitSizeConverter x:Key="HistoryLimitSizeConverter"/>
        <local:HistoryLimitSpanConverter x:Key="HistoryLimitSpanConverter"/>
        <local:IsNullConverter x:Key="IsNullConverter"/>

        <Style TargetType="StackPanel" x:Key="BaseStackPanel">
            <Setter Property="Margin" Value="4"/>
        </Style>

        <Style TargetType="FrameworkElement" x:Key="Phrase">
            <Setter Property="Margin" Value="20,0,0,10"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="Header">
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style TargetType="CheckBox" x:Key="ItemCheckBox">
            <Setter Property="Margin" Value="2"/>
        </Style>

        <Style TargetType="StackPanel" x:Key="ItemStackPanel">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>

        <Style TargetType="DockPanel" x:Key="ItemDockPanel">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="LastChildFill" Value="True"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="ItemHeader">
            <Setter Property="Margin" Value="2,2,10,2"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="ComboBox" x:Key="ItemComboBox">
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="MinWidth" Value="200"/>
        </Style>

        <Style TargetType="Slider" x:Key="ItemSlider">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="IsSnapToTickEnabled" Value="True"/>
        </Style>

        <Style TargetType="Button" x:Key="ItemButton">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="10,0"/>
        </Style>

    </Window.Resources>
    <Grid>
        <TabControl x:Name="tabControl" Margin="10,10,10,43">
            <TabItem Header="全般設定">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Style="{StaticResource BaseStackPanel}">

                        <TextBlock Text="基本" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="圧縮ファイルをサポートする"
                              ToolTip="圧縮ファイル内のファイルを表示できるようにします"
                              IsChecked="{Binding Setting.BookHubMemento.IsSupportArchiveFile}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="アニメーションGIFを再生する"
                              ToolTip="アニメーションGIF再生を行います。長時間のGIFで問題が発生する可能性があります"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnableAnimatedGif}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="EXIFの回転情報を反映させる"
                              ToolTip="画像に含まれる拡張情報(EXIF)に回転情報がある場合に反映させます"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnableExif}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="サポート外ファイルもページに含める"
                              ToolTip="画像として表示できないファイルもページとして表示します"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnableNoSupportFile}" />
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="スライダーの方向"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding SliderDirectionList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.SliderDirection}" />
                            </StackPanel>
                        </StackPanel>


                        <TextBlock Text="起動設定" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="多重起動を禁止する"
                              IsChecked="{Binding Setting.ViewMemento.IsDisableMultiBoot}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ウィンドウ座標を復元する"
                              IsChecked="{Binding Setting.ViewMemento.IsSaveWindowPlacement}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="フルスクリーン状態を復元する"
                              IsChecked="{Binding Setting.ViewMemento.IsSaveFullScreen}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="前回開いていたフォルダを開く"
                              IsChecked="{Binding Setting.ViewMemento.IsLoadLastFolder}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="スライドショーの再生を開始する"
                              IsChecked="{Binding Setting.ViewMemento.IsAutoPlaySlideShow}" />
                        </StackPanel>

                        <TextBlock Text="メモリ関連" Style="{StaticResource Header}" />

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="先読みを行う"
                                      ToolTip="3ページ先までの先読みと3ページ前後のページの保持を行います"
                                      IsChecked="{Binding Setting.BookHubMemento.AllowPagePreLoad}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="メモリ開放をシステムに任せる"
                                      ToolTip="システムに任せるとメモリ消費が増えるように見えますが、メモリが足りなくなると自動的に開放されるため問題ありません&#xa;このチェックをはずすと使用しなくなった画像のメモリを即時開放しますが、動作が重くなる可能性があります"
                                      IsChecked="{Binding Setting.ViewMemento.IsAutoGC}" />
                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="サムネイル画像に使用される最大容量">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="サムネイル用メモリ"/>
                                <Slider Style="{StaticResource ItemSlider}" Value="{Binding Setting.ViewMemento.ThumbnailMemorySize}"
                                    Minimum="8" Maximum="256" TickFrequency="8" />
                                <TextBlock Text="{Binding Setting.ViewMemento.ThumbnailMemorySize, StringFormat={}{0}MB}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="フォルダーリストでのバナー画像に使用される最大容量">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="バナー用メモリ"/>
                                <Slider Style="{StaticResource ItemSlider}" Value="{Binding Setting.ViewMemento.BannerMemorySize}"
                                    Minimum="8" Maximum="256" TickFrequency="8" />
                                <TextBlock Text="{Binding Setting.ViewMemento.BannerMemorySize, StringFormat={}{0}MB}" />
                            </StackPanel>


                        </StackPanel>

                        <TextBlock Text="その他" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="「開く」を現在開いているフォルダの場所から始める"
                              ToolTip="[ファイル]>[開く]で開くフォルダです&#xa;ドラッグ＆ドロップや履歴から開いた場所も基準になります"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnarbleCurrentDirectory}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ページが終わったら次のフォルダに移動する"
                              ToolTip="ページの終端を超えて移動しようとした時にフォルダ移動を行います&#xa;その際の開始ページは履歴によらず、最初のページか最後のページになります"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnabledAutoNextFolder}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ページがない場合、サブフォルダも読み込むか問い合わせる"
                              ToolTip="フォルダーを開いた時に表示可能なページがなく、かつサブフォルダが存在する場合に&#xa;サブフォルダも読み込むかを問い合わせるダイアログを表示します"
                              IsChecked="{Binding Setting.BookHubMemento.IsConfirmRecursive}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ページがなくサブフォルダが１つだけ存在する場合にサブフォルダを読み込む"
                              ToolTip="ページ設定でサブフォルダを読み込む設定になっていなくても機能します"
                              IsChecked="{Binding Setting.BookHubMemento.IsAutoRecursive}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="新しいフォルダーを開くときにページ設定を標準に戻す"
                              ToolTip="新しいフォルダーを開いた時に[ページ]の設定を初期値に戻します&#x0a;「サブフォルダも読み込む」はこの設定にかかわらずOFFになります"
                              IsChecked="{Binding Setting.BookHubMemento.IsUseBookMementoDefault}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="7z.dllで展開するファイルを開いたままにする"
                              ToolTip="RAR等を展開する7z.dllを使用する際にファイルを開いたままにします。&#xa;閲覧中の移動や削除はできなくなりますが、読み込み速度の改善が期待できます"
                              IsChecked="{Binding Setting.BookHubMemento.IsSevenZipAccessLocked}" />

                            <Button x:Name="RemoveAllDataButton" Style="{StaticResource ItemButton}"
                                    ToolTip="ユーザデータを削除し、アプリケーションを終了します。&#xa;アンインストール前に履歴等を完全に削除したい場合に使用します"
                                    Click="RemoveAllData_Click">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource ic_warning_48px}" Width="20"/>
                                    <TextBlock Text="全データを削除する" VerticalAlignment="Bottom" Margin="5,0,0,0"/>
                                </StackPanel>
                            </Button>

                        </StackPanel>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="表示設定">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Style="{StaticResource BaseStackPanel}">

                        <TextBlock Text="通知表示" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">

                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="開いたフォルダ名の表示等の通知の表示方法を指定します">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="通知を"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.NoticeShowMessageStyle}" />
                            </StackPanel>

                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="コマンド実行メッセージの表示方法を指定します">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="コマンド実行を"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.CommandShowMessageStyle}" />
                            </StackPanel>


                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="マウスジェスチャーの状態の表示方法を指定します">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="マウスジェスチャーを"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.GestureShowMessageStyle}" />
                            </StackPanel>

                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="Now Loading の表示方法を指定します">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="Now Loading を"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.NowLoadingShowMessageStyle}" />
                            </StackPanel>

                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="ドラッグ操作によるスケール変更等の情報表示方法を指定します">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="ビュー操作を"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.ViewTransformShowMessageStyle}" />
                            </StackPanel>

                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ビュー操作のスケール表示をオリジナルサイズ基準にする"
                                      ToolTip="スケール表示を元画像サイズに対する表示倍率にします&#xa;２ページ表示の場合は若い番号のページを基準にします"
                                      IsChecked="{Binding Setting.ViewMemento.IsOriginalScaleShowMessage}"/>

                        </StackPanel>

                        <DockPanel LastChildFill="False">
                            <TextBlock Text="ウィンドウタイトル" Style="{StaticResource Header}"/>
                            <ToggleButton DockPanel.Dock="Right" x:Name="WindowTitleFormatHelp" Margin="5,0" Width="20" Height="20" Style="{StaticResource IconToggleButton}">
                                <Image Width="14" Height="14" Source="{StaticResource ic_help_24px}"/>
                            </ToggleButton>
                        </DockPanel>
                        <Popup IsOpen="{Binding ElementName=WindowTitleFormatHelp, Path=IsChecked}" PlacementTarget="{Binding ElementName=WindowTitleFormatHelp}" Placement="Top" HorizontalAlignment="Right">
                            <Border BorderBrush="Gray" BorderThickness="1" Background="LightYellow">
                                <TextBlock Margin="10">
                                    $Book -- 開いているフォルダ名<LineBreak/>
                                    $Page -- 現在ページ番号<LineBreak/>
                                    $PageMax -- 最大ページ番号<LineBreak/>
                                    $ViewScale -- ビュー操作による表示倍率(%)<LineBreak/>
                                    $FullName[LR] -- パスを含むファイル名<LineBreak/>
                                    $Name[LR] -- ファイル名<LineBreak/>
                                    $Size[LR] -- ファイルサイズ (ex. 100×100)<LineBreak/>
                                    $SizeEx[LR] -- ファイルサイズ+ピクセルビット数 (ex. 100×100×24)<LineBreak/>
                                    $Scale[LR] -- 画像の表示倍率(%)<LineBreak/>
                                    <LineBreak/>
                                    "◯◯◯[LR]" は、1ページ用、2ページ用で変数名が変わることを示します<LineBreak/>
                                    例えば $Name は1ページ用、 $NameL は２ページ左用、 $NameR は2ページ右用になります<LineBreak/>
                                    $Name は2ページ表示時には主となるページ(ページ番号の小さい方)になります
                                </TextBlock>
                            </Border>
                        </Popup>

                        <StackPanel Style="{StaticResource Phrase}">
                            <DockPanel Style="{StaticResource ItemDockPanel}">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="1ページ用："/>
                                <TextBox Text="{Binding Setting.ViewMemento.WindowTitleFormat1}"/>
                            </DockPanel>
                            <DockPanel Style="{StaticResource ItemDockPanel}">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="2ページ用："/>
                                <TextBox Text="{Binding Setting.ViewMemento.WindowTitleFormat2}"/>
                            </DockPanel>
                        </StackPanel>


                        <TextBlock Text="サムネイルリスト" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="スライダーでのリアルタイム変化はサムネイルリストにのみ適用"
                                      ToolTip="スライダーでサムネイルを選択し、決定した時に画像が切り替わります"
                                      IsChecked="{Binding Setting.ViewMemento.IsSliderLinkedThumbnailList}"/>
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ページ番号を表示する"
                                      ToolTip="サムネイルにページ番号を表示します"
                                      IsChecked="{Binding Setting.ViewMemento.IsVisibleThumbnailNumber}"/>
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="背景を表示する"
                                      ToolTip="サムネイルリストの背景を表示します"
                                      IsChecked="{Binding Setting.ViewMemento.IsVisibleThumbnailPlate}"/>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="サムネイルサイズ"/>
                                <Slider Style="{StaticResource ItemSlider}" Value="{Binding Setting.ViewMemento.ThumbnailSize}"
                                    Minimum="64" Maximum="256" TickFrequency="16"/>
                                <TextBlock Text="{Binding Setting.ViewMemento.ThumbnailSize, StringFormat={}{0}x{0}}"/>
                            </StackPanel>
                        </StackPanel>


                        <TextBlock Text="パネル" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="フォルダーリスト等のパネルのテーマカラーを指定します">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="パネルの色"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding PanelColorList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.PanelColor}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="フォルダーリスト、履歴リスト、ブックマークリストの項目の表示方法を指定します">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="フォルダーの表示方法"/>
                                <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding FolderListItemStyleList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.FolderListItemStyle}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="フォルダーの表示方法をバナー表示にした時のバナーサイズです">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="バナーサイズ"/>
                                <Slider Style="{StaticResource ItemSlider}" Value="{Binding Setting.ViewMemento.BannerSize}"
                                    Minimum="64" Maximum="512" TickFrequency="32"/>
                                <TextBlock Text="{Binding Setting.ViewMemento.BannerSize, Converter={StaticResource BannerSizeConverter}}"/>
                            </StackPanel>
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="フルスクリーンのときにパネルを自動的に隠す"
                              IsChecked="{Binding Setting.ViewMemento.IsHidePanelInFullscreen}" />

                        </StackPanel>

                        <TextBlock Text="フォルダリスト" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ブックマーク記号を表示する"
                                      ToolTip="ブックマークされているフォルダに★マークを表示します"
                                      IsChecked="{Binding Setting.ViewMemento.FolderListSetting.IsVisibleBookmarkMark}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="履歴記号を表示する"
                                      ToolTip="履歴に残っているフォルダにチェックマークを表示します"
                                      IsChecked="{Binding Setting.ViewMemento.FolderListSetting.IsVisibleHistoryMark}" />
                        </StackPanel>

                        <TextBlock Text="ファイル情報" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="EXIFの日時を使用する"
                                      ToolTip="ファイル情報パネルでの表示に限ります&#xa;日付順のソートには影響しません"
                                      IsChecked="{Binding Setting.ViewMemento.FileInfoSetting.IsUseExifDateTime}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="1ピクセルあたりのビット数を表示する"
                                      ToolTip="画像サイズにピクセル深度(bit)も表示します"
                                      IsChecked="{Binding Setting.ViewMemento.FileInfoSetting.IsVisibleBitsPerPixel}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="ローダー情報を表示する"
                                      ToolTip="使用されたアーカイバ、画像デコーダー名を表示します"
                              IsChecked="{Binding Setting.ViewMemento.FileInfoSetting.IsVisibleLoader}" />
                        </StackPanel>

                        <TextBlock Text="エフェクト" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="前回使用していたエフェクトを復元する"
                                      ToolTip="起動時に前回使用していたエフェクトを復元します"
                                      IsChecked="{Binding Setting.ImageEffectMemento.IsRecoveryEffectType}" />
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="色設定をHSVで行う"
                                      ToolTip="色パラメータの設定をHSV(色相、彩度、輝度)で設定します"
                                      IsChecked="{Binding Setting.ImageEffectMemento.IsHsvMode}" />
                        </StackPanel>

                        <TextBlock Text="2ページ表示" Style="{StaticResource Header}"/>
                        <StackPanel Style="{StaticResource Phrase}">
                            <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="ページとページの隙間の長さを設定します&#xa;マイナス値は重なることを意味します&#xa;各ページにスケールがかかるため、0でちょうど隙間がなくなることは稀です">
                                <TextBlock Style="{StaticResource ItemHeader}" Text="2ページ間の距離"/>
                                <Slider Style="{StaticResource ItemSlider}" Value="{Binding Setting.ViewMemento.ContentsSpace}"
                                    Minimum="-32" Maximum="32" TickFrequency="1"/>
                                <TextBlock Text="{Binding Setting.ViewMemento.ContentsSpace, StringFormat={}{0}}"/>
                            </StackPanel>
                        </StackPanel>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="画像操作">
                <StackPanel Style="{StaticResource BaseStackPanel}">
                    <TextBlock Text="ビュー操作" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">

                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="移動をウィンドウ内に制限する"
                                  ToolTip="マウスドラッグによる移動を制限します"
                                  IsChecked="{Binding Setting.ViewMemento.IsLimitMove}" />
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="表示開始位置を画像の中心基準にする"
                                  ToolTip="OFFの時は、見開きモードによって右上基準、左上基準になります。"
                                  IsChecked="{Binding Setting.ViewMemento.IsViewStartPositionCenter}" />
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="回転、拡縮、反転の基準を画像の中心にする"
                                  ToolTip="OFFの時は、ウィンドウの中心をそのまま中心とします"
                                  IsChecked="{Binding Setting.ViewMemento.IsControlCenterImage}" />
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="回転を45度単位にする"
                                  ToolTip="OFFの時は、無段階での回転になります"
                                  IsChecked="{Binding Setting.ViewMemento.IsAngleSnap}" />
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="ページを変更しても拡縮をキープする"
                                  ToolTip="OFFの時は、ページを切り替える度にリセットされます"
                                  IsChecked="{Binding Setting.ViewMemento.IsKeepScale}" />
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="ページを変更しても回転をキープする"
                                  ToolTip="OFFの時は、ページを切り替える度にリセットされます&#xa;自動回転有効時は機能しません"
                                  IsChecked="{Binding Setting.ViewMemento.IsKeepAngle}" />
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="ページを変更しても反転をキープする"
                                  ToolTip="OFFの時は、ページを切り替える度にリセットされます"
                                  IsChecked="{Binding Setting.ViewMemento.IsKeepFlip}" />
                    </StackPanel>

                    <TextBlock Text="ドラッグ操作" Style="{StaticResource Header}"/>
                    <WrapPanel Margin="20,0,0,10">
                        <WrapPanel.Resources>
                            <Style TargetType="StackPanel" x:Key="DragGroup">
                                <Setter Property="Margin" Value="2,2,45,2"/>
                            </Style>

                            <Style TargetType="TextBlock" BasedOn="{StaticResource ItemHeader}"/>

                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding DragActionTypeList}"/>
                                <Setter Property="SelectedValuePath" Value="Key"/>
                                <Setter Property="DisplayMemberPath" Value="Value"/>
                                <Setter Property="Width" Value="150"/>
                                <Setter Property="ToolTip" Value="{Binding Path=SelectedValue, RelativeSource={RelativeSource Self}, Converter={StaticResource DragActionTypeToTipsConverter}}"/>
                            </Style>
                        </WrapPanel.Resources>

                        <!-- LeftDrag -->
                        <StackPanel Style="{StaticResource DragGroup}">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionNone}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="Ctrl+LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionControl}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="Shift+LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionShift}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="Alt+LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionAlt}" />
                            </StackPanel>
                        </StackPanel>

                        <!-- MiddleDrag -->
                        <StackPanel Style="{StaticResource DragGroup}">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleNone}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="Ctrl+MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleControl}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="Shift+MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleShift}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <TextBlock Text="Alt+MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleAlt}" />
                            </StackPanel>
                        </StackPanel>
                    </WrapPanel>

                    <TextBlock Text="長押し操作" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">
                        <StackPanel Style="{StaticResource ItemStackPanel}">
                            <TextBlock Text="LeftButton" Style="{StaticResource ItemHeader}"/>
                            <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding LongButtonDownModeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.LongLeftButtonDownMode}"
                                  ToolTip="{Binding Path=SelectedValue, RelativeSource={RelativeSource Self}, Converter={StaticResource LongButtonDownModeToTipsConverter}}"/>
                        </StackPanel>

                        <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="長押しと判定されるまでの押し続ける時間の設定です">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="長押し判定時間"/>
                            <Slider Style="{StaticResource ItemSlider}" Value="{Binding Setting.ViewMemento.LongButtonDownTick}"
                                    Minimum="0.1" Maximum="2.0" TickFrequency="0.1" />
                            <TextBlock Text="{Binding Setting.ViewMemento.LongButtonDownTick, StringFormat={}{0:0.0}秒}" />
                        </StackPanel>

                    </StackPanel>

                </StackPanel>
            </TabItem>

            <TabItem Header="外部連携">
                <StackPanel Style="{StaticResource BaseStackPanel}">

                    <TextBlock Text="外部アプリ設定" Style="{StaticResource Header}"  ToolTip="「外部アプリで起動」コマンドで使用するアプリを指定します"/>

                    <StackPanel Style="{StaticResource Phrase}">
                        <DockPanel Style="{StaticResource ItemDockPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="プログラム" />
                            <nlc:FileNameBox x:Name="ExAppPath" Margin="2,0" SelectDirectory="False" Title="プログラムの選択" Filter="EXE|*.exe|すべてのファイル|*.*"
                            Note="指定がない場合は拡張子に関連付けられたアプリを起動します"
                            Text="{Binding Setting.BookHubMemento.ExternalApplication.Command, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DockPanel>
                        <DockPanel>
                            <DockPanel.Style>
                                <Style TargetType="DockPanel" BasedOn="{StaticResource ItemDockPanel}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ExAppPath, Path=Text}" Value="">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <TextBlock Style="{StaticResource ItemHeader}" Text="パラメーター" />
                            <TextBox Text="{Binding ExternalApplicationParam}" Margin="2,0" ToolTip="$File がファイルパスに置換されます。&#xa;定義されていない場合 &quot;$File&quot; が自動追加されます"/>
                        </DockPanel>
                        <StackPanel Style="{StaticResource ItemStackPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="2ページの場合"/>
                            <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding MultiPageOptionTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.BookHubMemento.ExternalApplication.MultiPageOption}" />
                        </StackPanel>
                        <StackPanel Style="{StaticResource ItemStackPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="圧縮ファイルの場合" />
                            <ComboBox Style="{StaticResource ItemComboBox}" x:Name="ExAppArchiveProcess" ItemsSource="{Binding ArchiveOptionTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.BookHubMemento.ExternalApplication.ArchiveOption}" />
                        </StackPanel>
                    </StackPanel>

                    <TextBlock Text="クリップボードへのファイルコピー" Style="{StaticResource Header}"/>

                    <StackPanel Style="{StaticResource Phrase}">
                        <StackPanel Style="{StaticResource ItemStackPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="2ページの場合"/>
                            <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding MultiPageOptionTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.BookHubMemento.ClipboardUtility.MultiPageOption}" />
                        </StackPanel>
                        <StackPanel Style="{StaticResource ItemStackPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="圧縮ファイルの場合" />
                            <ComboBox Style="{StaticResource ItemComboBox}" ItemsSource="{Binding ArchiveOptionTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.BookHubMemento.ClipboardUtility.ArchiveOption}" />
                        </StackPanel>
                    </StackPanel>


                    <TextBlock Text="ブラウザからのドラッグ&amp;ドロップ" Style="{StaticResource Header}" ToolTip="Webブラウザからの画像ドロップに関連する設定です"/>

                    <StackPanel Style="{StaticResource Phrase}">
                        <DockPanel Style="{StaticResource ItemDockPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="画像保存フォルダ"/>
                            <nlc:FileNameBox x:Name="DownloadPath" Margin="2,0" SelectDirectory="True" Title="保存先フォルダの選択" 
                            Note="指定がない場合は一時フォルダが使用されます"
                            Text="{Binding Setting.ViewMemento.UserDownloadPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DockPanel>
                    </StackPanel>


                    <TextBlock Text="ファイル保存" Style="{StaticResource Header}" ToolTip="画像を保存するコマンドの設定です"/>

                    <StackPanel Style="{StaticResource Phrase}">
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="前回保存したフォルダを記憶する"
                              IsChecked="{Binding Setting.ExporterMemento.IsEnableExportFolder}" />
                        <StackPanel Style="{StaticResource ItemStackPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="JPEG品質" ToolTip="変換が必要な場合にのみ使用されます"/>
                            <Slider Style="{StaticResource ItemSlider}" x:Name="QualityLevelSlider" Value="{Binding Setting.ExporterMemento.QualityLevel}"
                                    Minimum="5" Maximum="100" TickFrequency="5" />
                            <TextBlock Text="{Binding Setting.ExporterMemento.QualityLevel}"/>
                        </StackPanel>
                    </StackPanel>

                </StackPanel>

            </TabItem>

            <TabItem Header="履歴設定">
                <StackPanel  Style="{StaticResource BaseStackPanel}">
                    <TextBlock Text="設定" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="履歴からページ設定を復元する"
                                  ToolTip="履歴情報からページ設定の復元を行います"
                                  IsChecked="{Binding Setting.BookHubMemento.IsEnableHistory}" />
                        <CheckBox Content="ページ番号のみ復元する"
                                  IsChecked="{Binding Setting.BookHubMemento.IsRecoveryPageOnly}" >
                            <CheckBox.Style>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource ItemCheckBox}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Setting.BookHubMemento.IsEnableHistory}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                    </StackPanel>


                    <TextBlock Text="履歴保存数制限" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">
                        <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="数による保持制限が履歴ファイルに適用されます&#xa;アプリ動作中の履歴は制限されません">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="保存数"/>
                            <Slider Style="{StaticResource ItemSlider}" Value="{Binding History.LimitSizeIndex}"
                                    Minimum="0" Maximum="{Binding History.LimitSizeIndexMax}" TickFrequency="1" />
                            <TextBlock Text="{Binding History.LimitSize, Converter={StaticResource HistoryLimitSizeConverter}}" />
                        </StackPanel>

                        <StackPanel Style="{StaticResource ItemStackPanel}" ToolTip="期間による保持制限が履歴ファイルに適用されます&#xa;アプリ動作中の履歴は制限されません">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="保存期間"/>
                            <Slider Style="{StaticResource ItemSlider}" Value="{Binding History.LimitSpanIndex}"
                                    Minimum="0" Maximum="{Binding History.LimitSpanIndexMax}" TickFrequency="1" />
                            <TextBlock Text="{Binding History.LimitSpan, Converter={StaticResource HistoryLimitSpanConverter}}" />
                        </StackPanel>

                    </StackPanel>


                    <TextBlock Text="現在の履歴数" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">
                        <TextBlock Style="{StaticResource ItemHeader}" Text="{Binding History.Items.Count}" />
                        <Button Content="履歴を削除する" Click="ClearHistoryButton_Click">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ItemButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding History.Items.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="スライドショー">
                <StackPanel Style="{StaticResource BaseStackPanel}">
                    <TextBlock Text="設定" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="ループ再生"
                                  ToolTip="フォルダーの最終ページまで再生したら先頭ページに戻ります"
                                  IsChecked="{Binding Setting.BookHubMemento.IsSlideShowByLoop}" />
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="マウス移動で表示間隔リセット"
                                  ToolTip="マウスを動かすと表示間隔タイマーがリセットされます&#xa;OFFの時は、クリック等明確なアクションでのみリセットされます"
                                  IsChecked="{Binding Setting.BookHubMemento.IsCancelSlideByMouseMove}" />

                        <StackPanel Style="{StaticResource ItemStackPanel}">
                            <TextBlock Style="{StaticResource ItemHeader}" Text="表示間隔" MinWidth="60"/>
                            <Slider Style="{StaticResource ItemSlider}" Value="{Binding Setting.BookHubMemento.SlideShowIntervalIndex}"
                                    Minimum="0" Maximum="{Binding Setting.BookHubMemento.SlideShowIntervalIndexMax}" TickFrequency="1" IsSnapToTickEnabled="True"/>
                            <TextBlock Text="{Binding Setting.BookHubMemento.SlideShowInterval, StringFormat={}{0}秒}" />
                        </StackPanel>

                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem x:Name="SusieSettingTab" Header="Susie設定" Selector.Selected="SusieSettingTab_Selected">
                <TabItem.Resources>

                    <CollectionViewSource x:Key="PluginSource" Source="{Binding SusiePluginList}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="ApiVersion" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>

                    <DataTemplate DataType="{x:Type susie:SusiePlugin}" x:Key="SusiePlugin">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnable}"/>
                            <Grid Width="20" VerticalAlignment="Center" Margin="2">
                                <Button Style="{StaticResource IconButton}"
                                                    Command="{x:Static local:SettingWindow.SusiePluginConfigCommand}" CommandParameter="{Binding}"
                                                    Visibility="{Binding HasConfigurationDlg, Converter={StaticResource BooleanToVisibilityConverter}}" >
                                    <Image Width="14" Height="14" Source="{StaticResource ic_setting_24px}"/>
                                </Button>
                            </Grid>
                            <TextBlock Text="{Binding DetailText}" ToolTip="{Binding PluginVersion}" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnable}" Value="False">
                                                <Setter Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>

                    <Style TargetType="ListBox">
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="ItemTemplate" Value="{StaticResource SusiePlugin}"/>
                        <Setter Property="Margin" Value="0,4,0,0"/>
                        <Setter Property="AllowDrop" Value="True"/>
                        <EventSetter Event="PreviewDragOver"  Handler="PluginListView_PreviewDragOver"/>
                        <EventSetter Event="Drop" Handler="PluginListView_Drop"/>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="drag:DragBehavior.IsEnable" Value="True"/>
                                    <Setter Property="drag:DragBehavior.ListBox" Value="{Binding RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </TabItem.Resources>

                <DockPanel Margin="4">
                    <CheckBox DockPanel.Dock="Top" Margin="2" Content="Susieプラグインを使用する" IsChecked="{Binding Setting.SusieMemento.IsEnableSusie}" />
                    <DockPanel IsEnabled="{Binding Setting.SusieMemento.IsEnableSusie}">
                        <nlc:FileNameBox x:Name="PluginPathTextBox" DockPanel.Dock="Top" Margin="0,2" Height="20" Text ="{Binding SusiePluginPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectDirectory="True"/>
                        <CheckBox DockPanel.Dock="Bottom" Margin="2" Content="画像表示でSusieプラグインを優先する" IsChecked ="{Binding Setting.SusieMemento.IsFirstOrderSusieImage}"/>
                        <CheckBox DockPanel.Dock="Bottom" Margin="2" Content="圧縮ファイル展開でSusieプラグインを優先する" IsChecked ="{Binding Setting.SusieMemento.IsFirstOrderSusieArchive}"/>

                        <TabControl Margin="0,4">

                            <TabItem Header="画像プラグイン">
                                <ListBox x:Name="INPluginListView" ItemsSource="{Binding INPluginList}" Tag="{Binding INPluginList}" >
                                </ListBox>
                            </TabItem>

                            <TabItem Header="書庫プラグイン">
                                <ListBox x:Name="AMPluginListView" ItemsSource="{Binding AMPluginList}" Tag="{Binding AMPluginList}" >
                                </ListBox>
                            </TabItem>

                        </TabControl>
                    </DockPanel>
                </DockPanel>
            </TabItem>

            <TabItem Header="コマンド設定" >
                <TabItem.Resources>
                    <CollectionViewSource x:Key="CommandSource" Source="{Binding CommandCollection}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Group" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </TabItem.Resources>
                <DockPanel>
                    <DockPanel DockPanel.Dock="Bottom">
                        <Grid DockPanel.Dock="Top">
                            <DockPanel LastChildFill="False" HorizontalAlignment="Left">
                                <DockPanel.Style>
                                    <Style TargetType="DockPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=CommandListView, Path=SelectedValue}" Value="{x:Null}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DockPanel.Style>
                                <Button x:Name="ShortCutSettingButton" Content="ショートカット設定" MinWidth="120" Height="30" Margin="8" Click="ShortCutSettingButton_Click"/>
                                <Button x:Name="MouseGestureSettingButton" Content="マウスジェスチャー設定" MinWidth="120" Height="30" Margin="8" Click="MouseGestureSettingButton_Click"/>
                                <Button x:Name="CommandParameterSettingButton" Content="パラメーター設定" MinWidth="120" Height="30" Margin="8" Command="{Binding ParameterSettingCommand}"/>
                            </DockPanel>
                            <Button x:Name="ResetGestureSettingButton" Content="全コマンド設定期化" MinWidth="120" Height="30" Margin="8" HorizontalAlignment="Right" Click="ResetGestureSettingButton_Click"/>
                        </Grid>

                    </DockPanel>

                    <ListView x:Name="CommandListView" ItemsSource="{Binding Source={StaticResource CommandSource}}" Foreground="Black" SelectionChanged="CommandListView_SelectionChanged">
                        <ListView.Resources>
                            <DataTemplate x:Key="listGroupTemplate">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold" Margin="0,8,0,4" />
                            </DataTemplate>
                        </ListView.Resources>
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource listGroupTemplate}"/>
                        </ListView.GroupStyle>
                        <ListView.View>
                            <GridView>

                                <GridViewColumn>
                                    <GridViewColumn.Header>
                                        <TextBlock Text="表示" ToolTip="コマンド実行時のメッセージ表示ON/OFF"/>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsShowMessage}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="コマンド" Width="200" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <DockPanel >
                                                <Grid DockPanel.Dock="Left" Width="20" VerticalAlignment="Center" Margin="2">
                                                    <Button Click="EditCommandParameterButton_Clock" Tag="{Binding}" ToolTipService.ShowOnDisabled="True">
                                                        <Button.Style>
                                                            <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding HasParameter}" Value="False">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding IsShareParameter}" Value="True">
                                                                        <Setter Property="IsEnabled" Value="False"/>
                                                                        <Setter Property="ToolTip" Value="{Binding ShareTips}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <Image Width="14" Height="14" Source="{StaticResource ic_setting_24px}"/>
                                                    </Button>
                                                </Grid>
                                                <TextBlock Text="{Binding Header}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Tips}"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="ショートカットキー" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ItemsControl ItemsSource="{Binding ShortCuts}"  ToolTip="{Binding ShortCutNote}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="{StaticResource ic_warning_48px}" Width="12" Margin="0,0,2,0" VerticalAlignment="Center">
                                                                <Image.Style>
                                                                    <Style TargetType="Image">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=IsConflict}" Value="False">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                            <StackPanel Orientation="Horizontal" Margin="0,0,2,0" VerticalAlignment="Center">
                                                                <TextBlock Text="{Binding Gesture}"/>
                                                                <TextBlock Text="{Binding Splitter}"/>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="マウスジェスチャー" Width="150">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" ToolTip="{Binding MouseGestureElement.Note}">
                                                <Image Source="{StaticResource ic_warning_48px}" Width="12" Margin="0,0,2,2" VerticalAlignment="Center">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=MouseGestureElement.IsConflict}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>

                                                <TextBlock Text="{Binding MouseGestureElement.Gesture, Converter={StaticResource MouseGestureToDispTextConverter}}"
                                                           TextTrimming="CharacterEllipsis" FontFamily="Meiryo"
                                                           Margin="0,0,2,0" VerticalAlignment="Center"/>
                                            </StackPanel>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>

            </TabItem>

            <TabItem Header="メニュー">
                <StackPanel Style="{StaticResource BaseStackPanel}">
                    <TextBlock Text="コンテキストメニュー" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}" >
                        <CheckBox x:Name="ContextMenuEnableCheckBox" Margin="2" Content="コンテキストメニューを使用する"
                              IsChecked="{Binding Setting.ViewMemento.ContextMenuSetting.IsEnabled}" />
                        <StackPanel IsEnabled="{Binding ElementName=ContextMenuEnableCheckBox, Path=IsChecked}">
                            <Button Style="{StaticResource ItemButton}" Content="コンテキストメニュー編集" Click="EditContextMenuButton_Click"/>
                            <CheckBox Style="{StaticResource ItemCheckBox}" Content="右クリック単独ではなく、Ctrl+右クリックで開くようにする"
                              IsChecked="{Binding Setting.ViewMemento.ContextMenuSetting.IsOpenByCtrl}" />
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Style="{StaticResource ItemCheckBox}" x:Name="ContextMenuGestureCheckBox"  Content="マウスジェスチャーで開くようにする"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding Setting.ViewMemento.ContextMenuSetting.IsOpenByGesture}"/>
                                <TextBlock Text="{Binding Setting.ViewMemento.ContextMenuSetting.MouseGesture, Converter={StaticResource MouseGestureToDispTextConverter}, StringFormat=: {0}}"
                                           Margin="2" TextTrimming="WordEllipsis" FontFamily="Meiryo" VerticalAlignment="Center"/>
                            </StackPanel>
                            <Button  Style="{StaticResource ItemButton}" Content="マウスジェスチャー設定" Click="GestureContextMenuButton_Click"
                                        IsEnabled="{Binding ElementName=ContextMenuGestureCheckBox, Path=IsChecked}"/>
                        </StackPanel>
                    </StackPanel>

                    <!--
                    <TextBlock Text="メインメニュー" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}" >
                        <CheckBox Style="{StaticResource ItemCheckBox}" Content="コンテキストメニューを使用する"
                              IsChecked="{Binding Setting.ViewMemento.FolderListSetting.IsVisibleBookmarkMark}" />
                    </StackPanel>
                    -->

                </StackPanel>
            </TabItem>


            <TabItem Header="詳細設定">
                <TabItem.Resources>
                    <CollectionViewSource x:Key="PreferenceSource" Source="{Binding PreferenceCollection}">
                    </CollectionViewSource>
                </TabItem.Resources>
                <DockPanel>
                    <DockPanel DockPanel.Dock="Bottom">
                        <Grid DockPanel.Dock="Top">
                            <DockPanel LastChildFill="False" HorizontalAlignment="Left">
                                <DockPanel.Style>
                                    <Style TargetType="DockPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=PreferenceListView, Path=SelectedValue}" Value="{x:Null}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DockPanel.Style>
                                <Button x:Name="PreferenceEditButton" Content="パラメータ編集" MinWidth="120" Height="30" Margin="8" Click="PreferenceEditButton_Click"/>
                            </DockPanel>
                            <Button x:Name="ResetAllPreferenceButton" Content="全パラメータ初期化" MinWidth="120" Height="30" Margin="8" HorizontalAlignment="Right" Click="ResetAllPreferenceButton_Click"/>
                        </Grid>
                    </DockPanel>
                    <ListView x:Name="PreferenceListView" ItemsSource="{Binding Source={StaticResource PreferenceSource}}" Foreground="Black">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <EventSetter Event="MouseDoubleClick" Handler="PreferenceListView_MouseDoubleClick"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source.HasCustomValue}" Value="True">
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn>
                                    <GridViewColumn.Header>
                                        <TextBlock Text="設定名" Margin="5,0" MinWidth="200"/>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}" TextTrimming="WordEllipsis" ToolTip="{Binding Tips}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn>
                                    <GridViewColumn.Header>
                                        <TextBlock Text="状態" Margin="5,0" MinWidth="50"/>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding State}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn>
                                    <GridViewColumn.Header>
                                        <TextBlock Text="型" Margin="5,0" MinWidth="50"/>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding TypeString}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn>
                                    <GridViewColumn.Header>
                                        <TextBlock Text="値" Margin="5,0" MinWidth="200"/>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>

        </TabControl>



        <Button x:Name="OkButton" Content="OK" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="80" Margin="0,0,95,10" Click="OkButton_Click" RenderTransformOrigin="0.5,0.5"/>
        <Button x:Name="CancelButton" Content="Cancel" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="80" Margin="0,0,10,10" Click="CancelButton_Click"/>
    </Grid>
</Window>

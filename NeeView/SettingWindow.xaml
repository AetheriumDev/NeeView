<!--
    Copyright (c) 2016 Mitsuhiro Ito (nee)

    This software is released under the MIT License.
    http://opensource.org/licenses/mit-license.php
-->

<Window x:Class="NeeView.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NeeView"
        xmlns:susie="clr-namespace:Susie"
        xmlns:drag="clr-namespace:DragExtensions"
        mc:Ignorable="d"
        Title="設定" Height="500" Width="700" Closed="Window_Closed" >

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:MouseGestureToDispTextConverter x:Key="MouseGestureToDispTextConverter"/>

        <Style TargetType="FrameworkElement" x:Key="Phrase">
            <Setter Property="Margin" Value="20,0,0,10"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="Header">
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>


    </Window.Resources>
    <Grid>
        <TabControl x:Name="tabControl" Margin="10,10,10,43">
            <TabItem Header="全般">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="4">

                        <TextBlock Text="基本" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox DockPanel.Dock="Top" Margin="2" Content="圧縮ファイルをサポートする"
                              IsChecked="{Binding Setting.BookHubMemento.IsSupportArchiveFile}" />
                            <CheckBox DockPanel.Dock="Top" Margin="2" Content="先読みを行う"
                              IsChecked="{Binding Setting.BookHubMemento.AllowPagePreLoad}" />
                            <CheckBox DockPanel.Dock="Top" Margin="2" Content="GIFをメディアとして再生する(アニメーションGIF)"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnableAnimatedGif}" />
                            <CheckBox DockPanel.Dock="Top" Margin="2" Content="EXIFの回転情報を反映させる"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnableExif}" />
                            <CheckBox Margin="2" Content="サポート外ファイルもページに含める"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnableNoSupportFile}" />
                            <CheckBox DockPanel.Dock="Top" Margin="2" Content="スライダーを右基準にする"
                              IsChecked="{Binding Setting.ViewMemento.IsSliderDirectionReversed}" />
                        </StackPanel>


                        <TextBlock Text="起動設定" Style="{StaticResource Header}"/>
                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Margin="2" Content="多重起動を禁止する"
                              IsChecked="{Binding Setting.ViewMemento.IsDisableMultiBoot}" />
                            <CheckBox Margin="2" Content="フルスクリーン状態を復帰する"
                              IsChecked="{Binding Setting.ViewMemento.IsSaveFullScreen}" />
                            <CheckBox Margin="2" Content="前回開いていたフォルダを開く"
                              IsChecked="{Binding Setting.ViewMemento.IsLoadLastFolder}" />
                            <CheckBox Margin="2" Content="スライドショーの再生を開始する"
                              IsChecked="{Binding Setting.ViewMemento.IsAutoPlaySlideShow}" />
                        </StackPanel>


                        <TextBlock Text="その他" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Margin="2" Content="「開く」を現在開いているフォルダから始める" ToolTip="[ファイル(F)]>[開く(O)]で開くフォルダです"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnarbleCurrentDirectory}" />
                            <CheckBox Margin="2" Content="ページが終わったら次のフォルダに移動する"
                              IsChecked="{Binding Setting.BookHubMemento.IsEnabledAutoNextFolder}" />
                            <CheckBox Margin="2" Content="ページがない場合、サブフォルダも読み込むか問い合わせる"
                              IsChecked="{Binding Setting.BookHubMemento.IsConfirmRecursive}" />
                            <CheckBox Margin="2" Content="新しいフォルダーを開くときにページ設定を標準に戻す" ToolTip="新しいフォルダーを開いた時に[ページ(P)]の設定を初期値に戻します&#x0a;「サブフォルダも読み込む」はこの設定にかかわらずOFFになります"
                              IsChecked="{Binding Setting.BookHubMemento.IsUseBookMementoDefault}" />
                        </StackPanel>



                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="表示設定">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="4">

                        <TextBlock Text="通知表示" Style="{StaticResource Header}"/>
                        <StackPanel Style="{StaticResource Phrase}">
                            <StackPanel.Resources>
                                <Style TargetType="ComboBox">
                                    <Setter Property="MinWidth" Value="120"/>
                                </Style>
                            </StackPanel.Resources>
                            <DockPanel Margin="2" LastChildFill="False">
                                <TextBlock MinWidth="100" Text="通知を" VerticalAlignment="Center" Margin="2"/>
                                <ComboBox ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.NoticeShowMessageStyle}" />
                            </DockPanel>

                            <DockPanel Margin="2" LastChildFill="False">
                                <TextBlock MinWidth="100" Text="コマンド実行を" VerticalAlignment="Center" Margin="2"/>
                                <ComboBox ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.CommandShowMessageStyle}" />
                            </DockPanel>


                            <DockPanel Margin="2" LastChildFill="False">
                                <TextBlock MinWidth="100" Text="マウスジェスチャーを" VerticalAlignment="Center" Margin="2"/>
                                <ComboBox ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.GestureShowMessageStyle}" />
                            </DockPanel>

                            <DockPanel Margin="2" LastChildFill="False">
                                <TextBlock MinWidth="100" Text="Now Loading を" VerticalAlignment="Center" Margin="2"/>
                                <ComboBox ItemsSource="{Binding ShowMessageTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.ViewMemento.NowLoadingShowMessageStyle}" />
                            </DockPanel>



                        </StackPanel>

                        <TextBlock Text="パネル外観" Style="{StaticResource Header}"/>
                        <StackPanel Style="{StaticResource Phrase}">
                            <DockPanel Margin="2" LastChildFill="False">
                                <TextBlock MinWidth="100" Text="パネルの色" VerticalAlignment="Center" Margin="2"/>
                                <ComboBox ItemsSource="{Binding PanelColorList}" SelectedValuePath="Key" DisplayMemberPath="Value" MinWidth="120"
                                  SelectedValue="{Binding Setting.ViewMemento.PanelColor}" />
                            </DockPanel>
                            <StackPanel Margin="2" Orientation="Horizontal">
                                <TextBlock Text="不透明度："/>
                                <TextBlock Text="{Binding Setting.ViewMemento.PanelOpacity, StringFormat={}{0}%}" Width="32" Margin="5,0" TextAlignment="Right"/>
                                <Slider x:Name="PanelOpacitySlider" Width="200" Value="{Binding Setting.ViewMemento.PanelOpacity}"
                                    Minimum="0" Maximum="100" TickFrequency="5" IsSnapToTickEnabled="True"/>
                            </StackPanel>

                        </StackPanel>

                        <TextBlock Text="フォルダリスト" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Margin="2" Content="ブックマーク記号を表示する"
                              IsChecked="{Binding Setting.ViewMemento.FolderListSetting.IsVisibleBookmarkMark}" />
                            <CheckBox Margin="2" Content="履歴記号を表示する"
                              IsChecked="{Binding Setting.ViewMemento.FolderListSetting.IsVisibleHistoryMark}" />
                        </StackPanel>

                        <TextBlock Text="ファイル情報" Style="{StaticResource Header}"/>

                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Margin="2" Content="EXIFの日時を使用する"
                              IsChecked="{Binding Setting.ViewMemento.FileInfoSetting.IsUseExifDateTime}" />
                            <CheckBox Margin="2" Content="1ピクセルあたりのビット数を表示する"
                              IsChecked="{Binding Setting.ViewMemento.FileInfoSetting.IsVisibleBitsPerPixel}" />
                            <CheckBox Margin="2" Content="ローダー情報を表示する"
                              IsChecked="{Binding Setting.ViewMemento.FileInfoSetting.IsVisibleLoader}" />
                        </StackPanel>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            
            <TabItem Header="ビュー設定">
                <StackPanel Margin="4">
                    <TextBlock Text="ビュー操作" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">

                        <CheckBox Margin="2" Content="移動をウィンドウ内に制限する"
                              IsChecked="{Binding Setting.ViewMemento.IsLimitMove}" />
                        <CheckBox Margin="2" Content="表示開始位置を画像の中心基準にする"
                              ToolTip="OFFの時は、見開きモードによって右上基準、左上基準になります。"
                              IsChecked="{Binding Setting.ViewMemento.IsViewStartPositionCenter}" />
                        <CheckBox Margin="2" Content="回転、拡縮、反転の基準を画像の中心にする"
                              IsChecked="{Binding Setting.ViewMemento.IsControlCenterImage}" />
                        <CheckBox Margin="2" Content="回転を45度単位にする"
                              IsChecked="{Binding Setting.ViewMemento.IsAngleSnap}" />
                        <CheckBox Margin="2" Content="ページを変更しても拡縮をキープする"
                              IsChecked="{Binding Setting.ViewMemento.IsKeepScale}" />
                        <CheckBox Margin="2" Content="ページを変更しても回転をキープする"
                              IsChecked="{Binding Setting.ViewMemento.IsKeepAngle}" />
                        <CheckBox Margin="2" Content="ページを変更しても反転をキープする"
                              IsChecked="{Binding Setting.ViewMemento.IsKeepFlip}" />
                    </StackPanel>

                    <TextBlock Text="ドラッグ操作" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="StackPanel">
                                <Setter Property="Orientation" Value="Horizontal"/>
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                            <Style x:Key="DragGroup" TargetType="StackPanel">
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Width" Value="100"/>
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding DragActionTypeList}"/>
                                <Setter Property="SelectedValuePath" Value="Key"/>
                                <Setter Property="DisplayMemberPath" Value="Value"/>
                                <Setter Property="Width" Value="150"/>
                            </Style>
                        </StackPanel.Resources>

                        <!-- LeftDrag -->
                        <StackPanel Style="{StaticResource DragGroup}">
                            <StackPanel >
                                <TextBlock Text="LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionNone}" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Ctrl+LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionControl}" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Shift+LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionShift}" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Alt+LeftDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionAlt}" />
                            </StackPanel>
                        </StackPanel>
                        
                        <!-- MiddleDrag -->
                        <StackPanel Style="{StaticResource DragGroup}" Margin="50,0">
                            <StackPanel>
                                <TextBlock Text="MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleNone}" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Ctrl+MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleControl}" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Shift+MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleShift}" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="Alt+MiddleDrag"/>
                                <ComboBox SelectedValue="{Binding DragActionMiddleAlt}" />
                            </StackPanel>
                        </StackPanel>

                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="外部連携">
                <StackPanel Margin="4">

                    <TextBlock Text="外部アプリ設定" Style="{StaticResource Header}"/>

                    <StackPanel Style="{StaticResource Phrase}">
                        <DockPanel Margin="2" LastChildFill="True">
                            <TextBlock MinWidth="100" Text="プログラム：" VerticalAlignment="Center" Margin="2"/>
                            <local:DirectoryNameBox x:Name="ExAppPath" Margin="2" SelectDirectory="False" Title="プログラムの選択" Filter="EXE|*.exe|すべてのファイル|*.*"
                            Note="指定がない場合は拡張子に関連付けられたアプリを起動します"
                            Text="{Binding Setting.BookHubMemento.ExternalApplication.Command, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DockPanel>
                        <DockPanel Margin="2,2,2,5" LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ExAppPath, Path=Text}" Value="">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <TextBlock MinWidth="100" Text="パラメーター：" VerticalAlignment="Center" Margin="2"/>
                            <TextBox Text="{Binding ExternalApplicationParam}" Margin="2" ToolTip="$FILE がファイルパスに置換されます。&#xa;定義されていない場合 &quot;$FILE&quot; が自動追加されます"/>
                        </DockPanel>
                        <DockPanel Margin="2" LastChildFill="True">
                            <TextBlock MinWidth="100" Text="2ページの場合" VerticalAlignment="Center" Margin="2"/>
                            <ComboBox ItemsSource="{Binding MultiPageOptionTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.BookHubMemento.ExternalApplication.MultiPageOption}" MinWidth="200" HorizontalAlignment="Left" Margin="0"/>
                        </DockPanel>
                        <DockPanel Margin="2" LastChildFill="True">
                            <TextBlock MinWidth="100" Text="圧縮ファイルの場合" VerticalAlignment="Center" Margin="2"/>
                            <ComboBox x:Name="ExAppArchiveProcess" ItemsSource="{Binding ArchiveOptionTypeList}" SelectedValuePath="Key" DisplayMemberPath="Value"
                                  SelectedValue="{Binding Setting.BookHubMemento.ExternalApplication.ArchiveOption}" MinWidth="200" HorizontalAlignment="Left" Margin="0"/>
                        </DockPanel>
         
                        <!-- 出力フォルダ指定
                    <DockPanel Margin="2" LastChildFill="True">
                        <DockPanel.Style>
                            <Style TargetType="DockPanel">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ExAppArchiveProcess, Path=SelectedValue}"  Value="SendExtractFile">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DockPanel.Style>
                        <TextBlock MinWidth="100" Text="    > 出力フォルダ" VerticalAlignment="Center" Margin="2"/>
                        <local:DirectoryNameBox Margin="2" Text ="{Binding Setting.BookHubMemento.ExternalApplication.ExtractFolderPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </DockPanel>
                    -->
                    </StackPanel>


                    <TextBlock Text="ブラウザからのドラッグ&amp;ドロップ" Style="{StaticResource Header}"/>

                    <StackPanel Style="{StaticResource Phrase}">
                        <DockPanel Margin="2" LastChildFill="True">
                            <TextBlock MinWidth="100" Text="画像保存フォルダ：" VerticalAlignment="Center" Margin="2"/>
                            <local:DirectoryNameBox x:Name="DownloadPath" Margin="2" SelectDirectory="True" Title="保存先フォルダの選択" 
                            Note="指定がない場合は一時フォルダが使用されます"
                            Text="{Binding Setting.ViewMemento.UserDownloadPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DockPanel>
                    </StackPanel>


                    <TextBlock Text="ファイル保存" Style="{StaticResource Header}"/>

                    <StackPanel Style="{StaticResource Phrase}">
                        <CheckBox Margin="2" Content="前回保存したフォルダを記憶する"
                              IsChecked="{Binding Setting.ExporterMemento.IsEnableExportFolder}" />
                        <StackPanel Margin="2" Orientation="Horizontal">
                            <TextBlock Text="JPEG品質：" ToolTip="変換が必要な場合にのみ使用されます"/>
                            <TextBlock Text="{Binding Setting.ExporterMemento.QualityLevel}" Width="20" Margin="10,0" TextAlignment="Right"/>
                            <Slider x:Name="QualityLevelSlider" Width="200" Value="{Binding Setting.ExporterMemento.QualityLevel}"
                                    Minimum="5" Maximum="100" TickFrequency="5" IsSnapToTickEnabled="True"/>
                        </StackPanel>
                    </StackPanel>

                </StackPanel>

            </TabItem>

            <TabItem Header="履歴設定">
                <Grid Margin="4">
                    <StackPanel>
                        <TextBlock Text="設定" Style="{StaticResource Header}"/>
                        <StackPanel Style="{StaticResource Phrase}">
                            <CheckBox Margin="2" Content="履歴からページ設定を復元する"
                                      IsChecked="{Binding Setting.BookHubMemento.IsEnableHistory}" />
                            <CheckBox Margin="2" Content="ページ番号のみ復元する"
                                      IsChecked="{Binding Setting.BookHubMemento.IsRecoveryPageOnly}" >
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Setting.BookHubMemento.IsEnableHistory}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>

                        </StackPanel>
                        <TextBlock Text="履歴保持数" Style="{StaticResource Header}"/>
                        <StackPanel Style="{StaticResource Phrase}">
                            <DockPanel Margin="2" LastChildFill="False">
                                <TextBlock Text="現在の履歴数：" VerticalAlignment="Center" Margin="2"/>
                                <TextBlock Text="{Binding History.Items.Count}" VerticalAlignment="Center" Margin="2"/>
                            </DockPanel>

                            <Button HorizontalAlignment="Right" VerticalAlignment="Bottom" DockPanel.Dock="Right" Content="履歴を削除する" Padding="16,8" Margin="10,0" Click="ClearHistoryButton_Click">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding History.Items.Count}" Value="0">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="スライドショー">
                <StackPanel Margin="4">
                    <TextBlock Text="設定" Style="{StaticResource Header}"/>
                    <StackPanel Style="{StaticResource Phrase}">
                        <CheckBox Margin="2" Content="ループ再生"
                              IsChecked="{Binding Setting.BookHubMemento.IsSlideShowByLoop}" />
                        <DockPanel Margin="2" LastChildFill="False">
                            <TextBlock Text="表示間隔：" VerticalAlignment="Center" Margin="2,0,10,0"/>
                            <ComboBox Width="80" ItemsSource="{Binding SlideShowIntervalList}"
                                  SelectedValue="{Binding Setting.BookHubMemento.SlideShowInterval}" />
                            <TextBlock Text="秒" VerticalAlignment="Center" Margin="2,0"/>
                        </DockPanel>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem x:Name="SusieSettingTab" Header="Susie設定" Selector.Selected="SusieSettingTab_Selected">
                <TabItem.Resources>

                    <CollectionViewSource x:Key="PluginSource" Source="{Binding SusiePluginList}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="ApiVersion" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>

                    <DataTemplate DataType="{x:Type susie:SusiePlugin}" x:Key="SusiePlugin">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnable}"/>
                            <Grid Width="20" VerticalAlignment="Center" Margin="2">
                                <Button Style="{StaticResource IconButton}"
                                                    Command="{x:Static local:SettingWindow.SusiePluginConfigCommand}" CommandParameter="{Binding}"
                                                    Visibility="{Binding HasConfigurationDlg, Converter={StaticResource BooleanToVisibilityConverter}}" >
                                    <Image Width="14" Height="14" Source="{StaticResource ic_setting_24px}"/>
                                </Button>
                            </Grid>
                            <TextBlock Text="{Binding DetailText}" ToolTip="{Binding PluginVersion}" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnable}" Value="False">
                                                <Setter Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>

                    <Style TargetType="ListBox">
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="ItemTemplate" Value="{StaticResource SusiePlugin}"/>
                        <Setter Property="Margin" Value="0,4,0,0"/>
                        <Setter Property="AllowDrop" Value="True"/>
                        <EventSetter Event="PreviewDragOver"  Handler="PluginListView_PreviewDragOver"/>
                        <EventSetter Event="Drop" Handler="PluginListView_Drop"/>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="drag:DragBehavior.IsEnable" Value="True"/>
                                    <Setter Property="drag:DragBehavior.ListBox" Value="{Binding RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </TabItem.Resources>

                <DockPanel Margin="4">
                    <CheckBox DockPanel.Dock="Top" Margin="2" Content="Susieプラグインを使用する" IsChecked="{Binding Setting.SusieMemento.IsEnableSusie}" />
                    <DockPanel IsEnabled="{Binding Setting.SusieMemento.IsEnableSusie}">
                        <local:DirectoryNameBox x:Name="PluginPathTextBox" DockPanel.Dock="Top" Margin="0,2" Text ="{Binding SusiePluginPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <CheckBox DockPanel.Dock="Bottom" Margin="2" Content="画像表示でSusieプラグインを優先する" IsChecked ="{Binding Setting.SusieMemento.IsFirstOrderSusieImage}"/>
                        <CheckBox DockPanel.Dock="Bottom" Margin="2" Content="圧縮ファイル展開でSusieプラグインを優先する" IsChecked ="{Binding Setting.SusieMemento.IsFirstOrderSusieArchive}"/>

                        <TabControl Margin="0,4">

                            <TabItem Header="画像プラグイン">
                                <ListBox x:Name="INPluginListView" ItemsSource="{Binding INPluginList}" Tag="{Binding INPluginList}" >
                                </ListBox>
                            </TabItem>

                            <TabItem Header="書庫プラグイン">
                                <ListBox x:Name="AMPluginListView" ItemsSource="{Binding AMPluginList}" Tag="{Binding AMPluginList}" >
                                </ListBox>
                            </TabItem>

                        </TabControl>
                    </DockPanel>
                </DockPanel>
            </TabItem>

            <TabItem Header="コマンド設定" >
                <TabItem.Resources>
                    <CollectionViewSource x:Key="CommandSource" Source="{Binding CommandCollection}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Group" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </TabItem.Resources>
                <DockPanel>
                    <DockPanel DockPanel.Dock="Bottom">
                        <Grid DockPanel.Dock="Top">
                            <DockPanel LastChildFill="False" HorizontalAlignment="Left">
                                <DockPanel.Style>
                                    <Style TargetType="DockPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=CommandListView, Path=SelectedValue}" Value="{x:Null}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DockPanel.Style>
                                <Button x:Name="ShortCutSettingButton" Content="ショートカットキー設定" MinWidth="120" Height="30" Margin="8" Click="ShortCutSettingButton_Click"/>
                                <Button x:Name="MouseGestureSettingButton" Content="マウスジェスチャー設定" MinWidth="120" Height="30" Margin="8" Click="MouseGestureSettingButton_Click"/>
                            </DockPanel>
                            <Button x:Name="ResetGestureSettingButton" Content="全コマンド設定期化" MinWidth="120" Height="30" Margin="8" HorizontalAlignment="Right" Click="ResetGestureSettingButton_Click"/>
                        </Grid>

                    </DockPanel>

                    <ListView x:Name="CommandListView" ItemsSource="{Binding Source={StaticResource CommandSource}}" Foreground="Black">
                        <ListView.Resources>
                            <DataTemplate x:Key="listGroupTemplate">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold" Margin="0,8,0,4" />
                            </DataTemplate>
                        </ListView.Resources>
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource listGroupTemplate}"/>
                        </ListView.GroupStyle>
                        <ListView.View>
                            <GridView>

                                <GridViewColumn Header="表示" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsShowMessage}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="切替" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsToggled}" Visibility="{Binding ToggleVisibility}" IsEnabled="{Binding IsToggleEditable}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="コマンド" Width="200">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Header}" TextTrimming="WordEllipsis" ToolTip="{Binding Tips}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="ショートカットキー" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ShortCut}" TextTrimming="WordEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="マウスジェスチャー" Width="150">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding MouseGesture, Converter={StaticResource MouseGestureToDispTextConverter}}" TextTrimming="WordEllipsis" FontFamily="Meiryo" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>

            </TabItem>
        </TabControl>

        <Button x:Name="OkButton" Content="OK" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="80" Margin="0,0,95,10" Click="OkButton_Click" RenderTransformOrigin="0.5,0.5"/>
        <Button x:Name="CancelButton" Content="Cancel" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="80" Margin="0,0,10,10" Click="CancelButton_Click"/>
    </Grid>
</Window>

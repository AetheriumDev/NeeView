<!--
    Copyright (c) 2016 Mitsuhiro Ito (nee)

    This software is released under the MIT License.
    http://opensource.org/licenses/mit-license.php
-->

<Window x:Class="NeeView.InputTouchSettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NeeView"
        mc:Ignorable="d"
        Style="{StaticResource ToolDialogStyle}"
        Title="{Binding Header, StringFormat={}タッチ設定 - {0}}" Height="400" Width="400">

    <Window.Resources>

        <local:IsNullConverter x:Key="IsNullConverter"/>

    </Window.Resources>


    <Grid>
        <DockPanel Margin="10,10,10,43">
            <DockPanel DockPanel.Dock="Bottom">
                <TextBlock Text="新しい設定" VerticalAlignment="Center" MinWidth="90"/>

                <Button DockPanel.Dock="Right" Width="20" VerticalAlignment="Center" Margin="2" Command="{Binding ClearCommand}">
                    <TextBlock Text="✕" VerticalAlignment="Center"/>
                </Button>

                <DockPanel ToolTip="{Binding GestureToken.OverlapsText}">

                    <Image Source="{StaticResource ic_warning_48px}" Width="12" Margin="0,0,2,2" VerticalAlignment="Center">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=GestureToken.IsConflict}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <TextBox x:Name="GestureText" Margin="2" IsReadOnly="True" FontFamily="Meiryo" VerticalAlignment="Center"
                         Text="{Binding GestureToken.Gesture}"/>
                </DockPanel>

            </DockPanel>
            <DockPanel DockPanel.Dock="Bottom">
                <TextBlock Text="現在の設定"  VerticalAlignment="Center" MinWidth="90"/>
                <Grid Width="12" Margin="0,0,2,2"/>
                <TextBox DockPanel.Dock="Bottom" x:Name="OldGestureText" Margin="2" FontFamily="Meiryo" VerticalAlignment="Center" IsReadOnly="True" IsHitTestVisible="False" BorderBrush="Transparent"
                           Text="{Binding OriginalGesture}" />
            </DockPanel>

            <Grid DockPanel.Dock="Top">
                <ToggleButton HorizontalAlignment="Right" x:Name="WindowHelp" Margin="0" Width="20" Height="20" Style="{StaticResource IconToggleButton}">
                    <Image Width="14" Height="14" Source="{StaticResource ic_help_24px}"/>
                </ToggleButton>
            </Grid>
            <Popup IsOpen="{Binding ElementName=WindowHelp, Path=IsChecked}" PlacementTarget="{Binding ElementName=WindowHelp}" Placement="Top" HorizontalAlignment="Right">
                <Border BorderBrush="Gray" BorderThickness="1" Background="LightYellow">
                    <TextBlock Margin="10">
                                タッチするエリアを区別します。<LineBreak/>
                                フリック操作はジェスチャーで代用してください
                    </TextBlock>
                </Border>
            </Popup>


            <Grid x:Name="GestureBox" Margin="2" Background="AliceBlue">
                <Rectangle Stroke="LightGray" StrokeThickness="1"/>
                <Grid IsHitTestVisible="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Line Grid.Column="1" X1="0" X2="0" Y1="0" Y2="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight}" Stroke="LightSteelBlue" StrokeThickness="1" StrokeDashArray="2,2" UseLayoutRounding="True"/>
                    <TextBlock Text="Left" Grid.Column="0" Margin="2" Foreground="LightSteelBlue"/>
                    <TextBlock Text="Right" Grid.Column="1" Margin="2" Foreground="LightSteelBlue" HorizontalAlignment="Right"/>
                </Grid>
                <Grid IsHitTestVisible="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="1" Grid.Row="0">
                        <Rectangle Stroke="LightSteelBlue" StrokeThickness="1" StrokeDashArray="2,2"  Fill="AliceBlue"/>
                        <TextBlock Text="Center" Grid.Column="0" Margin="2" Foreground="LightSteelBlue"/>
                    </Grid>
                </Grid>
                <TextBlock Text="ここでタッチ入力" VerticalAlignment="Center" TextAlignment="Center" Foreground="Gray"/>
            </Grid>
        </DockPanel>
        <Button x:Name="OkButton" Content="OK" Width="80" Height="28" Margin="0,0,95,10" VerticalAlignment="Bottom" HorizontalAlignment="Right" Click="OkButton_Click"/>
        <Button x:Name="CancelButton" Content="Cancel" Width="80" Height="28" Margin="0,0,10,10" VerticalAlignment="Bottom" HorizontalAlignment="Right" Click="CancelButton_Click"/>
    </Grid>


</Window>

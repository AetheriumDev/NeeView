<UserControl x:Class="NeeView.Setting.InputGestureSettingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeeView.Setting"
             xmlns:nv="clr-namespace:NeeView"
             xmlns:properties="clr-namespace:NeeView.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="460">

    <UserControl.Resources>
        <Style x:Key="ButtonBase" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{StaticResource NVBorderFocusVisual}" />
        </Style>
        <Style x:Key="InputBox" TargetType="TextBox">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="AliceBlue"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#FFFFEECC" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <nv:IsNullConverter x:Key="IsNullConverter"/>
    </UserControl.Resources>

    <Border BorderBrush="Gray" BorderThickness="1" Margin="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="59*"/>
                <ColumnDefinition Width="64*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0">

                <StackPanel VerticalAlignment="Top">
                    <TextBlock x:Name="textBlock" Margin="10" TextWrapping="Wrap" Text="{x:Static properties:Resources.InputGestureControl_LabelShortcut}" VerticalAlignment="Top" />
                    <Grid Height="40" VerticalAlignment="Top" Margin="10,0" >
                        <TextBox x:Name="KeyGestureBox" Style="{StaticResource InputBox}" PreviewKeyDown="KeyGestureBox_PreviewKeyDown" IsTabStop="False"/>

                        <TextBlock x:Name="KeyGestureText"  VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False" Foreground="#222"/>
                        <TextBlock Text="{x:Static properties:Resources.InputGestureControl_InputShortcut}" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=KeyGestureText, Path=Text}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Button x:Name="AddKeyGestureButton" Content="{x:Static properties:Resources.Word_Add}" HorizontalAlignment="Right" Margin="10" VerticalAlignment="Top" Padding="10,0" MinWidth="76" Height="30" Click="AddKeyGestureButton_Click" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=KeyGestureText, Path=Text}" Value="">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <StackPanel>
                    <TextBlock Margin="10" TextWrapping="Wrap" Text="{x:Static properties:Resources.InputGestureControl_LabelMouse}" Height="16" />
                    <Border x:Name="MouseGestureBox" Margin="10,0" Height="40"
                                BorderThickness="1" BorderBrush="LightGray"
                                 PreviewMouseDown="MouseGestureBox_PreviewMouseDown"
                                 PreviewMouseWheel="MouseGestureBox_PreviewMouseWheel">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="AliceBlue"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFFFEECC" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <TextBlock x:Name="MouseGestureText"  VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False" Foreground="#222"/>
                            <TextBlock Text="{x:Static properties:Resources.InputGestureControl_InputMouse}" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=MouseGestureText, Path=Text}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>

                    <Button x:Name="AddMouseGestureButton" Content="{x:Static properties:Resources.Word_Add}" HorizontalAlignment="Right" Margin="10" Padding="10,0" Height="30" MinWidth="76" Click="AddMouseGestureButton_Click" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=MouseGestureText, Path=Text}" Value="">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>
            
            <Grid Grid.Column="1">
                <ListBox x:Name="InputGestureList" ItemsSource="{Binding GestureTokens}" Margin="10,10,10,45" FocusVisualStyle="{StaticResource NVBorderFocusVisual}">      
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" ToolTip="{Binding OverlapsText}">
                                <Image Source="{StaticResource ic_warning_48px}" Width="12" VerticalAlignment="Center">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding OverlapsText, Converter={StaticResource IsNullConverter}}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock Text="{Binding Gesture}" VerticalAlignment="Center" Margin="2,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <Button x:Name="ConflictButton" Content="{x:Static properties:Resources.InputGestureControl_ButtonConflict}" HorizontalAlignment="Right" Margin="10,10,105,10" Padding="10,0" MinWidth="85" Height="30" VerticalAlignment="Bottom" Click="ConflictButton_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=InputGestureList, Path=SelectedValue.OverlapsText}" Value="{x:Null}" >
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="DeleteButton" Content="{x:Static properties:Resources.Word_Remove}" HorizontalAlignment="Right" Margin="10,0,10,10" Padding="10,0" MinWidth="85" Height="30" VerticalAlignment="Bottom" Click="DeleteButton_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=InputGestureList, Path=SelectedValue}" Value="{x:Null}" >
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

        </Grid>
    </Border>

</UserControl>

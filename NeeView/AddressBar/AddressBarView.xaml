<UserControl x:Class="NeeView.AddressBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeeView"
             xmlns:properties="clr-namespace:NeeView.Properties"
             mc:Ignorable="d" 
             Background="{DynamicResource MenuBar.Background}"
             Foreground="{DynamicResource MenuBar.Foreground}"
             BorderBrush="{DynamicResource MenuBar.Border}"
             d:DesignHeight="50" d:DesignWidth="600">

    <UserControl.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/ArrowIcons.xaml" />
                <ResourceDictionary Source="/Styles/MenuIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <local:BooleanToVisibilityConverter x:Key="BooleanToInverseVisibilityConverter" True="Collapsed" False="Visible" />
            <local:SortModeToStringConverter x:Key="SortModeToStringConverter" />
            <local:SortModeToVisibilityConverter x:Key="SortModeToVisibilityConverter" />

            <Style x:Key="HistoryMenuItemContainerStyle" TargetType="MenuItem">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Value.DispName}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Command" Value="{Binding DataContext.MoveToHistory, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                <Setter Property="CommandParameter" Value="{Binding}" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="Root" MinHeight="32" KeyboardNavigation.TabNavigation="Local">
        <Grid.Resources>
            <Style x:Key="AddressIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
                <Setter Property="Width" Value="24"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="IsTabStop" Value="True"/>
                <Setter Property="Margin" Value="4,0"/>
            </Style>
        </Grid.Resources>

        <DockPanel VerticalAlignment="Top" Margin="2,2">

            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" UseLayoutRounding="True">

                <Button Style="{StaticResource AddressIconButton}" Command="{Binding BookCommands[TogglePageMode]}" TabIndex="20">
                    <Image Width="18" Height="18">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="{StaticResource ic_looks_one_24px}"/>
                                <Setter Property="ToolTip" Value="{x:Static properties:Resources.PageMode_SinglePage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding BookSetting.PageMode}"  Value="WidePage">
                                        <Setter Property="Source" Value="{StaticResource ic_looks_two_24px}"/>
                                        <Setter Property="ToolTip" Value="{x:Static properties:Resources.PageMode_WidePage}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>

                <Button Style="{StaticResource AddressIconButton}" Command="{Binding BookCommands[ToggleBookReadOrder]}" TabIndex="21" >
                    <Grid Width="22" Height="18" Background="#0000">
                        <Image Width="18" Height="18">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="{StaticResource ic_left_to_right_24px}"/>
                                    <Setter Property="ToolTip" Value="{x:Static properties:Resources.PageReadOrder_LeftToRight}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BookSetting.BookReadOrder}"  Value="RightToLeft">
                                            <Setter Property="Source" Value="{StaticResource ic_right_to_left_24px}"/>
                                            <Setter Property="ToolTip" Value="{x:Static properties:Resources.PageReadOrder_RightToLeft}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Button>

                <Button x:Name="PageSortModeButton" Style="{StaticResource AddressIconButton}" TabIndex="22"
                        Click="PageSortModeButton_Click"
                        ToolTip="{Binding BookSetting.SortMode,Converter={StaticResource SortModeToStringConverter}}">
                    <Grid Width="20" Height="18">
                        <local:PageSortModeIcon PageSortMode="{Binding BookSetting.SortMode}" />
                    </Grid>
                </Button>
                <Popup x:Name="PageSortModePopup" PlacementTarget="{Binding ElementName=PageSortModeButton}" StaysOpen="False" AllowsTransparency="True" Opened="Popup_Opened" Closed="Popup_Closed">
                    <Grid Margin="5">
                        <Grid.Effect>
                            <DropShadowEffect Opacity="0.5" ShadowDepth="2"/>
                        </Grid.Effect>
                        <local:PageSortModePalette ParentPopup="{Binding ElementName=PageSortModePopup}" SelfClosed="PageSortModePopup_SelfClosed"/>
                    </Grid>
                </Popup>

            </StackPanel>

            <Button x:Name="PrevHistoryButton" Command="{Binding BookCommands[PrevBookHistory]}" Style="{StaticResource AddressIconButton}" TabIndex="1"
                                    ContextMenuService.Placement="Bottom"
                                    ContextMenuOpening="PrevHistoryButton_ContextMenuOpening"
                                    ToolTip="{x:Static properties:Resources.AddressBar_Back_ToolTip}">
                <Image Source="{StaticResource ic_arrow_back_24px}" Width="16" Height="16"/>
                <Button.ContextMenu>
                    <ContextMenu ItemContainerStyle="{StaticResource HistoryMenuItemContainerStyle}" />
                </Button.ContextMenu>
            </Button>
            <Button x:Name="NextHistoryButton" Command="{Binding BookCommands[NextBookHistory]}"  Style="{StaticResource AddressIconButton}" TabIndex="2"
                                    ContextMenuService.Placement="Bottom"
                                    ContextMenuOpening="NextHistoryButton_ContextMenuOpening"
                                    ToolTip="{x:Static properties:Resources.AddressBar_Next_ToolTip}">
                <Image Source="{StaticResource ic_arrow_forward_24px}" Width="16" Height="16" />
                <Button.ContextMenu>
                    <ContextMenu ItemContainerStyle="{StaticResource HistoryMenuItemContainerStyle}" />
                </Button.ContextMenu>
            </Button>
            <Button x:Name="MoveToParentButton" Command="{Binding BookCommands[MoveToParentBook]}"  Style="{StaticResource AddressIconButton}" TabIndex="3"
                                    ToolTip="{x:Static properties:Resources.AddressBar_Up_ToolTip}">
                <Image Source="{StaticResource ic_arrow_up_24px}" Width="16" Height="16" />

            </Button>

            <Grid>
                <Button Command="{Binding BookCommands[ReLoad]}" Style="{StaticResource AddressIconButton}" TabIndex="4"
                        Visibility="{Binding IsLoading, Converter={StaticResource BooleanToInverseVisibilityConverter}}"
                        ToolTip="{x:Static properties:Resources.AddressBar_ReLoad_ToolTip}">
                    <Image Source="{StaticResource ic_refresh_24px}" Width="16" Height="16" />
                </Button>
                <Button Command="{Binding BookCommands[Unload]}" Style="{StaticResource AddressIconButton}" TabIndex="5"
                        Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                        ToolTip="{x:Static properties:Resources.AddressBar_Unload_ToolTip}">
                    <Image Source="{StaticResource ic_close_24px}" Width="16" Height="16" />
                </Button>
            </Grid>

            <Border x:Name="AddressTextBoxBase" BorderThickness="1" MinHeight="26" Margin="10,0">
                <Border.Resources>
                    <local:BrushAddStaticOpacityConverter x:Key="BrushAddOpacityConverter" Opacity="0.50" />
                    <local:BindingProxy x:Key="TextBoxBackground" Data="{DynamicResource TextBox.Background}" />
                </Border.Resources>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="{Binding Path=Data, Source={StaticResource TextBoxBackground}, Converter={StaticResource BrushAddOpacityConverter}}" />
                        <Setter Property="Background" Value="{Binding Path=Data, Source={StaticResource TextBoxBackground}, Converter={StaticResource BrushAddOpacityConverter}}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=AddressTextBox, Path=IsKeyboardFocusWithin}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource Control.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource TextBox.Background}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <DockPanel Margin="0">
                    <Button DockPanel.Dock="Right" Style="{StaticResource AddressIconButton}" Margin="0" Command="{Binding BookCommands[ToggleBookmark]}" TabIndex="13">
                        <TextBlock FontSize="20" FontFamily="Meyrio">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="☆"/>
                                    <Setter Property="Foreground" Value="{DynamicResource MenuBar.Foreground}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Model.IsBookmark}" Value="True">
                                            <Setter Property="Text" Value="★"/>
                                            <Setter Property="Foreground" Value="{DynamicResource BookmarkIcon.Foreground}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Button>

                    <DockPanel x:Name="AddressGroup">
                        <Button x:Name="BookButton" Style="{StaticResource IconButton}" Width="26" TabIndex="11"
                                Click="BookButton_Click"
                                PreviewMouseLeftButtonDown="BookButton_MouseLeftButtonDown"
                                PreviewMouseLeftButtonUp="BookButton_MouseLeftButtonUp"
                                PreviewMouseMove="BookButton_MouseMove"
                                QueryContinueDrag="BookButton_QueryContinueDrag">
                            <Image Source="{StaticResource ic_info_outline_24px}" Width="16"/>
                        </Button>
                        <TextBox x:Name="AddressTextBox" Text="{Binding Model.Address}" BorderThickness="0" VerticalAlignment="Center" TabIndex="12" KeyDown="AddressTextBox_KeyDown"
                                 Background="Transparent"/>
                    </DockPanel>

                </DockPanel>
            </Border>

        </DockPanel>

        <Popup x:Name="BookPopup" PlacementTarget="{Binding ElementName=BookButton}" StaysOpen="False" AllowsTransparency="True" Opened="Popup_Opened" Closed="Popup_Closed">
            <Border Margin="5" Background="{DynamicResource Menu.Background}" BorderBrush="{DynamicResource Menu.Border}" BorderThickness="1">
                <Border.Effect>
                    <DropShadowEffect Opacity="0.5" ShadowDepth="2" />
                </Border.Effect>
                <local:BookPopupContent DataContext="{Binding Model}" ParentPopup="{Binding ElementName=BookPopup}" SelfClosed="BookPopup_SelfClosed" />
            </Border>
        </Popup>
    </Grid>

</UserControl>

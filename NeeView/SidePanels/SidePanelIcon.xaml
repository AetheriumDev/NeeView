<UserControl x:Class="NeeView.SidePanelIcon" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:nw="clr-namespace:NeeView.Windows;assembly=NeeView.Runtime" xmlns:properties="clr-namespace:NeeView.Properties" xmlns:local="clr-namespace:NeeView" mc:Ignorable="d" d:DesignHeight="450"
        d:DesignWidth="800">
    <UserControl.Resources>

        <Style x:Key="PanelIconButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource NVFocusVisual}" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ToolTip" Value="{Binding Title}" />
            <Setter Property="ToolTipService.ShowDuration" Value="1000" />
            <Setter Property="ToolTipService.Placement" Value="Bottom" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="baseRectangle" RadiusY="0" RadiusX="0" StrokeThickness="1" Fill="{x:Null}" />
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.5" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1.0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ContextMenuItemStyle" TargetType="MenuItem">
            <Setter Property="CommandTarget" Value="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
        </Style>

        <RoutedCommand x:Key="TogglePanelCommand" />
        <RoutedCommand x:Key="OpenDockCommand" />
        <RoutedCommand x:Key="OpenWindowCommand" />

    </UserControl.Resources>

    <UserControl.CommandBindings>
        <CommandBinding x:Name="TogglePanel" Command="{StaticResource TogglePanelCommand}" Executed="TogglePanelCommand_Execute" />
        <CommandBinding x:Name="OpenDock" Command="{StaticResource OpenDockCommand}" Executed="OpenDockCommand_Execute" />
        <CommandBinding x:Name="OpenWindow" Command="{StaticResource OpenWindowCommand}" Executed="OpenWindowCommand_Execute" />
    </UserControl.CommandBindings>

    <Button x:Name="Root" Style="{StaticResource PanelIconButtonStyle}" Command="{StaticResource TogglePanelCommand}">
        <b:Interaction.Behaviors>
            <nw:DragStartBehavior AllowedEffects="Move" DragDropData="{Binding}" DragBegin="DragStartBehavior_DragBegin" DragEnd="DragStartBehavior_DragEnd" />
        </b:Interaction.Behaviors>
        <Button.ContextMenu>
            <ContextMenu>
                <MenuItem Style="{StaticResource ContextMenuItemStyle}" Header="{x:Static properties:Resources.LayoutPanel_Menu_Floating}" Command="{StaticResource OpenWindowCommand}" />
                <MenuItem Style="{StaticResource ContextMenuItemStyle}" Header="{x:Static properties:Resources.LayoutPanel_Menu_Docking}" Command="{StaticResource OpenDockCommand}" />
            </ContextMenu>
        </Button.ContextMenu>
        <Grid Width="32" Height="32" Background="Transparent">
            <ContentControl x:Name="ButtonContent" Margin="5" IsTabStop="False" />
        </Grid>
    </Button>
</UserControl>

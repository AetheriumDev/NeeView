<UserControl x:Class="NeeView.SidePanelFrameView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:NeeView" xmlns:osc="clr-namespace:OpenSourceControls" xmlns:nw="clr-namespace:NeeView.Windows;assembly=NeeView.Runtime"
        xmlns:nwd="clr-namespace:NeeView.Windows.Data" xmlns:nrlp="clr-namespace:NeeView.Runtime.LayoutPanel;assembly=NeeView.Runtime" xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d" d:DesignHeight="480" d:DesignWidth="640">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <nwd:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
        <local:MultiBooleanOrConverter x:Key="MultiBooleanOrConverter" />

        <DataTemplate x:Key="LeftPanelIconTemplate">
            <local:SidePanelIcon Descriptor="{Binding Path=DataContext.VM.SidePanelIconDescriptor, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" />
        </DataTemplate>

        <DataTemplate x:Key="RightPanelIconTemplate">
            <local:SidePanelIcon Descriptor="{Binding Path=DataContext.VM.SidePanelIconDescriptor, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" />
        </DataTemplate>

        <Style x:Key="PanelIconGridStyle" TargetType="Grid">
            <Setter Property="Background" Value="{Binding ThemeBrush.IconBackgroundBrush}" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Visibility" Value="{Binding IsSideBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        </Style>


        <Style x:Key="PanelIconItemsControlStyle" TargetType="ItemsControl">
            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <EventSetter Event="MouseLeftButtonUp" Handler="PanelIconItemsControl_MouseLeftButtonUp" />
        </Style>

        <Style x:Key="PanelGridStyle" TargetType="Grid">
            <Setter Property="Background" Value="{Binding ThemeBrush.BackgroundBrush}" />
        </Style>

        <Style x:Key="PanelGridSplitterStyle" TargetType="GridSplitter">
            <Setter Property="Width" Value="{Binding PanelIconGridWidth}" />
            <Setter Property="Background" Value="{Binding ThemeBrush.BackgroundBrush}" />
        </Style>

        <Style x:Key="NVVerticalBevelGrip" TargetType="{x:Type osc:DockPanelSplitter}">
            <Setter Property="Thickness" Value="{Binding SplitterWidth}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type osc:DockPanelSplitter}">
                        <!--
                        <Grid SnapsToDevicePixels="True" Background="{Binding ThemeBrush.BackgroundBrush}" />
                        -->
                        <Grid SnapsToDevicePixels="True" Background="#0800" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>


    <Grid x:Name="Root" SizeChanged="Root_SizeChanged">

        <ContentControl x:Name="RootEntryPoint" IsTabStop="False" />

        <DockPanel>

            <Grid DockPanel.Dock="Left" Visibility="{Binding VM.IsSideBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid x:Name="LeftIconGrid" Style="{StaticResource PanelIconGridStyle}" Visibility="{Binding ElementName=LeftPanelContent, Path=Visibility}" AllowDrop="True"
                        MouseLeftButtonDown="LeftIconGrid_MouseLeftButtonDown" MouseLeftButtonUp="LeftIconGrid_MouseLeftButtonUp">

                    <b:Interaction.Behaviors>
                        <nw:DragAcceptBehavior Description="{Binding VM.Left.Description}" />
                    </b:Interaction.Behaviors>

                    <Grid Margin="0,32,0,0">
                        <ItemsControl x:Name="LeftIconList" Style="{StaticResource PanelIconItemsControlStyle}" Margin="{Binding PanelMargin}" ItemTemplate="{StaticResource LeftPanelIconTemplate}"
                                ItemsSource="{Binding VM.MainLayoutPanelManager.LeftDock.LeaderPanels}">
                        </ItemsControl>
                    </Grid>
                </Grid>
            </Grid>

            <Grid DockPanel.Dock="Right" Visibility="{Binding VM.IsSideBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid x:Name="RightIconGrid" Style="{StaticResource PanelIconGridStyle}" Visibility="{Binding ElementName=RightPanelContent, Path=Visibility}" AllowDrop="True"
                        MouseLeftButtonDown="RightIconGrid_MouseLeftButtonDown" MouseLeftButtonUp="RightIconGrid_MouseLeftButtonUp">

                    <b:Interaction.Behaviors>
                        <nw:DragAcceptBehavior Description="{Binding VM.Right.Description}" />
                    </b:Interaction.Behaviors>

                    <Grid Margin="0,32,0,0">
                        <ItemsControl x:Name="RightIconList" Style="{StaticResource PanelIconItemsControlStyle}" Margin="{Binding PanelMargin}" ItemTemplate="{StaticResource RightPanelIconTemplate}"
                                ItemsSource="{Binding VM.MainLayoutPanelManager.RightDock.LeaderPanels}">
                        </ItemsControl>
                    </Grid>
                </Grid>
            </Grid>

            <DockPanel x:Name="Screen">

                <Grid x:Name="LeftPanel" Style="{StaticResource PanelGridStyle}" DockPanel.Dock="Left" UseLayoutRounding="True" Width="{Binding VM.Left.Width, Mode=TwoWay}"
                        Visibility="{Binding VM.Left.PanelVisibility}" SizeChanged="LeftPanel_SizeChanged">
                    <Grid x:Name="LeftPanelContent" Background="Transparent">
                        <behaviors:Interaction.Behaviors>
                            <local:AutoHideBehavior Name="LeftPanel" Screen="{Binding ElementName=Screen}" SubTarget="{Binding ElementName=LeftPanelSplitter}" Dock="Left"
                                    IsEnabled="{Binding VM.Left.IsAutoHide}" DelayTime="{Binding VM.AutoHideConfig.AutoHideDelayTime}"
                                    DelayVisibleTime="{Binding VM.AutoHideConfig.AutoHideDelayVisibleTime}" FocusLockMode="{Binding VM.AutoHideConfig.AutoHideFocusLockMode}"
                                    IsKeyDownDelayEnabled="{Binding VM.AutoHideConfig.IsAutoHideKeyDownDelay}" HitTestMargin="{Binding VM.AutoHideConfig.AutoHideHitTestMargin}"
                                    Description="{Binding VM.Left.AutoHideDescription}">
                                <local:AutoHideBehavior.IsVisibleLocked>
                                    <MultiBinding Converter="{StaticResource MultiBooleanOrConverter}">
                                        <Binding Path="VM.Model.IsVisibleLocked" />
                                        <Binding Path="VM.Left.IsVisibleLocked" />
                                    </MultiBinding>
                                </local:AutoHideBehavior.IsVisibleLocked>
                            </local:AutoHideBehavior>
                        </behaviors:Interaction.Behaviors>
                        <nrlp:LayoutDockPanel Margin="{Binding PanelMargin}" Manager="{Binding VM.MainLayoutPanelManager}" ItemsSource="{Binding VM.MainLayoutPanelManager.LeftDock.SelectedItem}"
                                BorderBrush="{Binding ThemeBrush.IconBackgroundBrush}" TextBlock.Foreground="Gray">
                        </nrlp:LayoutDockPanel>
                    </Grid>
                </Grid>

                <osc:DockPanelSplitter x:Name="LeftPanelSplitter" DockPanel.Dock="Left" Style="{StaticResource NVVerticalBevelGrip}" ProportionalResize="False" UseLayoutRounding="True"
                        Visibility="{Binding VM.Left.PanelVisibility}" IsTabStop="False" />

                <Grid x:Name="RightPanel" DockPanel.Dock="Right" Style="{StaticResource PanelGridStyle}" Width="{Binding VM.Right.Width, Mode=TwoWay}" UseLayoutRounding="True"
                        Visibility="{Binding VM.Right.PanelVisibility}" SizeChanged="RightPanel_SizeChanged">
                    <Grid x:Name="RightPanelContent" Background="Transparent">
                        <behaviors:Interaction.Behaviors>
                            <local:AutoHideBehavior Name="RightPanel" Screen="{Binding ElementName=Screen}" SubTarget="{Binding ElementName=RightPanelSplitter}" Dock="Right"
                                    IsEnabled="{Binding VM.Right.IsAutoHide}" DelayTime="{Binding VM.AutoHideConfig.AutoHideDelayTime}"
                                    DelayVisibleTime="{Binding VM.AutoHideConfig.AutoHideDelayVisibleTime}" FocusLockMode="{Binding VM.AutoHideConfig.AutoHideFocusLockMode}"
                                    IsKeyDownDelayEnabled="{Binding VM.AutoHideConfig.IsAutoHideKeyDownDelay}" HitTestMargin="{Binding VM.AutoHideConfig.AutoHideHitTestMargin}"
                                    Description="{Binding VM.Right.AutoHideDescription}">
                                <local:AutoHideBehavior.IsVisibleLocked>
                                    <MultiBinding Converter="{StaticResource MultiBooleanOrConverter}">
                                        <Binding Path="VM.Model.IsVisibleLocked" />
                                        <Binding Path="VM.Right.IsVisibleLocked" />
                                    </MultiBinding>
                                </local:AutoHideBehavior.IsVisibleLocked>
                            </local:AutoHideBehavior>
                        </behaviors:Interaction.Behaviors>
                        <nrlp:LayoutDockPanel Margin="{Binding PanelMargin}" Manager="{Binding VM.MainLayoutPanelManager}" ItemsSource="{Binding VM.MainLayoutPanelManager.RightDock.SelectedItem}"
                                BorderBrush="{Binding ThemeBrush.IconBackgroundBrush}" TextBlock.Foreground="Gray">
                        </nrlp:LayoutDockPanel>
                    </Grid>
                </Grid>

                <osc:DockPanelSplitter x:Name="RightPanelSplitter" DockPanel.Dock="Right" Style="{StaticResource NVVerticalBevelGrip}" ProportionalResize="False" UseLayoutRounding="True"
                        Visibility="{Binding VM.Right.PanelVisibility}" IsTabStop="False" />

                <Grid x:Name="Viewport" Grid.Column="1" SizeChanged="Viewport_SizeChanged" Margin="{Binding ViewpoartMargin}">
                    <!--
                    <ContentControl x:Name="ViewportEntryPoint" Panel.ZIndex="-1" IsTabStop="False"/>
                    <Border BorderBrush="Yellow" BorderThickness="5"/>
                    -->
                </Grid>

            </DockPanel>

        </DockPanel>

    </Grid>
</UserControl>

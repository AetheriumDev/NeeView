<UserControl x:Class="NeeView.SidePanelFrameView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:NeeView"
             xmlns:nw="clr-namespace:NeeView.Windows"
             xmlns:nwc="clr-namespace:NeeView.Windows.Controls"
             xmlns:nwd="clr-namespace:NeeView.Windows.Data"
             xmlns:nrlp="clr-namespace:NeeView.Runtime.LayoutPanel"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" d:DesignHeight="480" d:DesignWidth="640">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <nwd:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
        <local:MultiBooleanOrConverter x:Key="MultiBooleanOrConverter" />

        <DataTemplate x:Key="LeftPanelIconTemplate">
            <local:SidePanelIcon Descriptor="{Binding Path=DataContext.VM.SidePanelIconDescriptor, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" />
        </DataTemplate>

        <DataTemplate x:Key="RightPanelIconTemplate">
            <local:SidePanelIcon Descriptor="{Binding Path=DataContext.VM.SidePanelIconDescriptor, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" />
        </DataTemplate>

        <Style x:Key="PanelIconBorderStyle" TargetType="Border">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource SideBar.Foreground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SideBar.Border}" />
            <Setter Property="Background" Value="{DynamicResource SideBar.Background}" />
            <Setter Property="Opacity" Value="{Binding VM.Opacity}" />
            <Setter Property="Width" Value="41" />
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>

        <Style x:Key="PanelIconItemsControlStyle" TargetType="ItemsControl">
            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <EventSetter Event="MouseLeftButtonUp" Handler="PanelIconItemsControl_MouseLeftButtonUp" />
        </Style>

        <Style x:Key="PanelBorderStyle" TargetType="Border">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource Panel.Foreground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Panel.Border}" />
            <Setter Property="Background" Value="{DynamicResource Panel.Background}" />
            <Setter Property="Opacity" Value="{Binding VM.Opacity}" />
        </Style>

        <Style x:Key="PanelGridSplitterStyle" TargetType="{x:Type GridSplitter}">
            <Setter Property="Width" Value="{Binding SplitterWidth, Mode=OneTime}"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

    </UserControl.Resources>


    <Grid x:Name="Root">

        <ContentControl x:Name="RootEntryPoint" IsTabStop="False" />

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="LeftSidePanel" Grid.Column="0" Visibility="{Binding VM.IsSideBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}" KeyboardNavigation.TabNavigation="Local"
                  KeyboardNavigation.TabIndex="1">
                <Grid x:Name="LeftIconGrid" Visibility="{Binding ElementName=LeftPanelContent, Path=Visibility}" Background="Transparent" AllowDrop="True"
                        MouseLeftButtonDown="LeftIconGrid_MouseLeftButtonDown" MouseLeftButtonUp="LeftIconGrid_MouseLeftButtonUp">
                    <b:Interaction.Behaviors>
                        <nw:DragAcceptBehavior Description="{Binding VM.Left.Description}" />
                    </b:Interaction.Behaviors>
                    <Border Style="{StaticResource PanelIconBorderStyle}" BorderThickness="0,0,1,0" />
                    <Grid Margin="0,32,1,0">
                        <ItemsControl x:Name="LeftIconList" Style="{StaticResource PanelIconItemsControlStyle}" Margin="{Binding PanelMargin}" ItemTemplate="{StaticResource LeftPanelIconTemplate}"
                                ItemsSource="{Binding VM.MainLayoutPanelManager.LeftDock.LeaderPanels}">
                        </ItemsControl>
                    </Grid>
                </Grid>
            </Grid>

            <Grid x:Name="RightSidePanel" Grid.Column="2" Visibility="{Binding VM.IsSideBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}" KeyboardNavigation.TabNavigation="Local"
                  KeyboardNavigation.TabIndex="6">
                <Grid x:Name="RightIconGrid" Visibility="{Binding ElementName=RightPanelContent, Path=Visibility}" Background="Transparent" AllowDrop="True"
                        MouseLeftButtonDown="RightIconGrid_MouseLeftButtonDown" MouseLeftButtonUp="RightIconGrid_MouseLeftButtonUp">
                    <b:Interaction.Behaviors>
                        <nw:DragAcceptBehavior Description="{Binding VM.Right.Description}" />
                    </b:Interaction.Behaviors>
                    <Border Style="{StaticResource PanelIconBorderStyle}" BorderThickness="1,0,0,0" />
                    <Grid Margin="1,32,0,0">
                        <ItemsControl x:Name="RightIconList" Style="{StaticResource PanelIconItemsControlStyle}" Margin="{Binding PanelMargin}" ItemTemplate="{StaticResource RightPanelIconTemplate}"
                                ItemsSource="{Binding VM.MainLayoutPanelManager.RightDock.LeaderPanels}">
                        </ItemsControl>
                    </Grid>
                </Grid>
            </Grid>

            <Grid x:Name="ScreenRect" Grid.Column="1" />

            <Grid x:Name="Screen" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LeftColumn"
                                      Width="{Binding RelativeSource={RelativeSource AncestorType=local:SidePanelFrameView}, Path=LeftColumnWidth, Mode=TwoWay}"/>
                    <ColumnDefinition x:Name="CenterColumn"
                                      Width="*" MinWidth="{Binding SplitterWidth, Mode=OneTime}"/>
                    <ColumnDefinition x:Name="RightColumn"
                                      Width="{Binding RelativeSource={RelativeSource AncestorType=local:SidePanelFrameView}, Path=RightColumnWidth, Mode=TwoWay}"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="LeftPanel" Grid.Column="0" UseLayoutRounding="True"  Visibility="{Binding VM.Left.PanelVisibility}"
                      KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
                    <Border Style="{StaticResource PanelBorderStyle}" BorderThickness="0,0,1,0" />
                    <Border x:Name="LeftPanelContent" Background="Transparent" Margin="0,0,1,0">
                        <behaviors:Interaction.Behaviors>
                            <nwc:AutoHideBehavior Name="LeftPanel" Screen="{Binding ElementName=Screen}" SubTarget="{Binding ElementName=LeftSplitter}" Dock="Left"
                                    IsEnabled="{Binding VM.Left.IsAutoHide}" DelayTime="{Binding VM.AutoHideConfig.AutoHideDelayTime}"
                                    DelayVisibleTime="{Binding VM.AutoHideConfig.AutoHideDelayVisibleTime}" FocusLockMode="{Binding VM.AutoHideConfig.AutoHideFocusLockMode}"
                                    IsKeyDownDelayEnabled="{Binding VM.AutoHideConfig.IsAutoHideKeyDownDelay}" HitTestMargin="{Binding VM.AutoHideConfig.AutoHideHitTestHorizontalMargin}"
                                    Description="{Binding VM.Left.AutoHideDescription}">
                                <nwc:AutoHideBehavior.IsVisibleLocked>
                                    <MultiBinding Converter="{StaticResource MultiBooleanOrConverter}">
                                        <Binding Path="VM.Model.IsVisibleLocked" />
                                        <Binding Path="VM.Left.IsVisibleLocked" />
                                    </MultiBinding>
                                </nwc:AutoHideBehavior.IsVisibleLocked>
                            </nwc:AutoHideBehavior>
                        </behaviors:Interaction.Behaviors>
                        <nrlp:LayoutDockPanel Margin="{Binding PanelMargin}" Manager="{Binding VM.MainLayoutPanelManager}" ItemsSource="{Binding VM.MainLayoutPanelManager.LeftDock.SelectedItem}"
                                BorderBrush="{DynamicResource Panel.Splitter}">
                        </nrlp:LayoutDockPanel>
                    </Border>
                </Grid>

                <Grid x:Name="RightPanel" Grid.Column="2" UseLayoutRounding="True" Visibility="{Binding VM.Right.PanelVisibility}"
                      KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="5">
                    <Border Style="{StaticResource PanelBorderStyle}" BorderThickness="1,0,0,0" />
                    <Border x:Name="RightPanelContent" Background="Transparent" Margin="1,0,0,0">
                        <behaviors:Interaction.Behaviors>
                            <nwc:AutoHideBehavior Name="RightPanel" Screen="{Binding ElementName=Screen}" SubTarget="{Binding ElementName=RightSplitter}" Dock="Right"
                                    IsEnabled="{Binding VM.Right.IsAutoHide}" DelayTime="{Binding VM.AutoHideConfig.AutoHideDelayTime}"
                                    DelayVisibleTime="{Binding VM.AutoHideConfig.AutoHideDelayVisibleTime}" FocusLockMode="{Binding VM.AutoHideConfig.AutoHideFocusLockMode}"
                                    IsKeyDownDelayEnabled="{Binding VM.AutoHideConfig.IsAutoHideKeyDownDelay}" HitTestMargin="{Binding VM.AutoHideConfig.AutoHideHitTestHorizontalMargin}"
                                    Description="{Binding VM.Right.AutoHideDescription}">
                                <nwc:AutoHideBehavior.IsVisibleLocked>
                                    <MultiBinding Converter="{StaticResource MultiBooleanOrConverter}">
                                        <Binding Path="VM.Model.IsVisibleLocked" />
                                        <Binding Path="VM.Right.IsVisibleLocked" />
                                    </MultiBinding>
                                </nwc:AutoHideBehavior.IsVisibleLocked>
                            </nwc:AutoHideBehavior>
                        </behaviors:Interaction.Behaviors>
                        <nrlp:LayoutDockPanel Margin="{Binding PanelMargin}" Manager="{Binding VM.MainLayoutPanelManager}" ItemsSource="{Binding VM.MainLayoutPanelManager.RightDock.SelectedItem}"
                                BorderBrush="{DynamicResource Panel.Splitter}">
                        </nrlp:LayoutDockPanel>
                    </Border>
                </Grid>

                <Grid x:Name="CenterPanel" Grid.Column="1"/>

                <GridSplitter x:Name="LeftSplitter" Grid.Column="1" Style="{StaticResource PanelGridSplitterStyle}" HorizontalAlignment="Left"
                              KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="3" FocusVisualStyle="{StaticResource NVBorderFocusVisual}"
                              Visibility="{Binding ElementName=LeftPanel, Path=Visibility}"/>

                <GridSplitter x:Name="RightSplitter" Grid.Column="1" Style="{StaticResource PanelGridSplitterStyle}"  HorizontalAlignment="Right"
                              KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="4" FocusVisualStyle="{StaticResource NVBorderFocusVisual}"
                              Visibility="{Binding ElementName=RightPanel, Path=Visibility}"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>

<UserControl x:Class="NeeView.FolderListBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeeView"
             xmlns:properties="clr-namespace:NeeView.Properties"
             xmlns:nw="clr-namespace:NeeView.Windows"
             xmlns:osc="clr-namespace:OpenSourceControls"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:FolderListDataContext_Design, IsDesignTimeCreatable=True}"
             d:DesignHeight="300" d:DesignWidth="300"
             Foreground="{DynamicResource NVForeground}">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:BooleanToTextWrappingConverter x:Key="BooleanToTextWrappingConverter"/>
        <local:FolderItemToNoteConverter x:Key="FolderItemToNoteConverter"/>


        <Style x:Key="NameStyleBase" TargetType="TextBlock" >
            <Setter Property="Text" Value="{Binding DispName}"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style  x:Key="NameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyleBase}">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="ToolTip" Value="{Binding Detail}"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.IsRenaming}" Value="True">
                    <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                    <Setter Property="ToolTip" Value="{x:Null}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NormalNameStyle" TargetType="TextBlock"  BasedOn="{StaticResource NameStyle}">
            <Setter Property="Margin" Value="5,0"/>
        </Style>

        <Style x:Key="ContentNameStyle" TargetType="TextBlock"  BasedOn="{StaticResource NameStyle}">
            <Setter Property="TextWrapping" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}"/>
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.TextHeight}"/>
        </Style>

        <Style x:Key="BannerNameStyle" TargetType="TextBlock"  BasedOn="{StaticResource NameStyle}">
            <Setter Property="TextWrapping" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}"/>
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.TextHeight}"/>
        </Style>

        <Style x:Key="ThumbnailNameStyle" TargetType="TextBlock"  BasedOn="{StaticResource NameStyleBase}">
            <Setter Property="TextWrapping" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}"/>
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.TextHeight}"/>
            <Setter Property="Visibility" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.IsTextVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="NoteTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Opacity" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.NoteOpacity}"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="Visibility" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.NoteVisibility}"/>
        </Style>

        <Style x:Key="ThumbnailStackPanelStyle" TargetType="StackPanel" >
            <Setter Property="ToolTip" Value="{Binding Detail}"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static local:RenameManager.Current}, Path=IsRenaming}" Value="True">
                    <Setter Property="ToolTip" Value="{x:Null}"/>
                    <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="NormalTemplate">
            <DockPanel LastChildFill="False" MinHeight="20">
                <local:FolderListIcon DockPanel.Dock="Right"/>
                <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource NormalNameStyle}"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ContentTemplate">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1">
                <DockPanel LastChildFill="False" Margin="2">
                    <local:FolderListIcon DockPanel.Dock="Right" />
                    <local:PanelListContentImage Thumbnail="{Binding Thumbnail}"/>
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource NoteTextStyle}">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource FolderItemToNoteConverter}">
                                    <Binding />
                                    <Binding Path="DataContext.FolderOrder" RelativeSource="{RelativeSource FindAncestor, AncestorType=ListBox}"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource ContentNameStyle}"/>
                    </StackPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="BannerTemplate">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1">
                <DockPanel Margin="0" HorizontalAlignment="Stretch" LastChildFill="False">
                    <DockPanel DockPanel.Dock="Bottom" Margin="2" >
                        <local:FolderListIcon DockPanel.Dock="Right"/>
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource BannerNameStyle}" Margin="0" />
                    </DockPanel>
                    <local:PanelListBannerImage Thumbnail="{Binding Thumbnail}"/>
                </DockPanel>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="ThumbnailTemplate">
            <StackPanel Margin="0,5" Width="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.ShapeWidth}" Style="{StaticResource ThumbnailStackPanelStyle}">
                <local:PanelListThumbnailImage Thumbnail="{Binding Thumbnail}"/>
                <DockPanel>
                    <local:FolderListIcon DockPanel.Dock="Right" VerticalAlignment="Top" IsKeepArea="False" />
                    <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource ThumbnailNameStyle}"/>
                </DockPanel>
            </StackPanel>
        </DataTemplate>

    </UserControl.Resources>

    <Grid x:Name="Root">

        <nw:ListBoxExteded x:Name="ListBox" Focusable="True"
                MinHeight="0"
                FontFamily="{DynamicResource PanelFontFamily}" FontSize="{DynamicResource PanelFontSize}"
                Background="Transparent"
                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}"
                FocusVisualStyle="{StaticResource NVFocusVisual}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding Model.FolderCollection.Items}"
                SelectedItem="{Binding Model.SelectedItem}"
                SelectionChanged="FolderList_SelectionChanged"
                Loaded="FolderList_Loaded"
                IsVisibleChanged="FolderList_IsVisibleChanged"
                PreviewKeyDown="FolderList_PreviewKeyDown"
                KeyDown="FolderList_KeyDown"
                UseLayoutRounding="True"
                AllowDrop="True"
                DragEnter="FolderList_DragEnter"
                PreviewDragOver="FolderList_PreviewDragOver"
                Drop="FolderList_Drop"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.ScrollUnit="{StaticResource PanelScrollUnit}"
                VirtualizingPanel.VirtualizationMode="Recycling">

            <b:Interaction.Behaviors>
                <nw:ListBoxExtendedDragDropStartBehavior AllowedEffects="Copy, Scroll" DragBeginAsync="DragStartBehavior_DragBeginAsync" DragDropHook="{x:Static local:DragDropWatcher.DragDropHook}"/>
            </b:Interaction.Behaviors>

            <ListBox.Style>
                <Style TargetType="ListBox" BasedOn="{StaticResource NVListBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Model.PanelListItemStyle}" Value="Normal">
                            <Setter Property="ItemTemplate" Value="{StaticResource NormalTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.PanelListItemStyle}" Value="Content">
                            <Setter Property="ItemTemplate" Value="{StaticResource ContentTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.PanelListItemStyle}" Value="Banner">
                            <Setter Property="ItemTemplate" Value="{StaticResource BannerTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.PanelListItemStyle}" Value="Thumbnail">
                            <Setter Property="ItemTemplate" Value="{StaticResource ThumbnailTemplate}"/>
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <osc:VirtualizingWrapPanel IsItemsHost="True" MouseWheelRate="{Binding Source={x:Static local:Config.Current}, Path=Panels.MouseWheelSpeedRate}"/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource NVListBoxItem}">
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="FolderListItem_MouseLeftButtonDown"/>
                    <EventSetter Event="PreviewMouseDoubleClick" Handler="FolderListItem_MouseDoubleClick"/>
                    <EventSetter Event="KeyDown" Handler="FolderListItem_KeyDown"/>
                    <EventSetter Event="PreviewMouseDown" Handler="FolderListItem_MouseDown"/>
                    <EventSetter Event="PreviewMouseUp" Handler="FolderListItem_MouseUp"/>
                    <EventSetter Event="PreviewMouseMove" Handler="FolderListItem_MouseMove"/>
                    <EventSetter Event="ContextMenuOpening" Handler="FolderListItem_ContextMenuOpening"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource NVListItemFocusVisual}"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

        </nw:ListBoxExteded>

        <ContentControl x:Name="BusyFadeContent" Focusable="False" />
        
    </Grid>

</UserControl>

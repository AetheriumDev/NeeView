<UserControl x:Class="NeeView.HistoryListBox" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:NeeView"
        xmlns:nw="clr-namespace:NeeView.Windows" 
        xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
        xmlns:properties="clr-namespace:NeeView.Properties" 
        mc:Ignorable="d" 
        d:DesignHeight="300" d:DesignWidth="300"
        Foreground="{DynamicResource Panel.Foreground}">

    <UserControl.Resources>

        <local:BooleanToTextWrappingConverter x:Key="BooleanToTextWrappingConverter" />
        <local:ArchiveEntryToDecoratePlaceNameConverter x:Key="ArchiveEntryToDecoratePlaceNameConverter" />
        <local:BrushAlphaToVisibilityConverter x:Key="BrushAlphaToVisibilityConverter" />
        <local:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />

        <Style x:Key="NameStyle" TargetType="TextBlock">
            <Setter Property="Text" Value="{Binding Name}" />
            <Setter Property="ToolTip" Value="{Binding Detail}" />
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000" />
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="NormalNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
        </Style>

        <Style x:Key="ContentNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
            <Setter Property="TextWrapping"
                    Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}" />
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.TextHeight}" />
        </Style>

        <Style x:Key="BannerrNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="TextWrapping"
                    Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}" />
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.TextHeight}" />
        </Style>

        <Style x:Key="ThumbnailNameStyle" TargetType="TextBlock"  BasedOn="{StaticResource NameStyle}">
            <Setter Property="TextWrapping" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}"/>
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.TextHeight}"/>
            <Setter Property="Visibility" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.IsTextVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="NoteTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Foreground" Value="{DynamicResource Panel.Note}" />
            <Setter Property="Visibility" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BrushAlphaToVisibilityConverter}}" />
        </Style>

        <Style x:Key="ThumbnailStackPanelStyle" TargetType="StackPanel" >
            <Setter Property="ToolTip" Value="{Binding Detail}"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:HistoryListBox}, Path=IsToolTipEnabled}" Value="False">
                    <Setter Property="ToolTip" Value="{x:Null}"/>
                    <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="NormalTemplate">
            <Grid MinHeight="20">
                <TextBlock Style="{StaticResource NormalNameStyle}" Margin="5,1" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ContentTemplace">
            <DockPanel Margin="2">
                <DockPanel>
                    <local:PanelListContentImage Thumbnail="{Binding Thumbnail}" />
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock x:Name="DateTime" Style="{StaticResource NoteTextStyle}" Text="{Binding LastAccessTime, Converter={StaticResource DateTimeToStringConverter}}"/>
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource ContentNameStyle}" />
                    </StackPanel>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="BannerTemplate">
            <DockPanel Margin="0" HorizontalAlignment="Stretch" LastChildFill="False">
                <DockPanel DockPanel.Dock="Bottom" Margin="2">
                    <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource BannerrNameStyle}" />
                </DockPanel>
                <local:PanelListBannerImage Thumbnail="{Binding Thumbnail}" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ThumbnailTemplate">
            <StackPanel Margin="5" Width="{Binding Source={x:Static local:Config.Current}, Path=Panels.ThumbnailItemProfile.ShapeWidth}" Style="{StaticResource ThumbnailStackPanelStyle}">
                <local:PanelListThumbnailImage Thumbnail="{Binding Thumbnail}" />
                <Rectangle DockPanel.Dock="Bottom" Margin="-5,0,-5,1" Height="4" Visibility="Hidden" />
                <DockPanel>
                    <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource ThumbnailNameStyle}" />
                </DockPanel>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource NVListBoxItem}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="HistoryListItem_MouseLeftButtonDown" />
            <EventSetter Event="MouseLeftButtonUp" Handler="HistoryListItem_MouseLeftButtonUp" />
            <EventSetter Event="PreviewMouseDoubleClick" Handler="HistoryListItem_MouseDoubleClick" />
            <EventSetter Event="KeyDown" Handler="HistoryListItem_KeyDown" />
            <EventSetter Event="ContextMenuOpening" Handler="HistoryListItem_ContextMenuOpening" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource NVListItemFocusVisual}" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxItemBorderStyle" TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemStyle}">
            <Setter Property="BorderBrush" Value="{DynamicResource Item.Separator}" />
        </Style>
        
        <Style x:Key="ListBoxItemThumbnailStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyle}">
            <Setter Property="local:ListBoxItemTools.InnerMargin" Value="0" />
        </Style>
        
    </UserControl.Resources>


    <nw:ListBoxExtended x:Name="ListBox"
                        Focusable="True"
                        FontSize="{DynamicResource PanelFontSize}" Background="Transparent"
                        Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        FocusVisualStyle="{StaticResource NVFocusVisual}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        HorizontalContentAlignment="Stretch"
                        ItemsSource="{Binding CollectionViewSource.View, NotifyOnTargetUpdated=True}"
                        SelectedItem="{Binding SelectedItem}"
                        TargetUpdated="HistoryListBox_TargetUpdated"
                        KeyDown="HistoryListBox_KeyDown"
                        SelectionChanged="HistoryListBox_SelectionChanged"
                        IsVisibleChanged="HistoryListBox_IsVisibleChanged"
                        VirtualizingPanel.IsVirtualizing="True"
                        VirtualizingPanel.ScrollUnit="{StaticResource PanelScrollUnit}"
                        VirtualizingPanel.VirtualizationMode="Recycling"
                        VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                        IsSimpleTextSearchEnabled="{Binding Source={x:Static local:Config.Current}, Path=Panels.IsTextSearchEnabled}">

        <ListBox.Style>
            <Style TargetType="ListBox" BasedOn="{StaticResource NVListBox}">
                <Setter Property="ItemTemplate" Value="{StaticResource NormalTemplate}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=History.PanelListItemStyle}" Value="Content">
                        <Setter Property="ItemTemplate" Value="{StaticResource ContentTemplace}" />
                        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemBorderStyle}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=History.PanelListItemStyle}" Value="Banner">
                        <Setter Property="ItemTemplate" Value="{StaticResource BannerTemplate}" />
                        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemBorderStyle}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=History.PanelListItemStyle}" Value="Thumbnail">
                        <Setter Property="ItemTemplate" Value="{StaticResource ThumbnailTemplate}"/>
                        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemThumbnailStyle}" />
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <vwp:VirtualizingWrapPanel 
                                                                   ItemSize="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.ThumbnailItemSize}"
                                                                   MouseWheelDelta="{Binding Source={x:Static local:Config.Current}, Path=Panels.MouseWheelDelta}"
                                                                   />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListBox.Style>

        <ListBox.GroupStyle>
            <GroupStyle>
                <GroupStyle.HeaderTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0,1,0,0" BorderBrush="{DynamicResource Panel.Separator}" Margin="0,15,0,0">
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" Foreground="{DynamicResource Panel.Header}" Margin="0,5" />
                        </Border>
                    </DataTemplate>
                </GroupStyle.HeaderTemplate>
                <GroupStyle.Panel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </GroupStyle.Panel>
            </GroupStyle>
        </ListBox.GroupStyle>

    </nw:ListBoxExtended>

</UserControl>

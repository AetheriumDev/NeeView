<UserControl x:Class="NeeView.FileInformationContent" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:b="http://schemas.microsoft.com/xaml/behaviors" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:NeeView" xmlns:nv="clr-namespace:NeeView" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:properties="clr-namespace:NeeView.Properties"
        xmlns:nw="clr-namespace:NeeView.Windows;assembly=NeeView.Runtime" mc:Ignorable="d" d:DesignHeight="800" d:DesignWidth="300" MinWidth="100" Focusable="True" FocusVisualStyle="{x:Null}"
        Foreground="{DynamicResource SidePanel.Foreground}">

    <UserControl.Resources>

        <local:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
        <local:EnumToAliasNameConverter x:Key="EnumToAliasNameConverter" />
        <local:MetadataValueToStringConverter x:Key="MetadataValueToStringConverter" />

        <Style x:Key="PropertyHeaderTextBlockStyle" TargetType="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Margin" Value="1" />
        </Style>

        <Style x:Key="PropertyValueTextBoxStyle" TargetType="TextBox">
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="MinWidth" Value="300" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource SidePanel.Foreground}" />
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TextBox_PreviewMouseLeftButtonDown" />
            <EventSetter Event="GotFocus" Handler="TextBox_GotFocus" />
        </Style>

        <DataTemplate x:Key="PropertyItemTemplate">
            <Grid Margin="5,1" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Source={x:Static local:Config.Current}, Path=Information.PropertyHeaderWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="*" MinWidth="300" />
                </Grid.ColumnDefinitions>
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{x:Static properties:Resources.Information_Menu_Copy}" Command="{x:Static local:FileInformationContent.CopyCommand}" />
                    </ContextMenu>
                </Grid.ContextMenu>
                <TextBlock Grid.Column="0" Text="{Binding Key, Converter={StaticResource EnumToAliasNameConverter}}" Margin="2,0" TextTrimming="CharacterEllipsis" />
                <GridSplitter Grid.Column="0" HorizontalAlignment="Right" Width="10" VerticalAlignment="Stretch" Background="Transparent" IsTabStop="False" />
                <TextBox Grid.Column="1" Style="{StaticResource PropertyValueTextBoxStyle}" Text="{Binding Value, Converter={StaticResource MetadataValueToStringConverter}, Mode=OneWay}" />
            </Grid>
        </DataTemplate>

        <Style x:Key="PropertyValueButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="8,0" />
            <Setter Property="Foreground" Value="{DynamicResource Control.Accent}" />
        </Style>

        <DataTemplate x:Key="GroupHeadderTemplate">
            <StackPanel Margin="0,5,0,0">
                <Separator Background="{DynamicResource SidePanel.Sepalator}" />
                <DockPanel Margin="0,2">
                    <local:InformationGroupButton DockPanel.Dock="Right" Style="{StaticResource PropertyValueButtonStyle}" Content="Button" GroupName="{Binding Name}"
                            Source="{Binding Path=DataContext.Source, ElementName=Root}" />
                    <TextBlock Text="{Binding Path=Name}" Foreground="{DynamicResource SidePanel.Header}" />
                </DockPanel>
            </StackPanel>
        </DataTemplate>

    </UserControl.Resources>

    <Grid x:Name="Root" Visibility="{Binding Source, Converter={StaticResource NullableToVisibilityConverter}}">
        <ListBox x:Name="PropertyListBox" Style="{StaticResource NVListBox}" ItemsSource="{Binding CollectionViewSource.View}" ItemTemplate="{StaticResource PropertyItemTemplate}"
                SelectedItem="{Binding SelectedItem}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" VirtualizingPanel.ScrollUnit="Pixel">
            <ListBox.GroupStyle>
                <GroupStyle HeaderTemplate="{StaticResource GroupHeadderTemplate}" />
            </ListBox.GroupStyle>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource NVListBoxItem}" />
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>

</UserControl>

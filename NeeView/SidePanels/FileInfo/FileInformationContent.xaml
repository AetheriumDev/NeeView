<UserControl x:Class="NeeView.FileInformationContent" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:b="http://schemas.microsoft.com/xaml/behaviors" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:NeeView" xmlns:nv="clr-namespace:NeeView" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:properties="clr-namespace:NeeView.Properties"
        xmlns:nw="clr-namespace:NeeView.Windows;assembly=NeeView.Runtime" mc:Ignorable="d" d:DesignHeight="800" d:DesignWidth="300" MinWidth="100" Focusable="True" FocusVisualStyle="{x:Null}"
        Foreground="{DynamicResource NVForeground}">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityHiddenConverter" False="Hidden" />
        <local:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
        <local:EnumToAliasNameConverter x:Key="EnumToAliasNameConverter" />
        <local:MetadataValueToStringConverter x:Key="MetadataValueToStringConverter" />

        <Style x:Key="PropertyHeaderTextBlockStyle" TargetType="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Margin" Value="2" />
        </Style>

        <Style x:Key="PropertyValueTextBoxStyle" TargetType="TextBox">
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource NVForeground}" />
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TextBox_PreviewMouseLeftButtonDown" />
            <EventSetter Event="GotFocus" Handler="TextBox_GotFocus" />
        </Style>

        <DataTemplate x:Key="PropertyItemTemplate">
            <Grid Margin="4,0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Source={x:Static local:Config.Current}, Path=Information.PropertyHeaderWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="*" MinWidth="300" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding Key, Converter={StaticResource EnumToAliasNameConverter}}" Margin="2" TextTrimming="CharacterEllipsis" />
                <GridSplitter Grid.Column="0" HorizontalAlignment="Right" Width="10" VerticalAlignment="Stretch" Background="Transparent" IsTabStop="False" />
                <TextBox Grid.Column="1" Style="{StaticResource PropertyValueTextBoxStyle}" Text="{Binding Value, Converter={StaticResource MetadataValueToStringConverter}, Mode=OneWay}" />
            </Grid>
        </DataTemplate>

        <Style x:Key="PropertyValueContentControlStyle" TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <Grid Margin="4,0" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Source={x:Static local:Config.Current}, Path=Information.PropertyHeaderWidth}" />
                                <ColumnDefinition Width="*" MinWidth="300" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PropertyValueButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="-5,-3,0,0" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="Foreground" Value="{StaticResource NVButtonForeground}" />
        </Style>

        <Style x:Key="SectionStackPanelStyle" TargetType="StackPanel">
            <Setter Property="Margin" Value="0,5" />
        </Style>

        <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="Margin" Value="2,0" />
        </Style>

        <Style x:Key="ItemsControlStyle" TargetType="ItemsControl">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ItemTemplate" Value="{StaticResource PropertyItemTemplate}" />
        </Style>

        <Style TargetType="Separator">
            <Setter Property="Background" Value="#4888" />
            <Setter Property="Visibility" Value="Visible" />
        </Style>

    </UserControl.Resources>

    <StackPanel x:Name="Root">

        <StackPanel Style="{StaticResource SectionStackPanelStyle}" Visibility="{Binding InformationConfig.IsVisibleFileSection, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Static properties:Resources.Information_File}" />
            <Separator />
            <ItemsControl Style="{StaticResource ItemsControlStyle}" ItemsSource="{Binding FileProperties}" />
            <ContentControl Style="{StaticResource PropertyValueContentControlStyle}" Visibility="{Binding CanOpenPlace, Converter={StaticResource BooleanToVisibilityHiddenConverter}}">
                <Button x:Name="OpenPlaceButton" Style="{StaticResource PropertyValueButtonStyle}" Command="{Binding OpenPlaceCommand}" Content="{x:Static properties:Resources.Information_OpenFolder}" />
            </ContentControl>
        </StackPanel>

        <StackPanel Style="{StaticResource SectionStackPanelStyle}" Visibility="{Binding InformationConfig.IsVisibleImageSection, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Static properties:Resources.Information_Image}" />
            <Separator />
            <ItemsControl Style="{StaticResource ItemsControlStyle}" ItemsSource="{Binding ImageProperties}" />
        </StackPanel>

        <StackPanel Visibility="{Binding Metadata, Converter={StaticResource NullableToVisibilityConverter}}">

            <StackPanel Style="{StaticResource SectionStackPanelStyle}" Visibility="{Binding InformationConfig.IsVisibleDescriptionSection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Static properties:Resources.Information_Description}" />
                <Separator />
                <ItemsControl Style="{StaticResource ItemsControlStyle}" ItemsSource="{Binding Description}" />
            </StackPanel>

            <StackPanel Style="{StaticResource SectionStackPanelStyle}" Visibility="{Binding InformationConfig.IsVisibleOriginSection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Static properties:Resources.Information_Origin}" />
                <Separator />
                <ItemsControl Style="{StaticResource ItemsControlStyle}" ItemsSource="{Binding Origin}" />
            </StackPanel>

            <StackPanel Style="{StaticResource SectionStackPanelStyle}" Visibility="{Binding InformationConfig.IsVisibleCameraSection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Static properties:Resources.Information_Camera}" />
                <Separator />
                <ItemsControl Style="{StaticResource ItemsControlStyle}" ItemsSource="{Binding Camera}" />
            </StackPanel>

            <StackPanel Style="{StaticResource SectionStackPanelStyle}" Visibility="{Binding InformationConfig.IsVisibleAdvancedPhotoSection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Static properties:Resources.Information_AdvancedPhoto}" />
                <Separator />
                <ItemsControl Style="{StaticResource ItemsControlStyle}" ItemsSource="{Binding AdvancedPhoto}" />
            </StackPanel>

            <StackPanel Style="{StaticResource SectionStackPanelStyle}" Visibility="{Binding InformationConfig.IsVisibleGpsSection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Static properties:Resources.Information_Gps}" />
                <Separator />
                <ItemsControl Style="{StaticResource ItemsControlStyle}" ItemsSource="{Binding Gps}" />
                <ContentControl Style="{StaticResource PropertyValueContentControlStyle}" Visibility="{Binding CanOpenMap, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button x:Name="OpenMapButton" Style="{StaticResource PropertyValueButtonStyle}" Command="{Binding OpenMapCommand}" Content="{x:Static properties:Resources.Information_OpenMap}" />
                </ContentControl>
            </StackPanel>

        </StackPanel>

    </StackPanel>

</UserControl>

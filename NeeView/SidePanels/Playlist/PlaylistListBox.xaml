<UserControl x:Class="NeeView.PlaylistListBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:b="http://schemas.microsoft.com/xaml/behaviors" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:NeeView"
        xmlns:nw="clr-namespace:NeeView.Windows;assembly=NeeView.Runtime" xmlns:properties="clr-namespace:NeeView.Properties" mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300"
        Foreground="{DynamicResource Panel.Foreground}">

    <UserControl.Resources>

        <local:BooleanToTextWrappingConverter x:Key="BooleanToTextWrappingConverter" />
        <local:ArchiveEntryToDecoratePlaceNameConverter x:Key="ArchiveEntryToDecoratePlaceNameConverter" />
        <local:BrushAlphaToVisibilityConverter x:Key="BrushAlphaToVisibilityConverter" />
        
        <Style x:Key="NameStyle" TargetType="TextBlock">
            <Setter Property="Text" Value="{Binding DispName}" />
            <Setter Property="ToolTip" Value="{Binding Path}" />
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000" />
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="NormalNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
        </Style>

        <Style x:Key="ContentNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
            <Setter Property="TextWrapping"
                    Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}" />
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.TextHeight}" />
        </Style>

        <Style x:Key="BannerrNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="TextWrapping"
                    Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}" />
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.TextHeight}" />
        </Style>


        <Style x:Key="NoteTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Foreground" Value="{DynamicResource Panel.Note}" />
            <Setter Property="Visibility" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BrushAlphaToVisibilityConverter}}" />
        </Style>


        <DataTemplate x:Key="NormalTemplate">
            <Grid MinHeight="20">
                <TextBlock Style="{StaticResource NormalNameStyle}" Margin="5,1" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ContentTemplace">
            <DockPanel Margin="2">
                <DockPanel>
                    <local:PanelListContentImage Thumbnail="{Binding ArchivePage.Thumbnail}" />
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock x:Name="Place" Style="{StaticResource NoteTextStyle}" Text="{Binding ArchivePage.Entry, Converter={StaticResource ArchiveEntryToDecoratePlaceNameConverter}}" />
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource ContentNameStyle}" />
                    </StackPanel>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="BannerTemplate">
            <DockPanel Margin="0" HorizontalAlignment="Stretch" LastChildFill="False">
                <DockPanel DockPanel.Dock="Bottom" Margin="2">
                    <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource BannerrNameStyle}" />
                </DockPanel>
                <local:PanelListBannerImage Thumbnail="{Binding ArchivePage.Thumbnail}" />
            </DockPanel>
        </DataTemplate>

        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource NVListBoxItem}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="PlaylistListItem_MouseLeftButtonDown" />
            <EventSetter Event="PreviewMouseDoubleClick" Handler="PlaylistListItem_MouseDoubleClick" />
            <EventSetter Event="KeyDown" Handler="PlaylistListItem_KeyDown" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource NVListItemFocusVisual}" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="@PlaylistItem_Menu_Rename" Command="{x:Static local:PlaylistListBox.RenameCommand}" />
                        <MenuItem Header="@PlaylistItem_Menu_Delete" Command="{x:Static local:PlaylistListBox.RemoveCommand}" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxItemBorderStyle" TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemStyle}">
            <Setter Property="BorderBrush" Value="{DynamicResource Item.Separator}" />
        </Style>

    </UserControl.Resources>


    <nw:ListBoxExteded x:Name="ListBox" Focusable="True" FontSize="{DynamicResource PanelFontSize}" Background="Transparent"
            Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}" FocusVisualStyle="{StaticResource NVFocusVisual}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Items, NotifyOnTargetUpdated=True}"
            SelectedItem="{Binding SelectedItem}" TargetUpdated="PlaylistListBox_TargetUpdated" KeyDown="PlaylistListBox_KeyDown" SelectionChanged="PlaylistListBox_SelectionChanged"
            IsVisibleChanged="PlaylistListBox_IsVisibleChanged" AllowDrop="True" PreviewDragEnter="FolderList_PreviewDragEnter" PreviewDragOver="FolderList_PreviewDragOver" Drop="FolderList_Drop"
            VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="{StaticResource PanelScrollUnit}" VirtualizingStackPanel.VirtualizationMode="Recycling">

        <ListBox.Style>
            <Style TargetType="ListBox" BasedOn="{StaticResource NVListBox}">
                <Setter Property="ItemTemplate" Value="{StaticResource NormalTemplate}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=Playlist.PanelListItemStyle}" Value="Content">
                        <Setter Property="ItemTemplate" Value="{StaticResource ContentTemplace}" />
                        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemBorderStyle}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=Playlist.PanelListItemStyle}" Value="Banner">
                        <Setter Property="ItemTemplate" Value="{StaticResource BannerTemplate}" />
                        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemBorderStyle}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListBox.Style>

        <b:Interaction.Behaviors>
            <nw:ListBoxExtendedDragDropStartBehavior AllowedEffects="Copy, Scroll" AllowRightButtonDrag="True" DragBeginAsync="DragStartBehavior_DragBeginAsync"
                    DragDropHook="{x:Static local:DragDropWatcher.DragDropHook}" />
        </b:Interaction.Behaviors>

    </nw:ListBoxExteded>

</UserControl>

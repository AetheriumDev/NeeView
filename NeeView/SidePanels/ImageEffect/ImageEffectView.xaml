<UserControl x:Class="NeeView.ImageEffectView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:NeeView"
        xmlns:nvp="clr-namespace:NeeView.Windows.Property" xmlns:nvc="clr-namespace:NeeView.Windows.Controls" xmlns:properties="clr-namespace:NeeView.Properties" mc:Ignorable="d" d:DesignHeight="800"
        d:DesignWidth="300" MinWidth="200" Focusable="True" FocusVisualStyle="{x:Null}" Foreground="{DynamicResource Default.Foreground}">

    <UserControl.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/NVTheme.xaml" />
                <ResourceDictionary Source="/NeeView/Windows/Property/PropertyValueTemplateDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DrawingImage x:Key="ic_toy_24px">
                <DrawingImage.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="Transparent" Geometry="{StaticResource g_rect24x24}" />
                        <GeometryDrawing Brush="Gray" Pen="{x:Null}" Geometry="{StaticResource g_toy_24px}" />
                    </DrawingGroup>
                </DrawingImage.Drawing>
            </DrawingImage>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <DataTemplate DataType="{x:Type nvp:PropertyValue_Boolean}">
                <CheckBox IsChecked="{Binding Value}" Content="{Binding Value}" />
            </DataTemplate>

            <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
            </Style>

            <Style TargetType="nvc:EnterTriggerTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <EventSetter Event="KeyDown" Handler="Control_KeyDown_IgnoreSingleKeyGesture" />
            </Style>

            <Style TargetType="Separator">
                <Setter Property="Background" Value="#4888" />
                <Setter Property="Margin" Value="0,5" />
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid Margin="2" Background="Transparent">
        <ScrollViewer x:Name="ScrollView" Style="{StaticResource NVScrollViewer}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled" Focusable="False"
                CanContentScroll="False">

            <StackPanel Margin="2,10,0,10">

                <Separator />

                <DockPanel Margin="0,5">
                    <nvc:ToggleSwitch DockPanel.Dock="Right" IsChecked="{Binding Source={x:Static local:Config.Current}, Path=ImageCustomSize.IsEnabled}"
                            VerticalAlignment="Center" />
                    <TextBlock Text="{x:Static properties:Resources.Effect_CustomSize}" VerticalAlignment="Center" />
                </DockPanel>

                <StackPanel Margin="10,0,0,5" Visibility="{Binding Source={x:Static local:Config.Current}, Path=ImageCustomSize.IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </StackPanel.Resources>
                    <nvp:PropertyInspector Document="{Binding CustomSizeProfile}" IsResetButtonVisible="False" />
                </StackPanel>

                <Separator />

                <DockPanel Margin="0,5">
                    <nvc:ToggleSwitch DockPanel.Dock="Right" IsChecked="{Binding Source={x:Static local:Config.Current}, Path=ImageTrim.IsEnabled}"
                            VerticalAlignment="Center" />
                    <TextBlock Text="{x:Static properties:Resources.Effect_Trim}" VerticalAlignment="Center" />
                </DockPanel>

                <StackPanel Margin="10,0,0,5" Visibility="{Binding Source={x:Static local:Config.Current}, Path=ImageTrim.IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <nvp:PropertyInspector Document="{Binding TrimProfile}" IsResetButtonVisible="False" />
                </StackPanel>

                <Separator />

                <DockPanel Margin="0,5">
                    <nvc:ToggleSwitch DockPanel.Dock="Right" IsChecked="{Binding Source={x:Static local:Config.Current}, Path=ImageDotKeep.IsEnabled}"
                            VerticalAlignment="Center" />
                    <TextBlock Text="{x:Static properties:Resources.Effect_KeepDot}" VerticalAlignment="Center" />
                </DockPanel>

                <Separator />

                <DockPanel Margin="0,5">
                    <nvc:ToggleSwitch DockPanel.Dock="Right" IsChecked="{Binding Source={x:Static local:Config.Current}, Path=ImageResizeFilter.IsEnabled}"
                            VerticalAlignment="Center" />
                    <TextBlock Text="{x:Static properties:Resources.Effect_ResizeFilter}" VerticalAlignment="Center" />
                </DockPanel>

                <StackPanel Visibility="{Binding Source={x:Static local:Config.Current}, Path=ImageResizeFilter.IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <DockPanel Margin="0,5">
                        <ComboBox DockPanel.Dock="Right" ItemsSource="{x:Static local:ResizeInterpolationExtensions.ResizeInterpolationList}"
                                SelectedValue="{Binding Source={x:Static local:Config.Current}, Path=ImageResizeFilter.ResizeInterpolation}" />
                        <TextBlock Text="{x:Static properties:Resources.Effect_ResizeInterpolation}" VerticalAlignment="Center" />
                    </DockPanel>

                    <DockPanel Margin="0,5">
                        <nvc:ToggleSwitch DockPanel.Dock="Right"
                                IsChecked="{Binding Source={x:Static local:Config.Current}, Path=ImageResizeFilter.IsUnsharpMaskEnabled}" VerticalAlignment="Center" />
                        <TextBlock Text="{x:Static properties:Resources.Effect_ResizeUnsharp}" VerticalAlignment="Center" />
                    </DockPanel>

                    <Grid Margin="10,0,0,10"
                            Visibility="{Binding Source={x:Static local:Config.Current}, Path=ImageResizeFilter.IsUnsharpMaskEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <nvp:PropertyInspector x:Name="inspectorF" Document="{Binding UnsharpMaskProfile}" IsResetButtonVisible="False" />
                    </Grid>

                    <Button x:Name="ResetButton" Style="{StaticResource IconButton}" HorizontalAlignment="Right" Margin="5" Click="Reset">
                        <TextBlock Margin="5" Text="{x:Static properties:Resources.Effect_ResizeReset}" Foreground="{DynamicResource Control.AccentColor}" />
                    </Button>
                </StackPanel>


                <Separator />

                <DockPanel Margin="0,5">
                    <nvc:ToggleSwitch DockPanel.Dock="Right" IsChecked="{Binding Source={x:Static local:Config.Current}, Path=ImageGrid.IsEnabled}"
                            VerticalAlignment="Center" />
                    <TextBlock Text="{x:Static properties:Resources.Effect_Grid}" VerticalAlignment="Center" />
                </DockPanel>

                <StackPanel Margin="10,0,0,5" Visibility="{Binding Source={x:Static local:Config.Current}, Path=ImageGrid.IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <nvp:PropertyInspector Document="{Binding GridLineProfile}" IsResetButtonVisible="True" />
                </StackPanel>

                <Separator />

                <DockPanel Margin="0,5">
                    <nvc:ToggleSwitch DockPanel.Dock="Right" IsChecked="{Binding Source={x:Static local:Config.Current}, Path=ImageEffect.IsEnabled}"
                            VerticalAlignment="Center" />
                    <TextBlock Text="{x:Static properties:Resources.Effect_Effect}" VerticalAlignment="Center" />
                </DockPanel>

                <StackPanel Visibility="{Binding Source={x:Static local:Config.Current}, Path=ImageEffect.IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <DockPanel Margin="0,5">
                        <ComboBox DockPanel.Dock="Right" ItemsSource="{Binding EffectTypeList}" DisplayMemberPath="Value" SelectedValuePath="Key"
                                SelectedValue="{Binding Source={x:Static local:Config.Current}, Path=ImageEffect.EffectType}" />
                        <TextBlock Text="{x:Static properties:Resources.Effect_EffectType}" VerticalAlignment="Center" />
                    </DockPanel>
                    <Grid Margin="0,10">
                        <nvp:PropertyInspector x:Name="inspector" Document="{Binding Model.EffectParameters}" IsResetButtonVisible="True"
                                IsHsvMode="{Binding Source={x:Static local:Config.Current}, Path=ImageEffect.IsHsvMode}">
                            <nvp:PropertyInspector.Style>
                                <Style TargetType="nvp:PropertyInspector">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Model.EffectParameters}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </nvp:PropertyInspector.Style>
                        </nvp:PropertyInspector>
                    </Grid>
                </StackPanel>
            </StackPanel>

        </ScrollViewer>
    </Grid>


</UserControl>

<UserControl x:Class="NeeView.PagemarkListBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeeView"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:nw="clr-namespace:NeeView.Windows"
             xmlns:nwc="clr-namespace:NeeView.Windows.Controls"
             xmlns:properties="clr-namespace:NeeView.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Foreground="{DynamicResource NVForeground}">

    <UserControl.Resources>

        <local:BooleanToTextWrappingConverter x:Key="BooleanToTextWrappingConverter"/>
        <local:PagemarkNodeToNote x:Key="PagemarkNodeToNote"/>

        <Style x:Key="NameStyle" TargetType="TextBlock">
            <Setter Property="Text" Value="{Binding Value.DispName}"/>
            <Setter Property="ToolTip" Value="{Binding Value.Detail}"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="Foreground" Value="{DynamicResource NVForeground}"/>
        </Style>

        <Style x:Key="NormalNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
        </Style>

        <Style x:Key="ContentNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
            <Setter Property="TextWrapping" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}"/>
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.TextHeight}"/>
        </Style>

        <Style x:Key="BannerrNameStyle" TargetType="TextBlock" BasedOn="{StaticResource NameStyle}">
            <Setter Property="TextWrapping" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.IsTextWrapped, Converter={StaticResource BooleanToTextWrappingConverter}}"/>
            <Setter Property="Height" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.BannerItemProfile.TextHeight}"/>
        </Style>


        <Style x:Key="NoteTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Opacity" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.NoteOpacity}"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="Visibility" Value="{Binding Source={x:Static local:Config.Current}, Path=Panels.ContentItemProfile.NoteVisibility}"/>
            <Setter Property="Foreground" Value="{DynamicResource NVForeground}"/>
        </Style>


        <HierarchicalDataTemplate x:Key="NormalTemplate" ItemsSource="{Binding Children}">
            <Grid MinHeight="20">
                <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource NormalNameStyle}"/>
            </Grid>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ContentTemplate" ItemsSource="{Binding Children}">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1" Background="Transparent">
                <DockPanel Margin="2">
                    <local:PanelListContentImage Thumbnail="{Binding Value.Thumbnail}"/>
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock x:Name="Note" Style="{StaticResource NoteTextStyle}" Text="{Binding Converter={StaticResource PagemarkNodeToNote}}" />
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource ContentNameStyle}"/>
                    </StackPanel>
                </DockPanel>
            </Border>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="BannerTemplate" ItemsSource="{Binding Children}">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1">
                <DockPanel Margin="0" HorizontalAlignment="Stretch" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Bottom" x:Name="FileNameTextBlock" Style="{StaticResource BannerrNameStyle}" Margin="0"/>
                    <local:PanelListBannerImage Thumbnail="{Binding Value.Thumbnail}"/>
                </DockPanel>
            </Border>
        </HierarchicalDataTemplate>

    </UserControl.Resources>

    <TreeView x:Name="TreeView"
              FontFamily="{DynamicResource PanelFontFamily}" FontSize="{DynamicResource PanelFontSize}"
              Foreground="{DynamicResource NVForeground}" Background="Transparent" BorderThickness="0"
              ItemsSource="{Binding Model.Items}"
              SelectedItemChanged="TreeView_SelectedItemChanged"
              IsVisibleChanged="TreeView_IsVisibleChanged"
              KeyDown="TreeVew_KeyDown"
              VirtualizingStackPanel.ScrollUnit="Pixel"
              VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">

        <TreeView.Style>
            <Style TargetType="TreeView" BasedOn="{StaticResource NVTreeView}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=Pagemark.PanelListItemStyle, Mode=OneTime}" Value="Normal">
                        <Setter Property="ItemTemplate" Value="{StaticResource NormalTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=Pagemark.PanelListItemStyle, Mode=OneTime}" Value="Content">
                        <Setter Property="ItemTemplate" Value="{StaticResource ContentTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static local:Config.Current}, Path=Pagemark.PanelListItemStyle, Mode=OneTime}" Value="Banner">
                        <Setter Property="ItemTemplate" Value="{StaticResource BannerTemplate}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </TreeView.Style>

        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}"
                       BasedOn="{StaticResource NVTreeViewItem}">
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu/>
                    </Setter.Value>
                </Setter>
                <EventSetter Event="ContextMenuOpening" Handler="TreeViewItem_ContextMenuOpening"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                <EventSetter Event="MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown"/>
                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TreeViewItem_MouseLeftButtonDown"/>
                <EventSetter Event="KeyDown" Handler="TreeViewItem_KeyDown"/>
                <EventSetter Event="Selected" Handler="TreeViewItem_Selected" />
            </Style>
        </TreeView.ItemContainerStyle>

    </TreeView>

</UserControl>

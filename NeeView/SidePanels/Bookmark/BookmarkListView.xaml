<UserControl x:Class="NeeView.BookmarkListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeeView"
             xmlns:nwc="clr-namespace:NeeView.Windows.Controls"
             xmlns:properties="clr-namespace:NeeView.Properties"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:FolderListDataContext_Design, IsDesignTimeCreatable=True}"
             d:DesignHeight="300" d:DesignWidth="300"
             Foreground="{DynamicResource Panel.Foreground}">

    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/ArrowIcons.xaml" />
                <ResourceDictionary Source="/Styles/PanelIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--#region Icons -->

            <DrawingImage x:Key="ic_star_24px">
                <DrawingImage.Drawing>
                    <DrawingGroup Opacity="1">
                        <DrawingGroup.Children>
                            <GeometryDrawing Brush="Transparent" Geometry="{StaticResource g_rect24x24}" />
                            <GeometryDrawing Brush="Gray" Pen="{x:Null}" Geometry="{StaticResource g_star_border_24px}" />
                        </DrawingGroup.Children>
                    </DrawingGroup>
                </DrawingImage.Drawing>
            </DrawingImage>

            <!--#endregion Icons-->

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <local:BooleanToVisibilityConverter x:Key="BooleanToHiddenVisibilityConverter" False="Hidden" />
            <local:FolderCollectionToFolderRecursiveVisibilityConverter x:Key="FolderCollectionToFolderRecursiveVisibilityConverter" />
            <local:FolderTreeLayoutToBooleanConverter x:Key="FolderTreeLayoutToBooleanConverter" />
            <local:PathToPlaceIconConverter x:Key="PathToPlaceIconConverter" />

            <Style x:Key="FolderListButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
                <Setter Property="Width" Value="28" />
                <Setter Property="MinHeight" Value="{DynamicResource FontIconSize}" />
                <Setter Property="Padding" Value="2" />
            </Style>

            <Style x:Key="FolderListToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource IconToggleButton}">
                <Setter Property="Width" Value="28" />
                <Setter Property="MinHeight" Value="{DynamicResource FontIconSize}" />
            </Style>

            <Style x:Key="HistoryMenuItemContainerStyle" TargetType="MenuItem">
                <Setter Property="Header" Value="{Binding Path=Value.DispName}" />
                <Setter Property="Command" Value="{Binding DataContext.MoveToHistory, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                <Setter Property="CommandParameter" Value="{Binding}" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel x:Name="Root" Margin="2" IsVisibleChanged="BookmarkListView_IsVisibleChanged" Background="Transparent" KeyDown="Root_KeyDown">

        <StackPanel DockPanel.Dock="Top">

            <DockPanel HorizontalAlignment="Stretch">
                <TextBlock DockPanel.Dock="Right" Text="{Binding FolderCollection.ValidCount, StringFormat={}{0}}" Foreground="{DynamicResource Panel.Foreground}" Margin="5,0"
                                    Visibility="{Binding Source={x:Static local:Config.Current}, Path=Panels.IsVisibleItemsCount, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Border x:Name="PlaceGrid" Margin="1,0">
                    <nwc:LeftTrimmingTextBlock TextSource="{Binding FolderCollection.Place.Path}" ToolTip="{Binding FolderCollection.Place.Path}" VerticalAlignment="Center" />
                </Border>
            </DockPanel>

            <DockPanel KeyboardNavigation.TabNavigation="Local">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Top">
                    <Button x:Name="FoderTreeButton" Style="{StaticResource FolderListButtonStyle}" TabIndex="2"
                            ToolTip="{properties:TextBinding Word.FoldersTree}"
                            Command="{Binding ToggleVisibleFoldersTree}">
                        <Image Source="{StaticResource ic_treeview_a}" />
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{properties:TextBinding FolderTreeLayout.Top}" IsChecked="{Binding Model.FolderTreeLayout, Converter={StaticResource FolderTreeLayoutToBooleanConverter}, ConverterParameter={x:Static local:FolderTreeLayout.Top}}"
                                          Command="{Binding SetFolderTreeLayout}" CommandParameter="{x:Static local:FolderTreeLayout.Top}"/>
                                <MenuItem Header="{properties:TextBinding FolderTreeLayout.Left}" IsChecked="{Binding Model.FolderTreeLayout, Converter={StaticResource FolderTreeLayoutToBooleanConverter}, ConverterParameter={x:Static local:FolderTreeLayout.Left}}"
                                          Command="{Binding SetFolderTreeLayout}" CommandParameter="{x:Static local:FolderTreeLayout.Left}"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <local:MoreMenuButton Description="{Binding MoreMenuDescription}" MinHeight="{DynamicResource FontIconSize}" TabIndex="4" />
                </StackPanel>
                <WrapPanel Orientation="Horizontal" MinWidth="90">
                    <Button x:Name="AddBookmarkButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding AddBookmarkCommand}" ToolTip="{properties:TextBinding BookmarkList.Add.ToolTip}" TabIndex="1">
                        <Image Source="{StaticResource ic_add_24px_a}" />
                    </Button>
                    <Button x:Name="FolderUpButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToUp}" TabIndex="1"
                        ToolTip="{properties:TextBinding Bookmark.Up.ToolTip}">
                        <Image Source="{StaticResource ic_arrow_up_24px_a}" />
                    </Button>
                    <ComboBox x:Name="FolderOrderComboBox" FontFamily="{DynamicResource ArrowFontFamily}" TabIndex="1"
                          ItemsSource="{Binding FolderOrderList}" SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValue="{Binding FolderCollection.FolderParameter.FolderOrder, Delay=1}"
                          Visibility="{Binding Model.IsFolderOrderEnabled, Converter={StaticResource BooleanToHiddenVisibilityConverter}}">
                    </ComboBox>
                </WrapPanel>
            </DockPanel>

            <Grid Margin="0,2,0,5" IsEnabled="{Binding Model.IsFolderSearchEnabled}">
                <local:SearchBox x:Name="SearchBox"
                                 Text="{Binding SearchBoxModel.Keyword}"
                                 ItemsSource="{Binding SearchBoxModel.History}"
                                 SearchKeywordErrorMessage="{Binding SearchBoxModel.KeywordErrorMessage}"
                                 SearchCommand="{Binding SearchBoxModel.SearchCommand}"
                                 DeleteCommand="{Binding SearchBoxModel.DeleteCommand}"
                                 />
            </Grid>
            
        </StackPanel>

        <Grid x:Name="LayoutGrid" SizeChanged="Grid_SizeChanged">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding FolderTreeAreaWidth, Mode=TwoWay}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding FolderTreeAreaHeight, Mode=TwoWay}"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <local:FolderTreeView x:Name="FolderTree"
                                  Visibility="{Binding Model.IsFolderTreeVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <local:FolderTreeView.Style>
                    <Style TargetType="{x:Type local:FolderTreeView}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FolderTreeLayout}" Value="Top">
                                <Setter Property="Grid.Column" Value="1"/>
                                <Setter Property="Grid.Row" Value="0"/>
                                <Setter Property="Margin" Value="2,2,2,8"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FolderTreeLayout}" Value="Left">
                                <Setter Property="Grid.Column" Value="0"/>
                                <Setter Property="Grid.Row" Value="1"/>
                                <Setter Property="Margin" Value="2,2,8,2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </local:FolderTreeView.Style>
            </local:FolderTreeView>

            <GridSplitter x:Name="FolderTreeAreaSplitter" IsTabStop="False" UseLayoutRounding="True" SnapsToDevicePixels="True" Background="{DynamicResource  Panel.Splitter}"
                          MinWidth="6" MinHeight="6"
                          Visibility="{Binding IsFolderTreeVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <GridSplitter.Style>
                    <Style TargetType="GridSplitter">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FolderTreeLayout}" Value="Top">
                                <Setter Property="Grid.Column" Value="1"/>
                                <Setter Property="Grid.Row" Value="0"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FolderTreeLayout}" Value="Left">
                                <Setter Property="Grid.Column" Value="0"/>
                                <Setter Property="Grid.Row" Value="1"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GridSplitter.Style>
            </GridSplitter>

            <ContentControl x:Name="ListBoxContent" Grid.Column="1" Grid.Row="1" Focusable="False" Margin="2" />
        </Grid>

    </DockPanel>
</UserControl>

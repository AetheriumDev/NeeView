<!--
    Copyright (c) 2016 Mitsuhiro Ito (nee)

    This software is released under the MIT License.
    http://opensource.org/licenses/mit-license.php
-->

<UserControl x:Class="NeeView.FolderListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeeView"
             xmlns:nwc="clr-namespace:NeeView.Windows.Controls"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:FolderListDataContext_Design, IsDesignTimeCreatable=True}"
             d:DesignHeight="300" d:DesignWidth="300"
             Background="{DynamicResource NVBackground}"
             Foreground="{DynamicResource NVForeground}">

    <UserControl.Resources>

        <DrawingImage x:Key="fic_recursive_folder_24px">
            <DrawingImage.Drawing>
                <DrawingGroup Opacity="1">
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Gray" Pen="{x:Null}">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M0,6L1.99999988079071,6 1.99999988079071,20 20,20 20,22 1.99999988079071,22C0.899999976158142,22,0,21.1000003814697,0,20L0.00999999046325684,11 0,11 0,6z M6,2L12,2 14,4 22,4C23.1000003814697,4,24,4.90000009536743,24,6L24,16C24,17.1000003814697,23.1000003814697,18,22,18L6,18C4.90000009536743,18,4,17.1000003814697,4,16L4.01000022888184,4C4.01000022888184,2.90000009536743,4.90000009536743,2,6,2z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <Style x:Key="FolderListButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
        </Style>

        <Style x:Key="FolderListToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource IconToggleButton}">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <Style x:Key="BlackStyle" TargetType="UserControl">
            <Setter Property="Background" Value="#FF101010"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="WhiteStyle" TargetType="UserControl">
            <Setter Property="Background" Value="#FFF8F8F8"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <local:FullPathToFileNameConverter x:Key="FullPathToFileNameConverter"/>

        <Style x:Key="HistoryMenuItemContainerStyle" TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding Path=Value, Converter={StaticResource FullPathToFileNameConverter}}"/>
            <Setter Property="Command" Value="{Binding DataContext.MoveToHistory, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
            <Setter Property="CommandParameter" Value="{Binding}" />
        </Style>


        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
        <local:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"/>

        <local:FolderIconLayoutToVisibilityConverter x:Key="FolderIconLayoutToVisibilityConverter"/>

        <Style TargetType="TextBlock" x:Key="FolderName">
            <Setter Property="Text" Value="{Binding Name}"/>
            <Setter Property="ToolTipService.IsEnabled" Value="{Binding ElementName=ListBox, Path=DataContext.IsRenaming, Converter={StaticResource BooleanReverseConverter}}"/>
            <Setter Property="ToolTip" Value="{Binding Name}"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="FolderParameter">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <local:FileSizeToStringConverter x:Key="FileSizeToStringConverter"/>

        <!-- Normal -->
        <DataTemplate x:Key="NormalFolder">
            <DockPanel LastChildFill="False">
                <local:FolderListIcon DockPanel.Dock="Right"/>
                <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource FolderName}"/>
            </DockPanel>
        </DataTemplate>

        <!-- Normal 2-->
        <DataTemplate x:Key="NormalFolder2">
            <DockPanel LastChildFill="False">
                <local:FolderListIconMark DockPanel.Dock="Right"/>
                <local:FolderIcon DockPanel.Dock="Left" />
                <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource FolderName}"/>
            </DockPanel>
        </DataTemplate>

        <!-- Content -->
        <DataTemplate x:Key="PictureFolder">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1">
                <DockPanel LastChildFill="False" Margin="2">
                    <local:FolderListIcon DockPanel.Dock="Right" />
                    <local:FolderListThumbnail DataContext="{Binding ArchivePage.Thumbnail}" d:DataContext="{d:DesignInstance local:Thumbnail_Design, IsDesignTimeCreatable=True}"/>
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource FolderName}" TextWrapping="NoWrap" HorizontalAlignment="Left"/>
                        <TextBlock x:Name="LastUpdateTime" Style="{StaticResource FolderParameter}" Text="{Binding ArchivePage.LastWriteTime, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" />
                        <TextBlock x:Name="FileSize" Style="{StaticResource FolderParameter}" Text="{Binding ArchivePage.Length, Converter={StaticResource FileSizeToStringConverter}}" />
                    </StackPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <!-- Content 2 -->
        <DataTemplate x:Key="PictureFolder2">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1">
                <DockPanel LastChildFill="False" Margin="2">
                    <local:FolderListIconMark DockPanel.Dock="Right" />
                    <local:FolderListThumbnail DataContext="{Binding ArchivePage.Thumbnail}" d:DataContext="{d:DesignInstance local:Thumbnail_Design, IsDesignTimeCreatable=True}"/>
                    <StackPanel VerticalAlignment="Center">
                        <DockPanel>
                            <local:FolderIcon DockPanel.Dock="Left" />
                            <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource FolderName}" TextWrapping="NoWrap" HorizontalAlignment="Left"/>
                        </DockPanel>
                        <TextBlock x:Name="LastUpdateTime" Style="{StaticResource FolderParameter}" Text="{Binding ArchivePage.LastWriteTime, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" />
                        <TextBlock x:Name="FileSize" Style="{StaticResource FolderParameter}" Text="{Binding ArchivePage.Length, Converter={StaticResource FileSizeToStringConverter}}" />
                    </StackPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <!-- Banner -->
        <DataTemplate x:Key="BannerFolder">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1">
                <DockPanel Margin="0" Height="80" HorizontalAlignment="Stretch" LastChildFill="False">
                    <DockPanel DockPanel.Dock="Bottom" Margin="2" >
                        <local:FolderListIcon DockPanel.Dock="Right"/>
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource FolderName}" Margin="0" />
                    </DockPanel>
                    <local:FolderListBanner Width="256" DataContext="{Binding ArchivePage.Thumbnail}" d:DataContext="{d:DesignInstance local:Thumbnail_Design, IsDesignTimeCreatable=True}"/>
                </DockPanel>
            </Border>
        </DataTemplate>

        <!-- BannerFolder 2-->
        <DataTemplate x:Key="BannerFolder2">
            <Border Margin="0,1" BorderBrush="#22888888" BorderThickness="0,0,0,1">
                <DockPanel Margin="0" Height="80" HorizontalAlignment="Stretch" LastChildFill="False">
                    <DockPanel DockPanel.Dock="Bottom" Margin="2" >
                        <local:FolderListIconMark DockPanel.Dock="Right"/>
                        <local:FolderIcon DockPanel.Dock="Left" />
                        <TextBlock x:Name="FileNameTextBlock" Style="{StaticResource FolderName}" />
                    </DockPanel>
                    <local:FolderListBanner Width="256" DataContext="{Binding ArchivePage.Thumbnail}" d:DataContext="{d:DesignInstance local:Thumbnail_Design, IsDesignTimeCreatable=True}"/>
                </DockPanel>
            </Border>
        </DataTemplate>


    </UserControl.Resources>


    <DockPanel x:Name="DockPanel" Margin="0,5,0,0" IsVisibleChanged="FolderList_IsVisibleChanged">

        <StackPanel DockPanel.Dock="Top" Margin="5">
            <StackPanel Margin="5" HorizontalAlignment="Left">
                <TextBlock Text="場所" Foreground="Gray" Margin="5,0"/>
                <DockPanel>
                    <Image DockPanel.Dock="Right" Source="{StaticResource fic_recursive_folder_24px}" Width="12" Height="12" VerticalAlignment="Bottom" Margin="0,0,0,4"
                           ToolTip="サブフォルダーを読み込む"
                           Visibility="{Binding FolderCollection.FolderParameter.IsFolderRecursive, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <TextBlock Text="{Binding FolderCollection.PlaceDispString}" ToolTip="{Binding FolderCollection.PlaceDispString}" Margin="5,0"/>
                </DockPanel>
            </StackPanel>

            <DockPanel>

                <nwc:DropDownMenuButton x:Name="MoreButton" DockPanel.Dock="Right" Style="{StaticResource FolderListToggleButtonStyle}"  VerticalAlignment="Top" ToolTip="設定"
                                        DropDownContextMenu="{Binding MoreMenu}">
                    <Image Source="{StaticResource ic_more_24px_b}" Width="16" Height="16"/>
                </nwc:DropDownMenuButton>

                <WrapPanel Orientation="Horizontal" MinWidth="90">
                    <Button x:Name="FolderHomeButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToHome}"
                        ToolTip="ホームに移動">
                        <Image Source="{StaticResource ic_home_24px_b}" Width="20" Height="20"/>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="この場所をホームに設定する" Command="{Binding SetHome}"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="FolderPrevButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToPrevious}"
                        ContextMenuService.Placement="Bottom"
                        ContextMenuOpening="FolderPrevButton_ContextMenuOpening"
                        ToolTip="戻る">
                        <Image Source="{StaticResource ic_arrow_back_24px_b}" Width="16" Height="16"/>
                        <Button.ContextMenu>
                            <ContextMenu x:Name="FolderPrevButtonContextMenu" ItemContainerStyle="{StaticResource HistoryMenuItemContainerStyle}"/>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="FolderNextButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToNext}"
                        ContextMenuService.Placement="Bottom"
                        ContextMenuOpening="FolderNextButton_ContextMenuOpening"
                        ToolTip="進む">
                        <Image Source="{StaticResource ic_arrow_forward_24px_b}" Width="16" Height="16"/>
                        <Button.ContextMenu>
                            <ContextMenu x:Name="FolderNextButtonContextMenu" ItemContainerStyle="{StaticResource HistoryMenuItemContainerStyle}"/>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="FolderUpButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToUp}"
                        ToolTip="上に移動">
                        <Image Source="{StaticResource ic_arrow_up_24px_b}" Width="16" Height="16"/>
                    </Button>
                    <Button x:Name="FolderSync" Style="{StaticResource FolderListButtonStyle}"  Command="{Binding Sync}"
                        ToolTip="表示中のフォルダーに移動">
                        <Image Source="{StaticResource ic_sync_24px_b}" Width="20" Height="20"/>
                    </Button>
                    <ComboBox x:Name="FolderOrderComboBox" Style="{StaticResource NVComboBox}" Foreground="{StaticResource NVButtonForeground}" Background="{DynamicResource NVBackground}" FontSize="15"
                          ItemsSource="{Binding FolderOrderList}" SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValue="{Binding FolderCollection.FolderParameter.FolderOrder, Delay=1}"
                          VerticalAlignment="Center">
                    </ComboBox>
                </WrapPanel>

            </DockPanel>
        </StackPanel>

        <!--
        <Grid>
            <ContentControl x:Name="FolderListContent"  Focusable="False" Content="{Binding FolderListView}"/>
        </Grid>
        -->

        <ListBox x:Name="ListBox" Focusable="True" 
                Background="Transparent"
                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}"
                FocusVisualStyle="{StaticResource NVFocusVisual}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding FolderCollection.Items}"
                SelectedIndex="{Binding SelectedIndex}"
                SelectionChanged="FolderList_SelectionChanged"
                Loaded="FolderList_Loaded"
                PreviewKeyDown="FolderList_PreviewKeyDown"
                KeyDown="FolderList_KeyDown"
                HorizontalContentAlignment="Stretch"
                UseLayoutRounding="True"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling"
             >

            <ListBox.Style>
                <Style TargetType="ListBox" BasedOn="{StaticResource NVListBox}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.PanelListItemStyle}" Value="Normal"/>
                                <Condition Binding="{Binding Model.FolderIconLayout}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ItemTemplate" Value="{StaticResource NormalFolder}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.PanelListItemStyle}" Value="Normal"/>
                                <Condition Binding="{Binding Model.FolderIconLayout}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ItemTemplate" Value="{StaticResource NormalFolder2}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.PanelListItemStyle}" Value="Content"/>
                                <Condition Binding="{Binding Model.FolderIconLayout}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ItemTemplate" Value="{StaticResource PictureFolder}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.PanelListItemStyle}" Value="Content"/>
                                <Condition Binding="{Binding Model.FolderIconLayout}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ItemTemplate" Value="{StaticResource PictureFolder2}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.PanelListItemStyle}" Value="Banner"/>
                                <Condition Binding="{Binding Model.FolderIconLayout}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ItemTemplate" Value="{StaticResource BannerFolder}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.PanelListItemStyle}" Value="Banner"/>
                                <Condition Binding="{Binding Model.FolderIconLayout}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ItemTemplate" Value="{StaticResource BannerFolder2}"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>

            <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="PreviewMouseLeftButtonUp" Handler="FolderListItem_MouseSingleClick"/>
                    <EventSetter Event="PreviewMouseDoubleClick" Handler="FolderListItem_MouseDoubleClick"/>
                    <EventSetter Event="KeyDown" Handler="FolderListItem_KeyDown"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource NVFocusVisual}"/>
                    <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Header="サブフォルダーを読み込む" Command="{x:Static local:FolderListView.LoadWithRecursiveCommand}"/>
                                <Separator/>
                                <MenuItem Header="エクスプローラーで開く" Command="{x:Static local:FolderListView.OpenExplorerCommand}"/>
                                <MenuItem Header="コピー(C)" Command="{x:Static local:FolderListView.CopyCommand}"/>
                                <Separator/>
                                <MenuItem Header="削除(D)" Command="{x:Static local:FolderListView.RemoveCommand}"/>
                                <MenuItem Header="名前の変更(M)" Command="{x:Static local:FolderListView.RenameCommand}"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>

        </ListBox>

    </DockPanel>
</UserControl>

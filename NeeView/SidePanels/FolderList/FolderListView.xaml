<UserControl x:Class="NeeView.FolderListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeeView"
             xmlns:nwc="clr-namespace:NeeView.Windows.Controls"
             xmlns:properties="clr-namespace:NeeView.Properties"
             xmlns:osc="clr-namespace:OpenSourceControls"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:FolderListDataContext_Design, IsDesignTimeCreatable=True}"
             d:DesignHeight="300" d:DesignWidth="300"
             Foreground="{DynamicResource NVForeground}">

    <UserControl.Resources>

        <DrawingImage x:Key="fic_recursive_folder_24px">
            <DrawingImage.Drawing>
                <DrawingGroup Opacity="1">
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Gray" Pen="{x:Null}">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M0,6L1.99999988079071,6 1.99999988079071,20 20,20 20,22 1.99999988079071,22C0.899999976158142,22,0,21.1000003814697,0,20L0.00999999046325684,11 0,11 0,6z M6,2L12,2 14,4 22,4C23.1000003814697,4,24,4.90000009536743,24,6L24,16C24,17.1000003814697,23.1000003814697,18,22,18L6,18C4.90000009536743,18,4,17.1000003814697,4,16L4.01000022888184,4C4.01000022888184,2.90000009536743,4.90000009536743,2,6,2z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="ic_treeview">
            <DrawingImage.Drawing>
                <DrawingGroup Opacity="1">
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="{StaticResource NVButtonForeground}" Pen="{x:Null}">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M990,379.4L990,21.1L631.8,21.1L631.8,186.4L368.2,348.6L368.2,293.1L10,293.1L10,651.4L368.2,651.4L368.2,585.3L631.8,781L631.8,978.9L990,978.9L990,620.6L631.8,620.6L631.8,702.3L368.2,506.5L368.2,422.8L631.8,260.7L631.8,379.4z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="ic_photo_library_24px">
            <DrawingImage.Drawing>
                <DrawingGroup Opacity="1">
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="{StaticResource NVButtonForeground}" Pen="{x:Null}">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M22,16L22,4C22,2.9,21.1,2,20,2L8,2C6.9,2,6,2.9,6,4L6,16C6,17.1,6.9,18,8,18L20,18C21.1,18,22,17.1,22,16z M11,12L13.03,14.71 16,11 20,16 8,16 11,12z M2,6L2,20C2,21.1,2.9,22,4,22L18,22 18,20 4,20 4,6 2,6z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <Style x:Key="FolderListButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
        </Style>

        <Style x:Key="FolderListToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource IconToggleButton}">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
        </Style>


        <local:FullPathToFileNameConverter x:Key="FullPathToFileNameConverter"/>

        <Style x:Key="HistoryMenuItemContainerStyle" TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding Path=Value, Converter={StaticResource FullPathToFileNameConverter}}"/>
            <Setter Property="Command" Value="{Binding DataContext.MoveToHistory, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
            <Setter Property="CommandParameter" Value="{Binding}" />
        </Style>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="NVHorizontalBevelGrip" TargetType="{x:Type osc:DockPanelSplitter}">
            <Setter Property="Thickness" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type osc:DockPanelSplitter}">
                        <Grid SnapsToDevicePixels="True" Background="{DynamicResource  NVBaseBrush}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>


    <DockPanel x:Name="DockPanel" Margin="0,5,0,0" IsVisibleChanged="FolderListView_IsVisibleChanged">

        <StackPanel DockPanel.Dock="Top" Margin="5">

            <StackPanel Margin="5" HorizontalAlignment="Stretch">

                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="Gray" Margin="2,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{x:Static properties:Resources.FolderListTitlePlace}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Model.IsFolderSearchCollection}" Value="True">
                                        <Setter Property="Text" Value="{x:Static properties:Resources.FolderListTitleSearch}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <Grid x:Name="PlaceGrid">
                    <DockPanel HorizontalAlignment="Left">
                        <Image DockPanel.Dock="Right" Source="{StaticResource fic_recursive_folder_24px}" Width="12" Height="12" VerticalAlignment="Bottom" Margin="0,0,0,4"
                           ToolTip="{x:Static properties:Resources.FolderListSubFolderTips}"
                           Visibility="{Binding IsFolderRecursive, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBlock Text="{Binding Place}" ToolTip="{Binding Place}" Margin="5,0" HorizontalAlignment="Right"/>
                    </DockPanel>
                </Grid>
            </StackPanel>

            <DockPanel KeyboardNavigation.TabNavigation="Local">
                <ToggleButton x:Name="MoreButton" DockPanel.Dock="Right" Style="{StaticResource FolderListToggleButtonStyle}"  VerticalAlignment="Center" TabIndex="4"
                              nwc:DropDownMenuBehavior.DropDownMenu="{Binding MoreMenu}">
                    <Image Source="{StaticResource ic_more_24px_b}" Width="16" Height="16"/>
                </ToggleButton>
                <Button x:Name="PageListButton" DockPanel.Dock="Right" Style="{StaticResource FolderListButtonStyle}"  VerticalAlignment="Center" TabIndex="3"
                        ToolTip="{x:Static properties:Resources.WordPageList}"
                        Command="{Binding ToggleVisiblePageList}">
                    <Image Source="{StaticResource ic_photo_library_24px}" Width="16" Height="16"/>
                </Button>
                <Button x:Name="FoderTreeButton" DockPanel.Dock="Right" Style="{StaticResource FolderListButtonStyle}"  VerticalAlignment="Center" TabIndex="2"
                        ToolTip="{x:Static properties:Resources.WordFoldersTree}"
                        Command="{Binding ToggleVisibleFoldersTree}">
                    <Image Source="{StaticResource ic_treeview}" Width="16" Height="16"/>
                </Button>
                <WrapPanel Orientation="Horizontal" MinWidth="90">
                    <Button x:Name="FolderHomeButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToHome}" TabIndex="1"
                        ToolTip="{x:Static properties:Resources.FolderListHomeTips}">
                        <Image Source="{StaticResource ic_home_24px_b}" Width="20" Height="20"/>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static properties:Resources.FolderListHomeMenuSet}" Command="{Binding SetHome}"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="FolderPrevButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToPrevious}" TabIndex="1"
                        ContextMenuService.Placement="Bottom"
                        ContextMenuOpening="FolderPrevButton_ContextMenuOpening"
                        ToolTip="{x:Static properties:Resources.FolderListBackTips}">
                        <Image Source="{StaticResource ic_arrow_back_24px_b}" Width="16" Height="16"/>
                        <Button.ContextMenu>
                            <ContextMenu x:Name="FolderPrevButtonContextMenu" ItemContainerStyle="{StaticResource HistoryMenuItemContainerStyle}"/>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="FolderNextButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToNext}" TabIndex="1"
                        ContextMenuService.Placement="Bottom"
                        ContextMenuOpening="FolderNextButton_ContextMenuOpening"
                        ToolTip="{x:Static properties:Resources.FolderListNextTips}">
                        <Image Source="{StaticResource ic_arrow_forward_24px_b}" Width="16" Height="16"/>
                        <Button.ContextMenu>
                            <ContextMenu x:Name="FolderNextButtonContextMenu" ItemContainerStyle="{StaticResource HistoryMenuItemContainerStyle}"/>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="FolderUpButton" Style="{StaticResource FolderListButtonStyle}" Command="{Binding MoveToUp}" TabIndex="1"
                        ToolTip="{x:Static properties:Resources.FolderListUpTips}">
                        <Image Source="{StaticResource ic_arrow_up_24px_b}" Width="16" Height="16"/>
                    </Button>
                    <Button x:Name="FolderSync" Style="{StaticResource FolderListButtonStyle}"  Command="{Binding Sync}" TabIndex="1"
                        ToolTip="{x:Static properties:Resources.FolderListSyncTips}">
                        <Image Source="{StaticResource ic_sync_24px_b}" Width="20" Height="20"/>
                    </Button>
                    <ComboBox x:Name="FolderOrderComboBox" Style="{StaticResource NVComboBox}" Foreground="{StaticResource NVButtonForeground}" Background="{DynamicResource NVBackground}" TabIndex="1"
                          ItemsSource="{Binding FolderOrderList}" SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValue="{Binding FolderCollection.FolderParameter.FolderOrder, Delay=1}"
                          VerticalAlignment="Center">
                    </ComboBox>
                </WrapPanel>
            </DockPanel>

            <Border Margin="0,0,0,5" Visibility="{Binding Model.IsFolderSearchBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                    BorderThickness="1" Background="{DynamicResource NVBaseBrush}">
                <Border.Resources>
                    <Style TargetType="TextBox">
                        <Setter Property="Foreground" Value="{DynamicResource NVForeground}"/>
                        <Setter Property="Background" Value="{DynamicResource NVBaseBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource NVDefaultBrush}"/>
                        <EventSetter Event="KeyDown" Handler="Control_KeyDown_IgnoreSingleKeyGesture"/>
                    </Style>
                </Border.Resources>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="{DynamicResource NVDefaultBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsFolderSearchCollection}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource NVButtonForeground}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.IsFolderSearchEnabled}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource NVBackground}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <DockPanel KeyboardNavigation.TabNavigation="Local">
                    <Button x:Name="ClearSearchButton" DockPanel.Dock="Right" VerticalAlignment="Center" Style="{StaticResource FolderListButtonStyle}" Width="24" Command="{Binding ClearSearch}" TabIndex="3">
                        <Image Source="{StaticResource ic_clear_24px_b}" Width="12" Height="12"/>
                    </Button>
                    <Button x:Name="SearchButton" DockPanel.Dock="Right" VerticalAlignment="Center" Style="{StaticResource FolderListButtonStyle}" Width="24" Command="{Binding Search}" TabIndex="2">
                        <Image Source="{StaticResource ic_search_24px_b}" Width="16" Height="16"/>
                    </Button>
                    <ComboBox x:Name="SearchBox" Text="{Binding Model.SearchKeyword, Delay=500, UpdateSourceTrigger=PropertyChanged}" TabIndex="1"
                              Style="{StaticResource NVComboBoxEditable}"
                              IsKeyboardFocusWithinChanged="SearchBox_IsKeyboardFocusWithinChanged"
                              Foreground="{DynamicResource NVForeground}" Background="{DynamicResource NVBaseBrush}"
                              VerticalAlignment="Center" KeyDown="SearchBox_KeyDown" ItemsSource="{Binding Model.BookHistory.SearchHistory}" IsTextSearchCaseSensitive="True"
                              IsEditable="True" BorderThickness="0" BorderBrush="red">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" MaxWidth="{Binding ElementName=SearchBox,Path=ActualWidth}" MinWidth="200"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </DockPanel>
            </Border>

        </StackPanel>

        <DockPanel SizeChanged="Grid_SizeChanged">
            <local:FolderTreeView DockPanel.Dock="Top" x:Name="FolderTree" Height="{Binding Model.FolderTreeAreaHeight, Mode=TwoWay}"
                                      Visibility="{Binding Model.IsFolderTreeVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <osc:DockPanelSplitter x:Name="LeftPanelSplitter" DockPanel.Dock="Top" Style="{StaticResource NVHorizontalBevelGrip}" ProportionalResize="False" UseLayoutRounding="True" IsTabStop="False"
                                   Visibility="{Binding Model.IsFolderTreeVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Grid>
                <ContentControl x:Name="ListContent" Content="{Binding ListContent}" Focusable="False"/>
                <ContentControl x:Name="BusyFadeContent" Focusable="False"/>
            </Grid>
        </DockPanel>

    </DockPanel>
</UserControl>

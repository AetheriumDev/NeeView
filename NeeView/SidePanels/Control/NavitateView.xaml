<UserControl x:Class="NeeView.NavitateView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:NeeView"
        xmlns:nvp="clr-namespace:NeeView.Windows.Property" xmlns:nvc="clr-namespace:NeeView.Windows.Controls" xmlns:properties="clr-namespace:NeeView.Properties" mc:Ignorable="d" d:DesignHeight="800"
        d:DesignWidth="300" MinWidth="200" Focusable="True" FocusVisualStyle="{x:Null}" Foreground="{DynamicResource NVForeground}">

    <UserControl.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/NeeView/Windows/Property/PropertyValueTemplateDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type nvp:PropertyTitleElement}">
                <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" FontWeight="Bold" Margin="0,10,0,5" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type nvp:PropertyMemberElement}">
                <nvp:PropertyControl Header="{Binding Name}" Value="{Binding TypeValue}" Tips="{Binding Tips}" />
                <!--
                        ColumnRate="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ColumnRate}" />
                -->
            </DataTemplate>



            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <DataTemplate DataType="{x:Type nvp:PropertyValue_Boolean}">
                <CheckBox IsChecked="{Binding Value}" Content="{Binding Value}" />
            </DataTemplate>

            <Style x:Key="BlackStyle" TargetType="UserControl">
                <Setter Property="Background" Value="#FF101010" />
                <Setter Property="Foreground" Value="White" />
            </Style>
            <Style x:Key="WhiteStyle" TargetType="UserControl">
                <Setter Property="Background" Value="#FFF8F8F8" />
                <Setter Property="Foreground" Value="Black" />
            </Style>

            <Style x:Key="ToggleSwitchStyle" TargetType="nvc:ToggleSwitch">
                <Setter Property="Fill" Value="{DynamicResource NVBackground}" />
                <Setter Property="Stroke" Value="{DynamicResource NVForeground}" />
                <Setter Property="CheckedBrush" Value="{DynamicResource NVButtonForeground}" />
                <Setter Property="Margin" Value="10,0" />
                <Setter Property="Height" Value="30" />
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Foreground" Value="{DynamicResource NVForeground}" />
                <Setter Property="Background" Value="{DynamicResource NVBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource NVDefaultBrush}" />
                <EventSetter Event="KeyDown" Handler="Control_KeyDown_IgnoreSingleKeyGesture" />
            </Style>

            <Style TargetType="nvc:EnterTriggerTextBox" BasedOn="{StaticResource {x:Type TextBox}}" />

            <Style TargetType="ComboBox" BasedOn="{StaticResource NVComboBox}">
                <Setter Property="Foreground" Value="{StaticResource NVButtonForeground}" />
                <Setter Property="Background" Value="{DynamicResource NVBackground}" />
            </Style>

            <Style TargetType="Separator">
                <Setter Property="Background" Value="#4888" />
                <Setter Property="Margin" Value="0,5" />
            </Style>

            <Style x:Key="NavigateButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="28" />
            </Style>

            <Style x:Key="NavigateToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource IconToggleButton}">
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="28" />
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid Background="Transparent">
        <ScrollViewer x:Name="ScrollView" Style="{StaticResource DarkScrollViewer}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled" Focusable="False"
                CanContentScroll="False">

            <StackPanel Margin="5,10,0,10">

                <StackPanel Margin="0,5,0,10" Orientation="Horizontal">
                    <TextBlock Text="{x:Static properties:Resources.NavigateName}" Foreground="Gray" VerticalAlignment="Center" />
                </StackPanel>

                <Separator />

                <ContentControl Content="{Binding NavigateProfile[Angle]}" Margin="-5,0" />

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{StaticResource NavigateButtonStyle}" Command="{Binding RotateLeftCommand}" ToolTip="@RotateLeft">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </Button>
                    <Button Style="{StaticResource NavigateButtonStyle}" Command="{Binding RotateRightCommand}" ToolTip="@RotateRight">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </Button>
                    <Button Style="{StaticResource NavigateButtonStyle}" Command="{Binding RotateResetCommand}" ToolTip="@RotateRerset">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </Button>
                    <ToggleButton Style="{StaticResource NavigateToggleButtonStyle}" IsChecked="{Binding IsStretchEnabled}" ToolTip="@Stretch">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </ToggleButton>
                    <ToggleButton Style="{StaticResource NavigateToggleButtonStyle}" IsChecked="{Binding IsKeepAngle}" ToolTip="@IsKeepAngle">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </ToggleButton>
                </StackPanel>

                <ContentControl Content="{Binding NavigateProfile[AutoRotate]}" Margin="-5,0" />

                <Separator />

                <ContentControl Content="{Binding NavigateProfile[Scale]}" Margin="-5,0" />

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                    <Button Style="{StaticResource NavigateButtonStyle}" Command="{Binding ScaleDownCommand}" ToolTip="@ScaleDown">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </Button>
                    <Button Style="{StaticResource NavigateButtonStyle}" Command="{Binding ScaleUpCommand}" ToolTip="@ScaleUp">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </Button>
                    <ToggleButton Style="{StaticResource NavigateToggleButtonStyle}" IsChecked="{Binding IsKeepScale}" ToolTip="@IsKeepScale">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </ToggleButton>
                </StackPanel>

                <Separator />

                <ContentControl Content="{Binding NavigateProfile[IsFlipHorizontal]}" Margin="-5,0" />
                <ContentControl Content="{Binding NavigateProfile[IsFlipVertical]}" Margin="-5,0" />

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <ToggleButton Style="{StaticResource NavigateToggleButtonStyle}" IsChecked="{Binding IsKeepFlip}" ToolTip="@IsKeepFlip">
                        <Image Source="{StaticResource ic_sync_24px_b}" />
                    </ToggleButton>
                </StackPanel>

            </StackPanel>

        </ScrollViewer>
    </Grid>


</UserControl>

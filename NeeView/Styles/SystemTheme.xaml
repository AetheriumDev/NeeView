<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:nvc="clr-namespace:NeeView.Windows.Controls">


    <DrawingImage x:Key="ic_setting_24px">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="Transparent" Geometry="{StaticResource g_rect24x24}" />
                <GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Pen="{x:Null}" Geometry="{StaticResource g_setting_24px}" />
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>


    
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid x:Name="EnableTrue" Width="22" Height="22">
                                <Rectangle x:Name="CheckRect" Width="20" Height="20" Fill="Transparent" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" />
                                <Rectangle x:Name="CheckNull" Width="10" Height="10" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" />
                                <Path x:Name="CheckMark" IsHitTestVisible="False" SnapsToDevicePixels="False" StrokeThickness="1" Data="M 3 10 l 5 5 l 10 -10" Stroke="{TemplateBinding BorderBrush}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter Margin="5,0" VerticalAlignment="Center" />
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter TargetName="CheckRect" Property="Fill" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter TargetName="CheckRect" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckRect" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckRect" Property="Stroke" Value="Gray" />
                            <Setter TargetName="CheckRect" Property="Fill" Value="Transparent" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SystemIconButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource NVSystemFocusVisual}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource System.ItemMouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource System.ItemMouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource System.ItemSelected.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource System.ItemSelected.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SystemIconToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource NVSystemFocusVisual}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource System.ItemMouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource System.ItemMouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource System.ItemMouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource System.ItemMouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource System.ItemSelected.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource System.ItemSelected.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NVSystemDialogButton" TargetType="{x:Type Button}" BasedOn="{StaticResource NVDialogButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource NVSystemFocusVisual}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    </Style>

    <Style x:Key="NVSystemDialogRecommentedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource NVSystemDialogButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
    </Style>


    <Style x:Key="NVSystemToggleSwitch" TargetType="{x:Type nvc:ToggleSwitch}">
        <Setter Property="Fill" Value="Transparent" />
        <Setter Property="Stroke" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="CheckedBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
    </Style>


    <Style TargetType="{x:Type nvc:ToggleSwitch}" BasedOn="{StaticResource NVSystemToggleSwitch}" />

    
    <Style TargetType="nvc:EnterTriggerTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>


</ResourceDictionary>
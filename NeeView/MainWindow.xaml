<!--
    Copyright (c) 2016 Mitsuhiro Ito (nee)

    This software is released under the MIT License.
    http://opensource.org/licenses/mit-license.php
-->

<Window x:Class="NeeView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NeeView"
        xmlns:osc="clr-namespace:OpenSourceControls"
        mc:Ignorable="d"
        x:Name="RootWindow"
        Title="{Binding WindowTitle}" Icon="{Binding WindowIcon}" Height="768" Width="1024" AllowDrop="True"
        Topmost="{Binding IsTopmost}"
        Loaded="MainWindow_Loaded" Closed="Window_Closed" Closing="Window_Closing" SourceInitialized="Window_SourceInitialized"
        PreviewDragOver="MainWindow_PreviewDragOver" Drop="MainWindow_Drop" MouseLeave="MainWindow_MouseLeave"
        PreviewKeyDown="Window_PreviewKeyDown">

    <!--"{x:Static SystemParameters.CaptionHeight}"-->
    <!--
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" 
                      UseAeroCaptionButtons="True"
                      />
    </WindowChrome.WindowChrome>
    -->

    <Window.Resources>

        <!-- コンテキストメニューカウント用 -->
        <Style TargetType="ContextMenu">
            <EventSetter Event="Opened" Handler="ContextMenu_Opened"/>
            <EventSetter Event="Closed" Handler="ContextMenu_Closed"/>
        </Style>

        <!--
        <Style x:Key="VisibleContent" TargetType="FrameworkElement">
            <Setter Property="Opacity" Value="1"/>
        </Style>

        <Style x:Key="AutoHideContent" TargetType="FrameworkElement">
            <Setter Property="Opacity" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        -->

        <!-- Styling the DockPanelSplitter -->
        <Style x:Key="NVHorizontalBevelGrip" TargetType="{x:Type osc:DockPanelSplitter}">
            <Setter Property="Thickness" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type osc:DockPanelSplitter}">
                        <Grid SnapsToDevicePixels="True" Background="{DynamicResource NVBackground}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NVVerticalBevelGrip" TargetType="{x:Type osc:DockPanelSplitter}">
            <Setter Property="Thickness" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type osc:DockPanelSplitter}">
                        <Grid SnapsToDevicePixels="True" Background="{DynamicResource NVBackground}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="StatusAreaStyle" TargetType="DockPanel">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsVisibleThumbnailPlate}" Value="True" />
                        <Condition Binding="{Binding Visibility, ElementName=ThumbnailListArea}" Value="Visible" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource NVBackground}"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>


        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <local:IsGreaterThanConverter x:Key="IsGreaterThanConverter"/>
        <local:IsLessThanConverter x:Key="IsLessThanConverter"/>

        <local:SortModeToVisibilityConverter x:Key="SortModeToVisibilityConverter"/>
        <local:SortModeToStringConverter x:Key="SortModeToStringConverter"/>




        <!-- MenuItem History -->

        <local:FullPathToFileNameConverter x:Key="FullPathToFileNameConverter"/>

        <Style x:Key="HistoryMenuItemContainerStyle" TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding Path=Place, Converter={StaticResource FullPathToFileNameConverter}}"/>
            <Setter Property="Command" Value="{Binding BookCommands[LoadAs], RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
            <Setter Property="CommandParameter" Value="{Binding Path=Place}" />
            <Setter Property="InputGestureText" Value=""/>
        </Style>

        <Style x:Key="HistoryMenuItemStyle" TargetType="MenuItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=LastFilesHeader, Path=ItemsSource.Count}" Value="0" >
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>


    <DockPanel>

        <!-- 開発用 ページリスト -->
        <!--
        <ScrollViewer x:Name="DevPageList" DockPanel.Dock="Right" Width="300" Panel.ZIndex="100" HorizontalScrollBarVisibility="Auto"
            Visibility="{Binding ElementName=MenuItemDevPageList, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ListView ItemsSource="{Binding PageList}" >
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="名前"  DisplayMemberBinding="{Binding FileName}" Width="100"/>
                        <GridViewColumn Header="状態"  DisplayMemberBinding="{Binding Message}" Width="150"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </ScrollViewer>
        -->

        <!-- 開発用 表示領域-->
        <!--
        <DockPanel x:Name="DevInfo" DockPanel.Dock="Bottom" Panel.ZIndex="100" Background="White"
                  Visibility="{Binding ElementName=MenuItemDevInfo, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Button Content="Update" Width="100" Click="UpdateContentPoint_Click"/>
                <TextBlock Text="{Binding ContentPosition}" Margin="5"/>
            </StackPanel>
            <TextBlock DockPanel.Dock="Top" Text="{Binding JobEngine.JobCount}"/>
            <TextBlock DockPanel.Dock="Top" Text="{Binding JobEngine.Message}"/>
            <TextBlock DockPanel.Dock="Top" Text="{Binding JobEngine.Workers[0].Message}"/>
            <TextBlock DockPanel.Dock="Top" Text="{Binding JobEngine.Workers[1].Message}"/>
            <TextBlock DockPanel.Dock="Top" Text="{Binding JobEngine.Workers[2].Message}"/>
            <TextBlock DockPanel.Dock="Top" Text="{Binding JobEngine.Workers[3].Message}"/>
        </DockPanel>
        -->


        <!-- 製品表示領域 -->
        <Grid x:Name="Root" Background="{Binding BackgroundBrush}" MouseMove="ViewArea_MouseMove">

            <!--  ビューエリア -->
            <Grid x:Name="ViewArea">

                <!-- ビューエリア ベース -->
                <Grid x:Name="ViewAreaBase"/>

                <!-- パネル -->
                <DockPanel x:Name="Panels">

                    <!-- 左パネル -->
                    <DockPanel x:Name="LeftPanel" DockPanel.Dock="Left" Width="250" Background="{DynamicResource NVBackground}" KeyDown="LeftPanel_KeyDown" IsVisibleChanged="LeftPanel_IsVisibleChanged">

                        <Grid x:Name="LeftPanelMargin" DockPanel.Dock="Bottom"/>

                        <Grid>

                            <!-- ブックマークリスト -->
                            <local:BookmarkControl x:Name="BookmarkArea">
                                <local:BookmarkControl.Style>
                                    <Style TargetType="local:BookmarkControl">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LeftPanel}" Value="BookmarkList">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </local:BookmarkControl.Style>
                            </local:BookmarkControl>

                            <!-- 履歴リスト -->
                            <local:HistoryControl x:Name="HistoryArea">
                                <local:HistoryControl.Style>
                                    <Style TargetType="local:HistoryControl">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LeftPanel}" Value="HistoryList">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </local:HistoryControl.Style>
                            </local:HistoryControl>

                            <!-- フォルダリスト -->
                            <Grid x:Name="FolderListArea">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding FolderListGridLength0, Mode=TwoWay}" />
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="{Binding FolderListGridLength2, Mode=TwoWay}" />
                                </Grid.RowDefinitions>

                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LeftPanel}" Value="FolderList">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <local:FolderListControl x:Name="FolderList" Grid.Row="0" Setting="{Binding FolderListSetting}" BookHub="{Binding BookHub}"/>

                                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Height="6" Background="{DynamicResource NVBaseBrush}" Focusable="False" Visibility="{Binding ElementName=PageList, Path=Visibility}"/>

                                <local:PageListControl x:Name="PageList" Grid.Row="2" Visibility="{Binding IsVisiblePageList, Converter={StaticResource BooleanToVisibilityConverter}}" />

                            </Grid>


                        </Grid>
                    </DockPanel>
                    <osc:DockPanelSplitter x:Name="FolderListSplitter" DockPanel.Dock="Left" Style="{StaticResource NVVerticalBevelGrip}" ProportionalResize="False"
                                       Visibility="{Binding ElementName=LeftPanel, Path=Visibility}" IsTabStop="False" />

                    <!-- 右パネル -->
                    <DockPanel x:Name="RightPanel" DockPanel.Dock="Right" Width="250" Background="{DynamicResource NVBackground}" KeyDown="RightPanel_KeyDown" IsVisibleChanged="RightPanel_IsVisibleChanged">

                        <Grid x:Name="RightPanelMargin" DockPanel.Dock="Bottom"/>

                        <Grid>
                            <!-- 情報エリア -->
                            <Grid x:Name="InfoArea" MouseLeftButtonDown="InfoArea_MouseLeftButtonDown">
                                <local:FileInfoControl Setting="{Binding DataContext.FileInfoSetting, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}" DataContext="{Binding FileInfoContent}" d:IsHidden="True"/>
                            </Grid>
                        </Grid>
                    </DockPanel>
                    <osc:DockPanelSplitter x:Name="InfoAreaSplitter" DockPanel.Dock="Right" Style="{StaticResource NVVerticalBevelGrip}" ProportionalResize="False"
                                       Visibility="{Binding ElementName=RightPanel, Path=Visibility}" IsTabStop="False"/>

                    <!-- メインビュー -->
                    <Grid x:Name="MainViewPanelGrid" Panel.ZIndex="-1">
                        <Grid x:Name="MainViewPanel" ContextMenu="{Binding ContextMenu}">

                            <!-- メインビュー コンテンツ表示領域 -->
                            <Grid x:Name="MainView" Background="{Binding BackgroundBrush}" SizeChanged="MainView_SizeChanged" Focusable="True" FocusVisualStyle="{x:Null}" >
                                <!-- Pages -->
                                <Canvas Width="{Binding ElementName=MainContent, Path=ActualWidth}" Height="{Binding ElementName=MainContent, Path=ActualHeight}"
                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Canvas.Resources>
                                        <Style TargetType="TextBlock" x:Key="ContentProperty">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Background" Value="#80000000"/>
                                            <Setter Property="Padding" Value="10,5"/>
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Canvas.Resources>
                                    <StackPanel x:Name="MainContent" Orientation="Horizontal">
                                        <ContentControl x:Name="Content1" Content="{Binding Contents[1].Content}" Width="{Binding Contents[1].Width}" Height="{Binding Contents[1].Height}" Focusable="False" />
                                        <ContentControl x:Name="Content0" Content="{Binding Contents[0].Content}" Width="{Binding Contents[0].Width}" Height="{Binding Contents[0].Height}" Focusable="False" Margin="{Binding ContentsMargin}"/>
                                    </StackPanel>
                                </Canvas>
                                <!-- Pages Shadow (表示領域計算用) -->
                                <Canvas Width="{Binding ElementName=MainContent, Path=ActualWidth}" Height="{Binding ElementName=MainContent, Path=ActualHeight}"
                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel x:Name="MainContentShadow" Orientation="Horizontal">
                                        <Rectangle x:Name="Content1Shadow" Visibility="Hidden" Fill="#88FF0000" Width="{Binding Contents[1].Width}" Height="{Binding Contents[1].Height}"/>
                                        <Rectangle x:Name="Content0Shadow" Visibility="Hidden" Fill="#88FF0000" Width="{Binding Contents[0].Width}" Height="{Binding Contents[0].Height}" Margin="{Binding ContentsMargin}"/>
                                    </StackPanel>
                                </Canvas>
                            </Grid>

                            <!-- empty pages message -->
                            <Grid Visibility="{Binding IsVisibleEmptyPageMessage, Converter={StaticResource BooleanToVisibilityConverter}}" d:IsHidden="True"  IsHitTestVisible="False">
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock  Text="表示できません" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{Binding InfoTextFontSize}" FontFamily="Meiryo" Foreground="{Binding ForegroundBrush}"/>

                                    <TextBlock Text="{Binding EmptyPageMessage}" Foreground="{Binding ForegroundBrush}" HorizontalAlignment="Center" Margin="0,20,0,0" MinHeight="50" TextWrapping="Wrap" >
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </Trigger>
                                                </Style.Triggers>

                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>

                            <!-- Now Loading -->
                            <Grid x:Name="NowLoading" Opacity="0" IsHitTestVisible="False">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=NowLoading, Path=Opacity, Converter={StaticResource IsLessThanConverter}, ConverterParameter=0.01}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid x:Name="NowLoadingNormal" Background="Black">
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Vertical">
                                        <TextBlock x:Name="NowLoadingText" Text="Now Loading"  TextAlignment="Center" VerticalAlignment="Center"
                                                   Foreground="White" FontFamily="Meiryo" FontSize="{Binding InfoTextFontSize}" Margin="8" TextTrimming="CharacterEllipsis"/>
                                        <Grid Width="50" Height="50">
                                            <Rectangle Width="5" Height="25" Fill="#FF00B5FF" RenderTransformOrigin="0.5,0.5">
                                                <Rectangle.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform x:Name="NowLoadingMarkAngle" Angle="45"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Rectangle.RenderTransform>
                                            </Rectangle>
                                        </Grid>
                                    </StackPanel>
                                </Grid>

                                <TextBlock x:Name="NowLoadingTiny" Text="Now Loading ..." VerticalAlignment="Bottom" HorizontalAlignment="Right" Foreground="White" Background="#88000000" Padding="20,5" IsHitTestVisible="False"/>
                            </Grid>
                        </Grid>
                    </Grid>

                </DockPanel>

            </Grid>

            <!-- メニューエリア-->
            <Grid x:Name="MenuArea" VerticalAlignment="Top" MouseEnter="MenuArea_MouseEnter" MouseLeave="MenuArea_MouseLeave" >

                <StackPanel>
                    <Grid  KeyDown="Control_KeyDown_IgnoreSingleKeyGesture">
                        <DockPanel>
                            <!-- メインメニュー -->
                            <ContentControl Content="{Binding MainMenu}" IsTabStop="False"/>

                            <!-- 開発用メニュー -->
                            <Menu>
                                <MenuItem x:Name="MenuItemDev" Header="開発(_D)">
                                    <MenuItem x:Name="MenuItemDevPageList" Header="ページリスト" IsCheckable="True" />
                                    <MenuItem x:Name="MenuItemDevInfo" Header="情報エリア" IsCheckable="True" />
                                    <MenuItem x:Name="MenuItemDevApplicationFolder" Header="アプリのフォルダを開く" Click="MenuItemDevApplicationFolder_Click" />
                                    <MenuItem x:Name="MenuItemDevTempFolder" Header="テンポラリフォルダを開く" Click="MenuItemDevTempFolder_Click" />
                                    <MenuItem x:Name="MenuItemDevButton" Header="テスト実行" Click="MenuItemDevButton_Click" />
                                </MenuItem>
                            </Menu>
                        </DockPanel>

                        <!-- Help button -->
                        <!--
                        <DockPanel LastChildFill="False" VerticalAlignment="Center" Margin="0,0,10,0">
                            <Button DockPanel.Dock="Right"  x:Name="HelpButton" Style="{StaticResource IconButton}" VerticalAlignment="Center" Click="HelpButton_Click" ToolTip="オンラインヘルプ" IsTabStop="False">
                                <Image Width="14" Height="14" Source="{StaticResource ic_help_24px}"/>
                            </Button>
                        </DockPanel>
                        -->
                    </Grid>

                    <!-- アドレスバー -->
                    <Grid x:Name="AddressBar" VerticalAlignment="Top" Height="36">
                        <Grid.Resources>
                            <Style x:Key="AddressIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
                                <Setter Property="Width" Value="26"/>
                                <Setter Property="Height" Value="26"/>
                                <Setter Property="Padding" Value="4"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="IsTabStop" Value="False"/>
                            </Style>
                        </Grid.Resources>

                        <Grid.Background>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuBarColorKey}}"/>
                        </Grid.Background>

                        <DockPanel VerticalAlignment="Center" Margin="2,0">
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">

                                <Button Style="{StaticResource AddressIconButton}" Command="{Binding BookCommands[TogglePageMode]}">
                                    <Image Width="18" Height="18">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="{StaticResource ic_looks_one_24px}"/>
                                                <Setter Property="ToolTip" Value="1ページ表示"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding BookSetting.PageMode}"  Value="WidePage">
                                                        <Setter Property="Source" Value="{StaticResource ic_looks_two_24px}"/>
                                                        <Setter Property="ToolTip" Value="2ページ表示"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>

                                <Button Style="{StaticResource AddressIconButton}" Command="{Binding BookCommands[ToggleBookReadOrder]}" >
                                    <Grid Width="22" Height="22" Background="#0000">
                                        <Image Width="18" Height="18">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Source" Value="{StaticResource ic_left_to_right_24px}"/>
                                                    <Setter Property="ToolTip" Value="左開き"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BookSetting.BookReadOrder}"  Value="RightToLeft">
                                                            <Setter Property="Source" Value="{StaticResource ic_right_to_left_24px}"/>
                                                            <Setter Property="ToolTip" Value="右開き"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Grid>
                                </Button>


                                <Button Style="{StaticResource AddressIconButton}" Command="{Binding BookCommands[ToggleSortMode]}" 
                                        ToolTip="{Binding BookSetting.SortMode,Converter={StaticResource SortModeToStringConverter}}">

                                    <Grid Width="20" Height="20">
                                        <Grid.Resources>
                                            <Style TargetType="Grid">
                                                <Setter Property="Width" Value="16"/>
                                                <Setter Property="Height" Value="16"/>
                                            </Style>
                                            <Style TargetType="Image" x:Key="MainImage">
                                                <Setter Property="Width" Value="12"/>
                                                <Setter Property="Height" Value="12"/>
                                                <Setter Property="VerticalAlignment" Value="Bottom"/>
                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                            </Style>
                                            <Style TargetType="Image" x:Key="SubImage">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Height" Value="8"/>
                                                <Setter Property="VerticalAlignment" Value="Top"/>
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                            </Style>

                                        </Grid.Resources>

                                        <Grid Visibility="{Binding BookSetting.SortMode,Converter={StaticResource SortModeToVisibilityConverter},ConverterParameter=Random}">
                                            <Image Width="16" Height="16" Source="{StaticResource ic_shuffle_24px}"/>
                                        </Grid>

                                        <Grid Visibility="{Binding BookSetting.SortMode,Converter={StaticResource SortModeToVisibilityConverter},ConverterParameter=FileName}">
                                            <Image Style="{StaticResource MainImage}" Source="{StaticResource ic_sort_name_24px}"/>
                                            <Image Style="{StaticResource SubImage}" Source="{StaticResource ic_sortex_up_24px}"/>
                                        </Grid>

                                        <Grid Visibility="{Binding BookSetting.SortMode,Converter={StaticResource SortModeToVisibilityConverter},ConverterParameter=FileNameDescending}">
                                            <Image Style="{StaticResource MainImage}" Source="{StaticResource ic_sort_name_24px}"/>
                                            <Image Style="{StaticResource SubImage}" Source="{StaticResource ic_sortex_down_24px}"/>
                                        </Grid>

                                        <Grid Visibility="{Binding BookSetting.SortMode,Converter={StaticResource SortModeToVisibilityConverter},ConverterParameter=TimeStamp}">
                                            <Image Style="{StaticResource MainImage}" Source="{StaticResource ic_sort_time_24px}" Width="15" Height="15" Margin="-2,0,0,-2"/>
                                            <Image Style="{StaticResource SubImage}" Source="{StaticResource ic_sortex_up_24px}"/>
                                        </Grid>

                                        <Grid Visibility="{Binding BookSetting.SortMode,Converter={StaticResource SortModeToVisibilityConverter},ConverterParameter=TimeStampDescending}">
                                            <Image Style="{StaticResource MainImage}" Source="{StaticResource ic_sort_time_24px}" Width="15" Height="15" Margin="-2,0,0,-2"/>
                                            <Image Style="{StaticResource SubImage}" Source="{StaticResource ic_sortex_down_24px}"/>
                                        </Grid>

                                    </Grid>
                                </Button>

                            </StackPanel>

                            <Button Command="{Binding BookCommands[PrevHistory]}" Style="{StaticResource AddressIconButton}">
                                <Image Source="{StaticResource ic_arrow_back_24px}" Width="16" Height="16" />
                            </Button>
                            <Button Command="{Binding BookCommands[NextHistory]}"  Style="{StaticResource AddressIconButton}">
                                <Image Source="{StaticResource ic_arrow_forward_24px}" Width="16" Height="16" />
                            </Button>
                            <Button Command="{Binding BookCommands[ReLoad]}" Style="{StaticResource AddressIconButton}">
                                <Image Source="{StaticResource ic_reflesh_24px}" Width="16" Height="16" />
                            </Button>

                            <Border x:Name="AddressTextBoxBase" BorderThickness="1" BorderBrush="LightGray" Background="White" Height="26" Margin="2,0">
                                <DockPanel>
                                    <Button DockPanel.Dock="Right" Style="{StaticResource AddressIconButton}" Command="{Binding BookCommands[ToggleBookmark]}">
                                        <TextBlock FontSize="20" FontFamily="Meyrio">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text" Value="☆"/>
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsBookmark}" Value="True">
                                                            <Setter Property="Text" Value="★"/>
                                                            <Setter Property="Foreground" Value="{StaticResource NVStarMarkBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Button>

                                    <TextBox x:Name="AddressTextBox" Text="{Binding Address}" BorderThickness="0" VerticalAlignment="Center" Margin="5,0"
                                             KeyDown="AddressTextBox_KeyDown"/>
                                </DockPanel>
                            </Border>

                        </DockPanel>
                    </Grid>

                </StackPanel>
            </Grid>


            <!-- ステータスエリア -->
            <DockPanel x:Name="StatusArea" VerticalAlignment="Bottom" Style="{StaticResource StatusAreaStyle}">

                <Slider DockPanel.Dock="Bottom" x:Name="PageSlider" Height="18" Maximum="{Binding IndexMax}" Value="{Binding Index}" IsMoveToPointEnabled="True" SmallChange="1" IsDirectionReversed="{Binding IsSliderDirectionReversed}" Focusable="False"
                        local:SliderTools.MoveToPointOnDrag="True" local:SliderTools.FocusTo="{Binding ElementName=MainView}"
                        ValueChanged="PageSlider_ValueChanged"
                        PreviewMouseLeftButtonDown="PageSlider_PreviewMouseLeftButtonDown"  
                        PreviewMouseLeftButtonUp="PageSlider_PreviewMouseLeftButtonUp">
                    <Slider.Style>
                        <Style TargetType="Slider">
                            <Style.Triggers>
                                <Trigger Property="Maximum" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Slider.Style>
                </Slider>

                <Grid x:Name="ThumbnailListArea" SizeChanged="ThumbnailListArea_SizeChanged" >
                    <ListBox x:Name="ThumbnailListBox" ItemsSource="{Binding PageList}" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                             UseLayoutRounding="True"
                             ScrollViewer.ScrollChanged="ThumbnailList_ScrollChanged"
                             KeyDown="ThumbnailListBox_KeyDown"
                             IsMouseCapturedChanged="ThumbnailListBox_IsMouseCapturedChanged"
                             SelectionChanged="ThumbnailListBox_SelectionChanged"
                             Loaded="ThumbnailListBox_Loaded"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Bottom"
                             ScrollViewer.CanContentScroll="True"
                             Background="Transparent" BorderThickness="0">
                        <ListBox.Resources>

                            <Style TargetType="{x:Type ListBox}">
                                <Setter Property="Padding" Value="5,0" />
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Margin="5">
                                                <Grid Width="{Binding ElementName=RootWindow, Path=DataContext.ThumbnailSize}" Height="{Binding ElementName=RootWindow, Path=DataContext.ThumbnailSize}">
                                                    <Ellipse Fill="Gray" Width="8" Height="8">
                                                        <Ellipse.Style>
                                                            <Style TargetType="Ellipse">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Thumbnail}" Value="{x:Null}">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Ellipse.Style>
                                                    </Ellipse>
                                                    <Image Source="{Binding Thumbnail}" UseLayoutRounding="True" Stretch="None">
                                                        <Image.Effect>
                                                            <DropShadowEffect ShadowDepth="2" Opacity="0.5" />
                                                        </Image.Effect>
                                                    </Image>
                                                </Grid>
                                                <TextBlock Height="16" FontSize="12" FontFamily="Arial" MinWidth="32" TextAlignment="Center"
                                                           Visibility="{Binding ElementName=RootWindow, Path=DataContext.ThumbnailNumberVisibility}"
                                                           VerticalAlignment="Center"  HorizontalAlignment="Center" Text="{Binding IndexPlusOne}" Padding="5,2">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource NVForeground}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=RootWindow, Path=DataContext.IsVisibleThumbnailPlate}" Value="False">
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                    <Setter Property="Effect">
                                                                        <Setter.Value>
                                                                            <DropShadowEffect ShadowDepth="0" Opacity="1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>

                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal" CanHorizontallyScroll="True" CanVerticallyScroll="False" FlowDirection="RightToLeft" Margin="2,0"
                                                                    Loaded="ThumbnailListBoxPanel_Loaded"
                                                                    KeyDown="ThumbnailListBoxPanel_KeyDown"/>
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="ListBoxItem">
                                <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ThumbnailListItem_MouseSingleClick"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            </Style>

                        </ListBox.Resources>
                    </ListBox>
                </Grid>

            </DockPanel>

            <!-- Message Tiny -->
            <TextBlock x:Name="TinyInfoTextBlock" Text="{Binding TinyInfoText}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Foreground="White" Background="#88000000" Padding="20,5" IsHitTestVisible="False">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <!-- Message -->
            <Grid x:Name="InfoTextAreaBase">
                <StackPanel x:Name="InfoTextArea" Orientation="Horizontal" Margin="0,0,0,40" VerticalAlignment="Bottom" HorizontalAlignment="Center" Background="#88000000" MaxWidth="{Binding ElementName=ViewArea, Path=ActualWidth}" IsHitTestVisible="False">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=InfoTextBlock, Path=Text}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <StackPanel Orientation="Horizontal" Margin="20,10">
                        <TextBlock x:Name="InfoUsedBookmark"  Margin="0,0,5,0" FontFamily="Wingdings" Text="«" FontSize="{Binding InfoTextMarkSize}" Foreground="{StaticResource NVStarMarkBrush}" VerticalAlignment="Center"/>
                        <TextBlock x:Name="InfoUsedHistory"  Margin="0,0,5,0" FontFamily="Webdings" Text="a" FontSize="{Binding InfoTextMarkSize}" Foreground="{StaticResource NVCheckMarkBrush}" VerticalAlignment="Center"/>
                        <TextBlock x:Name="InfoTextBlock" Text="{Binding InfoText}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{Binding InfoTextFontSize}" Foreground="White" FontFamily="Meiryo" TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </StackPanel>
            </Grid>

            <!--
            <StackPanel Orientation="Horizontal">
                
            <Rectangle Width="150" Height="180" Margin="10" Stroke="Black">
                <Rectangle.Fill>
                    <VisualBrush  Stretch="None" Viewport="0,0,1,1"
                                  ViewboxUnits="RelativeToBoundingBox"
                                  Visual="{Binding ElementName=MainViewPanel}"/>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Width="150" Height="180" Margin="10" Stroke="Black" >
                <Rectangle.Fill>
                        <VisualBrush  Stretch="Uniform" Viewport="0,0,1,1"  Viewbox="0.5,0.5,0.02,0.02"
                                     Visual="{Binding ElementName=MainViewPanel}"/>
                </Rectangle.Fill>
            </Rectangle>
            </StackPanel>
            -->

        </Grid>

    </DockPanel>
</Window>

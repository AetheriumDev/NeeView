//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeeView.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NeeView.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Back に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Back_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Back.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Next_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Next.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_ReLoad_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.ReLoad.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Unload_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Unload.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Up_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand for each directory に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveEntryCollectionMode_CurrentDirectory {
            get {
                return ResourceManager.GetString("ArchiveEntryCollectionMode.CurrentDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand all に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveEntryCollectionMode_IncludeSubArchives {
            get {
                return ResourceManager.GetString("ArchiveEntryCollectionMode.IncludeSubArchives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand by compressed file unit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveEntryCollectionMode_IncludeSubDirectories {
            get {
                return ResourceManager.GetString("ArchiveEntryCollectionMode.IncludeSubDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_CompressedFile {
            get {
                return ResourceManager.GetString("ArchiveFormat.CompressedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Folder {
            get {
                return ResourceManager.GetString("ArchiveFormat.Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Media に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Media {
            get {
                return ResourceManager.GetString("ArchiveFormat.Media", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Pagemark {
            get {
                return ResourceManager.GetString("ArchiveFormat.Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Pdf {
            get {
                return ResourceManager.GetString("ArchiveFormat.Pdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Playlist {
            get {
                return ResourceManager.GetString("ArchiveFormat.Playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unknown format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Unknown {
            get {
                return ResourceManager.GetString("ArchiveFormat.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do not execute に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_None {
            get {
                return ResourceManager.GetString("ArchivePolicy.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_SendArchiveFile {
            get {
                return ResourceManager.GetString("ArchivePolicy.SendArchiveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file + filename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_SendArchivePath {
            get {
                return ResourceManager.GetString("ArchivePolicy.SendArchivePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extract file path (temporary file) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_SendExtractFile {
            get {
                return ResourceManager.GetString("ArchivePolicy.SendExtractFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time to hide auto-hide panel (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideDelayTime {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideDelayTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time to display auto-hide panel (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideDelayVisibleTime {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideDelayVisibleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide panel focus mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideFocusLockMode {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideFocusLockMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is not hidden when it has focus. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideFocusLockMode_Remarks {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideFocusLockMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Area width of automatic panel display judgment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideHitTestMargin {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideHitTestMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide panel key input display continued に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_IsAutoHideKeyDownDelay {
            get {
                return ResourceManager.GetString("AutoHideConfig.IsAutoHideKeyDownDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Postpone the action to hide when key input. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_IsAutoHideKeyDownDelay_Remarks {
            get {
                return ResourceManager.GetString("AutoHideConfig.IsAutoHideKeyDownDelay.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window and Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_FocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.FocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_LogicalFocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.LogicalFocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   TextBox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_LogicalTextBoxFocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.LogicalTextBoxFocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_None {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window and TextBox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_TextBoxFocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.TextBoxFocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoRotateType_Left {
            get {
                return ResourceManager.GetString("AutoRotateType.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoRotateType_None {
            get {
                return ResourceManager.GetString("AutoRotateType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoRotateType_Right {
            get {
                return ResourceManager.GetString("AutoRotateType.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_BackgroundType {
            get {
                return ResourceManager.GetString("BackgroundConfig.BackgroundType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_CustomBackground {
            get {
                return ResourceManager.GetString("BackgroundConfig.CustomBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This setting is applied when the background is set to &quot;custom background&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_CustomBackground_Remarks {
            get {
                return ResourceManager.GetString("BackgroundConfig.CustomBackground.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Checkered background transparent image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_IsPageBackgroundChecker {
            get {
                return ResourceManager.GetString("BackgroundConfig.IsPageBackgroundChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It will be a check pattern of &quot;@BackgroundConfig.PageBackgroundColor&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_IsPageBackgroundChecker_Remarks {
            get {
                return ResourceManager.GetString("BackgroundConfig.IsPageBackgroundChecker.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transparent image background color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_PageBackgroundColor {
            get {
                return ResourceManager.GetString("BackgroundConfig.PageBackgroundColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image colored background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Auto {
            get {
                return ResourceManager.GetString("BackgroundType.Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Black {
            get {
                return ResourceManager.GetString("BackgroundType.Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Check {
            get {
                return ResourceManager.GetString("BackgroundType.Check", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_CheckDark {
            get {
                return ResourceManager.GetString("BackgroundType.CheckDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Custom {
            get {
                return ResourceManager.GetString("BackgroundType.Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_White {
            get {
                return ResourceManager.GetString("BackgroundType.White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BitmapImageFormat_Jpeg {
            get {
                return ResourceManager.GetString("BitmapImageFormat.Jpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PNG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BitmapImageFormat_Png {
            get {
                return ResourceManager.GetString("BitmapImageFormat.Png", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base intensity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BaseIntensity {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BaseIntensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base saturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BaseSaturation {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BaseSaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloom intensity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BloomIntensity {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BloomIntensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloom saturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BloomSaturation {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BloomSaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Threshold に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_Threshold {
            get {
                return ResourceManager.GetString("BloomEffectUnit.Threshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlurEffectUnit_Radius {
            get {
                return ResourceManager.GetString("BlurEffectUnit.Radius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor {
            get {
                return ResourceManager.GetString("BookAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_Config {
            get {
                return ResourceManager.GetString("BookAccessor.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Whether the book is a video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_IsMedia {
            get {
                return ResourceManager.GetString("BookAccessor.IsMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Whether the book is a newly opened book with no history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_IsNew {
            get {
                return ResourceManager.GetString("BookAccessor.IsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pages that make up the book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_Pages {
            get {
                return ResourceManager.GetString("BookAccessor.Pages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book path. Null if no book is open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_Path {
            get {
                return ResourceManager.GetString("BookAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Displaying pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_ViewPages {
            get {
                return ResourceManager.GetString("BookAccessor.ViewPages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is bookmark address. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAddressInfo_Bookmark {
            get {
                return ResourceManager.GetString("BookAddressInfo.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This address is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAddressInfo_Invalid {
            get {
                return ResourceManager.GetString("BookAddressInfo.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAddressInfo_Page {
            get {
                return ResourceManager.GetString("BookAddressInfo.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is pagemark address. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAddressInfo_Pagemark {
            get {
                return ResourceManager.GetString("BookAddressInfo.Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book page image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_BookPageSize {
            get {
                return ResourceManager.GetString("BookConfig.BookPageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The size of the image to display as the book page. Since thumbnails are displayed, large values ​​may be displayed at a lower resolution. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_BookPageSize_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.BookPageSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Distance between two pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_ContentsSpace {
            get {
                return ResourceManager.GetString("BookConfig.ContentsSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sets the gap between page and page. Negative values ​​mean overlapping. Because each page is scaled, it is rare that there will be no gap just at 0. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_ContentsSpace_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.ContentsSpace.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Excluded folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_Excludes {
            get {
                return ResourceManager.GetString("BookConfig.Excludes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically load subfolder when there is no page and only one subfolder exists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsAutoRecursive {
            get {
                return ResourceManager.GetString("BookConfig.IsAutoRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If there is no page, inquire whether to read the subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsConfirmRecursive {
            get {
                return ResourceManager.GetString("BookConfig.IsConfirmRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If there is no page that can be displayed when the book is opened, and a subfolder exists, a dialog is displayed asking whether to load the subfolder. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsConfirmRecursive_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsConfirmRecursive.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Insert a dummy page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsInsertDummyPage {
            get {
                return ResourceManager.GetString("BookConfig.IsInsertDummyPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Insert a dummy page when there are not enough pages at the end of two-page mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsInsertDummyPage_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsInsertDummyPage.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Accept duplication of page movement commands に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsMultiplePageMove {
            get {
                return ResourceManager.GetString("BookConfig.IsMultiplePageMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute all requested page move commands. If it is set to OFF, duplicate page move commands are canceled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsMultiplePageMove_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsMultiplePageMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notify page loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsNotifyPageLoop {
            get {
                return ResourceManager.GetString("BookConfig.IsNotifyPageLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page movement priority に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsPrioritizePageMove {
            get {
                return ResourceManager.GetString("BookConfig.IsPrioritizePageMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform page movement without waiting for page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsPrioritizePageMove_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsPrioritizePageMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort pages by file first に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsSortFileFirst {
            get {
                return ResourceManager.GetString("BookConfig.IsSortFileFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Arrange files before folders. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsSortFileFirst_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsSortFileFirst.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Behavior when trying to move past the end of the page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_PageEndAction {
            get {
                return ResourceManager.GetString("BookConfig.PageEndAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset page when shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_ResetPageWhenRandomSort {
            get {
                return ResourceManager.GetString("BookConfig.ResetPageWhenRandomSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sound when not able to move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_TerminalSound {
            get {
                return ResourceManager.GetString("BookConfig.TerminalSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Aspect ratio for determining horizontally long image (horizontal / vertical) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_WideRatio {
            get {
                return ResourceManager.GetString("BookConfig.WideRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used in &quot;Split landscape page&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_WideRatio_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.WideRatio.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book config accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor {
            get {
                return ResourceManager.GetString("BookConfigAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left Open / Right Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_BookReadOrder {
            get {
                return ResourceManager.GetString("BookConfigAccessor.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split landscape page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show first page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consider landscape pages as two pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_SortMode {
            get {
                return ResourceManager.GetString("BookConfigAccessor.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of pages to display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_ViewPageSize {
            get {
                return ResourceManager.GetString("BookConfigAccessor.ViewPageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up (Alt+Up) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookmark_Up_ToolTip {
            get {
                return ResourceManager.GetString("Bookmark.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark list file location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_BookmarkFilePath {
            get {
                return ResourceManager.GetString("BookmarkConfig.BookmarkFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default order of bookmarks に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_BookmarkFolderOrder {
            get {
                return ResourceManager.GetString("BookmarkConfig.BookmarkFolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save bookmark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_IsSaveBookmark {
            get {
                return ResourceManager.GetString("BookmarkConfig.IsSaveBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sync bookshelf when book is opened に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_IsSyncBookshelfEnabled {
            get {
                return ResourceManager.GetString("BookmarkConfig.IsSyncBookshelfEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkItemAccessor {
            get {
                return ResourceManager.GetString("BookmarkItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkItemAccessor_Name {
            get {
                return ResourceManager.GetString("BookmarkItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkItemAccessor_Path {
            get {
                return ResourceManager.GetString("BookmarkItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkList_Add_ToolTip {
            get {
                return ResourceManager.GetString("BookmarkList.Add.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sync bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkList_MoreMenu_SyncBookshelf {
            get {
                return ResourceManager.GetString("BookmarkList.MoreMenu.SyncBookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_FolderOrder {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.FolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_Items {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current bookmark folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_Path {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_Style {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_BookReadOrder {
            get {
                return ResourceManager.GetString("BookMementoFilter.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split horizontally long page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The first page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape page is regarded as 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_Page {
            get {
                return ResourceManager.GetString("BookMementoFilter.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Size Mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_PageMode {
            get {
                return ResourceManager.GetString("BookMementoFilter.PageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Order of pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_SortMode {
            get {
                return ResourceManager.GetString("BookMementoFilter.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookPageCollectMode_All {
            get {
                return ResourceManager.GetString("BookPageCollectMode.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookPageCollectMode_Image {
            get {
                return ResourceManager.GetString("BookPageCollectMode.Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image files and folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookPageCollectMode_ImageAndBook {
            get {
                return ResourceManager.GetString("BookPageCollectMode.ImageAndBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_BookReadOrder {
            get {
                return ResourceManager.GetString("BookSettingConfig.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Because it searches all open folders and below, the processing becomes heavy depending on the location of the folder. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsRecursiveFolder_Remarks {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsRecursiveFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split horizontally long page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The first page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape page is regarded as 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_Page {
            get {
                return ResourceManager.GetString("BookSettingConfig.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Size Mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_PageMode {
            get {
                return ResourceManager.GetString("BookSettingConfig.PageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Order of pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_SortMode {
            get {
                return ResourceManager.GetString("BookSettingConfig.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @BookSettingSelectMode.Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPageSelectMode_Default {
            get {
                return ResourceManager.GetString("BookSettingPageSelectMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @BookSettingSelectMode.RestoreOrDefault に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPageSelectMode_RestoreOrDefault {
            get {
                return ResourceManager.GetString("BookSettingPageSelectMode.RestoreOrDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @BookSettingSelectMode.RestoreOrDefaultReset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPageSelectMode_RestoreOrDefaultReset {
            get {
                return ResourceManager.GetString("BookSettingPageSelectMode.RestoreOrDefaultReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.BookReadOrder&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_BookReadOrder {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsRecursiveFolder&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedDividePage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedSingleFirstPage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedSingleLastPage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedWidePage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.Page&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_Page {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.PageMode&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_PageMode {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.PageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.SortMode&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_SortMode {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Continue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_Continue {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_Default {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore, else continue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_RestoreOrContinue {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.RestoreOrContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore, else default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_RestoreOrDefault {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.RestoreOrDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore, else default, reset last page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_RestoreOrDefaultReset {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.RestoreOrDefaultReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Back (Alt+Left) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Back_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Back.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_CopyToFolderFailed {
            get {
                return ResourceManager.GetString("Bookshelf.CopyToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this place home に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Home_Menu_Set {
            get {
                return ResourceManager.GetString("Bookshelf.Home.Menu.Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to Home (Alt+Home) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Home_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Home.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Message_MoveToFolderFailed {
            get {
                return ResourceManager.GetString("Bookshelf.Message.MoveToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add this place to quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_AddQuickAccess {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.AddQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history of this place に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_ClearHistory {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.ClearHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save playlist... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_ExportPlaylist {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.ExportPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include subdirectories に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_SearchIncludeSubdirectories {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.SearchIncludeSubdirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Incremental search に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_SearchIncremental {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.SearchIncremental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search options に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_SearchOptions {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.SearchOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders at this location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_Subfolder {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.Subfolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next (Alt+Right) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Next_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Next.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_SubFolder_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.SubFolder.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to current book place に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Sync_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Sync.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up (Alt+Up) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Up_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard default order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_DefaultFolderOrder {
            get {
                return ResourceManager.GetString("BookshelfConfig.DefaultFolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filename pattern to exclude from display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_ExcludePattern {
            get {
                return ResourceManager.GetString("BookshelfConfig.ExcludePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is specified with .NET regular expression. Capital letters and lower case letters are not distinguished. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_ExcludePattern_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.ExcludePattern.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Home location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_Home {
            get {
                return ResourceManager.GetString("BookshelfConfig.Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close the book when changing the location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsCloseBookWhenMove {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsCloseBookWhenMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable Folder Cruise に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsCruise {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsCruise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move the folder including the parent and child of the folder. It does not apply when the bookshelf is a search result. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsCruise_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsCruise.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Incremental search enabled に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsIncrementalSearchEnabled {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsIncrementalSearchEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Insert additional file at sort position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsInsertItem {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsInsertItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The bookshelf reflects information in real time. If this setting is ON, inserts the added file in the current sort order position. When set to OFF, it is added to the end of the list. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsInsertItem_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsInsertItem.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filter RAR split files from display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsMultipleRarFilterEnabled {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsMultipleRarFilterEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For an RAR split file called .part[number].rar, only the file with the smallest number is displayed in the list. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsMultipleRarFilterEnabled_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsMultipleRarFilterEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After deleting the viewing book, open the next book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsOpenNextBookWhenRemove {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsOpenNextBookWhenRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort without file type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsOrderWithoutFileType {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsOrderWithoutFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform a search including subfolders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsSearchIncludeSubdirectories {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsSearchIncludeSubdirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchronize Folders tree with sync button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsSyncFolderTree {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsSyncFolderTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display bookmark symbols に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleBookmarkMark {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleBookmarkMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ★ mark is displayed in the bookmarked book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleBookmarkMark_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleBookmarkMark.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display history symbol に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleHistoryMark {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleHistoryMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A check mark is displayed in the book remaining in the history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleHistoryMark_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleHistoryMark.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show number of items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleItemsCount {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleItemsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default order of playlists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_PlaylistFolderOrder {
            get {
                return ResourceManager.GetString("BookshelfConfig.PlaylistFolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Copy {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cop_y to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_CopyToFolder {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.CopyToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Delete {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_DeleteBookmark {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.DeleteBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_DeleteHistory {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.DeleteHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Add folders... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_DestinationFolderOption {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.DestinationFolderOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in e_xplorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Explorer {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Add External apps... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_ExternalAppOption {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.ExternalAppOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mov_e to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_MoveToFolder {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.MoveToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to _subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Open {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_OpenBook {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.OpenBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in external _app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_OpenExternalApp {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.OpenExternalApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rena_me に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Rename {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Subfolder {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Subfolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItemAccessor {
            get {
                return ResourceManager.GetString("BookshelfItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItemAccessor_Name {
            get {
                return ResourceManager.GetString("BookshelfItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItemAccessor_Path {
            get {
                return ResourceManager.GetString("BookshelfItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Example: Select items that starts with &quot;A&quot;
        ///nv.Bookshelf.SelectedItems = nv.Bookshelf.Items.filter(e =&gt; e.Name.startsWith(&apos;A&apos;)) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Example {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_FolderOrder {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.FolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Items {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current bookshelf path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Path {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search box text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_SearchWord {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.SearchWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Style {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushSource_Color {
            get {
                return ResourceManager.GetString("BrushSource.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushSource_ImageFileName {
            get {
                return ResourceManager.GetString("BrushSource.ImageFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Brush type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushSource_Type {
            get {
                return ResourceManager.GetString("BrushSource.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enlarge and display the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageFill {
            get {
                return ResourceManager.GetString("BrushType.ImageFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image tile に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageTile {
            get {
                return ResourceManager.GetString("BrushType.ImageTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit image to window size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageUniform {
            get {
                return ResourceManager.GetString("BrushType.ImageUniform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extend the image to the full window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageUniformToFill {
            get {
                return ResourceManager.GetString("BrushType.ImageUniformToFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solid color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_SolidColor {
            get {
                return ResourceManager.GetString("BrushType.SolidColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelFullScreenCommand {
            get {
                return ResourceManager.GetString("CancelFullScreenCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Turn off fullscreen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelFullScreenCommand_Remarks {
            get {
                return ResourceManager.GetString("CancelFullScreenCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel script に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelScriptCommand {
            get {
                return ResourceManager.GetString("CancelScriptCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stops a running script that has a &quot;sleep&quot; instruction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelScriptCommand_Remarks {
            get {
                return ResourceManager.GetString("CancelScriptCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryCommand {
            get {
                return ResourceManager.GetString("ClearHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("ClearHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history in place に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryInPlaceCommand {
            get {
                return ResourceManager.GetString("ClearHistoryInPlaceCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history in the current location of the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryInPlaceCommand_Remarks {
            get {
                return ResourceManager.GetString("ClearHistoryInPlaceCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quit application に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseApplicationCommand {
            get {
                return ResourceManager.GetString("CloseApplicationCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Quit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseApplicationCommand_Menu {
            get {
                return ResourceManager.GetString("CloseApplicationCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quit this application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseApplicationCommand_Remarks {
            get {
                return ResourceManager.GetString("CloseApplicationCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Curve に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorSelectEffectUnit_Curve {
            get {
                return ResourceManager.GetString("ColorSelectEffectUnit.Curve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorSelectEffectUnit_Hue {
            get {
                return ResourceManager.GetString("ColorSelectEffectUnit.Hue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Range に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorSelectEffectUnit_Range {
            get {
                return ResourceManager.GetString("ColorSelectEffectUnit.Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_DarkColor {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.DarkColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Desaturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_Desaturation {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.Desaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Light color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_LightColor {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.LightColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tone amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_ToneAmount {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.ToneAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor {
            get {
                return ResourceManager.GetString("CommandAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute the command. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command argument. The contents vary depending on the command. It is a variable length argument. (Optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_args {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // open C:\Foo\Bar.zip
        ///nv.Command.LoadAs.Execute(&quot;C:\\Foo\\Bar.zip&quot;) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Some commands allow you to specify arguments.These can be used for the purpose of omitting the user&apos;s selection by specifying the argument in the command that normally displays the dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_Remarks {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Success or failure of command issuance. Commands may not be issued during loading. The success or failure of the command itself is not determined. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_Returns {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display a message when executing a command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_IsShowMessage {
            get {
                return ResourceManager.GetString("CommandAccessor.IsShowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse gestures に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_MouseGesture {
            get {
                return ResourceManager.GetString("CommandAccessor.MouseGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Set &quot;↑←↓&quot; to the mouse gesture of ViewRotateLeft command
        ///nv.Command.ViewRotateLeft.MouseGesture = &quot;ULD&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_MouseGesture_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.MouseGesture.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can get and set command parameters. The settings are permanent. The properties differ for each command. For details, see the command list below. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Parameter {
            get {
                return ResourceManager.GetString("CommandAccessor.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Change the rotation amount of &quot;ViewRotateLeft&quot; command to 45 degrees
        ///nv.Command.ViewRotateLeft.Parameter.Angle = 45 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Parameter_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.Parameter.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporarily change the command parameter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Rotate counterclockwise by specifying 5 degrees
        ///nv.Command.ViewRotateLeft.Patch({&quot;Angle&quot;: 5}).Execute() に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the command parameter to be overwritten temporarily in JSON format. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch_patch {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch.patch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Returns its own command accessors as is. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch_Returns {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcuts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_ShortCutKey {
            get {
                return ResourceManager.GetString("CommandAccessor.ShortCutKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Set &quot;Ctrl+A&quot; as shortcut for ViewRotateLeft command
        ///nv.Command.ViewRotateLeft.ShourtCutKey = &quot;Ctrl+A&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_ShortCutKey_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.ShortCutKey.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_TouchGesture {
            get {
                return ResourceManager.GetString("CommandAccessor.TouchGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Set &quot;TouchCenter&quot; for touch operation of ViewRotateLeft command
        ///nv.Command.ViewRotateLeft.TouchGesture = &quot;TouchCenter&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_TouchGesture_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.TouchGesture.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow access key に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsAccessKeyEnabled {
            get {
                return ResourceManager.GetString("CommandConfig.IsAccessKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If it is set to OFF, system operation by Alt key will be invalid and malfunction will be eliminated when used with command shortcut. However Alt+F4 is always active. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsAccessKeyEnabled_Remarks {
            get {
                return ResourceManager.GetString("CommandConfig.IsAccessKeyEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Swap movement direction of page movement command according to slider direction に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMove {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When the slider is from left to right, reverse the page moving direction. The setting of the command to work is set by &quot;@ReversibleCommandParameter.IsReverse&quot; of the command parameter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMove_Remarks {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Replace when operating wheel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMoveWheel {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMoveWheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can select correspondence only for wheel operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMoveWheel_Remarks {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMoveWheel.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Bookmark {
            get {
                return ResourceManager.GetString("CommandGroup.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_BookMove {
            get {
                return ResourceManager.GetString("CommandGroup.BookMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_BookOrder {
            get {
                return ResourceManager.GetString("CommandGroup.BookOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Effect {
            get {
                return ResourceManager.GetString("CommandGroup.Effect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_File {
            get {
                return ResourceManager.GetString("CommandGroup.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_FilmStrip {
            get {
                return ResourceManager.GetString("CommandGroup.FilmStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_ImageScale {
            get {
                return ResourceManager.GetString("CommandGroup.ImageScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Move {
            get {
                return ResourceManager.GetString("CommandGroup.Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (none) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_None {
            get {
                return ResourceManager.GetString("CommandGroup.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Other に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Other {
            get {
                return ResourceManager.GetString("CommandGroup.Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Pagemark {
            get {
                return ResourceManager.GetString("CommandGroup.Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_PageOrder {
            get {
                return ResourceManager.GetString("CommandGroup.PageOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_PageSetting {
            get {
                return ResourceManager.GetString("CommandGroup.PageSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Panel {
            get {
                return ResourceManager.GetString("CommandGroup.Panel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Script {
            get {
                return ResourceManager.GetString("CommandGroup.Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Video {
            get {
                return ResourceManager.GetString("CommandGroup.Video", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_ViewManipulation {
            get {
                return ResourceManager.GetString("CommandGroup.ViewManipulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Window {
            get {
                return ResourceManager.GetString("CommandGroup.Window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Provides app-specific features. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost {
            get {
                return ResourceManager.GetString("CommandHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current book accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Book {
            get {
                return ResourceManager.GetString("CommandHost.Book", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Bookmark {
            get {
                return ResourceManager.GetString("CommandHost.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Bookshelf {
            get {
                return ResourceManager.GetString("CommandHost.Bookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An associative array of command accessors. The commands are the same as those displayed under Options &gt; Command Settings. For details, refer to &lt;a href=&quot;#CommandList&quot;/&gt;Command list&lt;/a&gt;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Command {
            get {
                return ResourceManager.GetString("CommandHost.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Execute &quot;NextPage&quot; command
        ///nv.Command[&quot;NextPage&quot;].Execute()
        ///// As well
        ///nv.Command.NextPage.Execute() に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Command_Example {
            get {
                return ResourceManager.GetString("CommandHost.Command.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An associative array of application settings. Refers to and changes the set value. For the types of set values, refer to &lt;a href=&quot;#ConfigList&quot;&gt;Config list&lt;/a&gt;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Config {
            get {
                return ResourceManager.GetString("CommandHost.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Change the theme color to dark
        ///nv.Config.Theme.PanelColor = &quot;Dark&quot;
        ///nv.Config.Theme.MenuColor = &quot;Dark&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Config_Example {
            get {
                return ResourceManager.GetString("CommandHost.Config.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Effect {
            get {
                return ResourceManager.GetString("CommandHost.Effect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_History {
            get {
                return ResourceManager.GetString("CommandHost.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Information {
            get {
                return ResourceManager.GetString("CommandHost.Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Navigator {
            get {
                return ResourceManager.GetString("CommandHost.Navigator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_PageList {
            get {
                return ResourceManager.GetString("CommandHost.PageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Pagemark {
            get {
                return ResourceManager.GetString("CommandHost.Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0: OK / 1: OKCancel / 2: YesNo
        ///Button types (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_commands {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.commands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   isYes = nv.ShowDialog(&quot;Is this a pen?&quot;, &quot;I think it&apos;s a pen, really?&quot;, 2)
        ///if (isYes) {
        ///    nv.ShowDialog(&quot;Good.&quot;)
        ///} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_Example {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Message (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_message {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Returns true if positive selection (&quot;OK&quot; or &quot;Yes&quot;), false otherwise. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_Returns {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_title {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the input dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Input text. Null when canceled に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog_Returns {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default text (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog_text {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog.text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog_title {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display a message on the screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowMessage {
            get {
                return ResourceManager.GetString("CommandHost.ShowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowMessage_message {
            get {
                return ResourceManager.GetString("CommandHost.ShowMessage.message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the message as a toast. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowToast {
            get {
                return ResourceManager.GetString("CommandHost.ShowToast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowToast_message {
            get {
                return ResourceManager.GetString("CommandHost.ShowToast.message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An associative array for storing values. The value saved in this object will be retained during app execution. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Values {
            get {
                return ResourceManager.GetString("CommandHost.Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Store value
        ///nv.Values[&quot;Test&quot;] = &quot;Hello!&quot;
        ///// As well
        ///nv.Values.Test = &quot;Hello!&quot;    に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Values_Example {
            get {
                return ResourceManager.GetString("CommandHost.Values.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Command {
            get {
                return ResourceManager.GetString("CommandList.Header.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Description {
            get {
                return ResourceManager.GetString("CommandList.Header.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visible に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Display {
            get {
                return ResourceManager.GetString("CommandList.Header.Display", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Message display at command execution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Display_ToolTip {
            get {
                return ResourceManager.GetString("CommandList.Header.Display.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Gesture {
            get {
                return ResourceManager.GetString("CommandList.Header.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Group に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Group {
            get {
                return ResourceManager.GetString("CommandList.Header.Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Shortcut {
            get {
                return ResourceManager.GetString("CommandList.Header.Shortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Touch {
            get {
                return ResourceManager.GetString("CommandList.Header.Touch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_ResetButton {
            get {
                return ResourceManager.GetString("CommandList.ResetButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter sharing with &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandListItem_Message_ShareParameter {
            get {
                return ResourceManager.GetString("CommandListItem.Message.ShareParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There are no parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandParameterControl_Empty {
            get {
                return ResourceManager.GetString("CommandParameterControl.Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize all command settings. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandResetWindow_Message {
            get {
                return ResourceManager.GetString("CommandResetWindow.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut initial setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandResetWindow_ResetType_Title {
            get {
                return ResourceManager.GetString("CommandResetWindow.ResetType.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandResetWindow_Title {
            get {
                return ResourceManager.GetString("CommandResetWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlConfig_IsSelected {
            get {
                return ResourceManager.GetString("ControlConfig.IsSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlConfig_IsVisible {
            get {
                return ResourceManager.GetString("ControlConfig.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommand {
            get {
                return ResourceManager.GetString("CopyFileCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommand_Menu {
            get {
                return ResourceManager.GetString("CopyFileCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy the file to the clipboard. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommand_Remarks {
            get {
                return ResourceManager.GetString("CopyFileCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For compressed files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommandParameter_ArchivePolicy {
            get {
                return ResourceManager.GetString("CopyFileCommandParameter.ArchivePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommandParameter_MultiPagePolicy {
            get {
                return ResourceManager.GetString("CopyFileCommandParameter.MultiPagePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyImageCommand {
            get {
                return ResourceManager.GetString("CopyImageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyImageCommand_Menu {
            get {
                return ResourceManager.GetString("CopyImageCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy the image to the clipboard. For 2 page display, copy only the main page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyImageCommand_Remarks {
            get {
                return ResourceManager.GetString("CopyImageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_Color {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_Image {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_ImageSelect {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.ImageSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select an image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_ImageSelect_Remarks {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.ImageSelect.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteBookCommand {
            get {
                return ResourceManager.GetString("DeleteBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteBookCommand_Menu {
            get {
                return ResourceManager.GetString("DeleteBookCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete the currently viewed folder or compressed file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteBookCommand_Remarks {
            get {
                return ResourceManager.GetString("DeleteBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteFileCommand {
            get {
                return ResourceManager.GetString("DeleteFileCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteFileCommand_Menu {
            get {
                return ResourceManager.GetString("DeleteFileCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete the file. It can not be deleted for compressed files. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteFileCommand_Remarks {
            get {
                return ResourceManager.GetString("DeleteFileCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DestinationFolderEditDialogTitle {
            get {
                return ResourceManager.GetString("DestinationFolderEditDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DestinationFolderPathTips {
            get {
                return ResourceManager.GetString("DestinationFolderPathTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Destination folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DestinationFoldersDialogTitle {
            get {
                return ResourceManager.GetString("DestinationFoldersDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogAddParameterTile {
            get {
                return ResourceManager.GetString("DialogAddParameterTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary folders can not be bookmarked に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogBookmarkError {
            get {
                return ResourceManager.GetString("DialogBookmarkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Startup error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogBootErrorTitle {
            get {
                return ResourceManager.GetString("DialogBootErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Startup options に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogBootOptionTitle {
            get {
                return ResourceManager.GetString("DialogBootOptionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deletion of thumbnail cache failed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogCacheDeletedFailedTitle {
            get {
                return ResourceManager.GetString("DialogCacheDeletedFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache deleted に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogCacheDeletedTitle {
            get {
                return ResourceManager.GetString("DialogCacheDeletedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no file that can be read in &quot;{0}&quot;. Do you also load subfolders or compressed files? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogConfirmRecursive {
            get {
                return ResourceManager.GetString("DialogConfirmRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you also read subfolders? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogConfirmRecursiveTitle {
            get {
                return ResourceManager.GetString("DialogConfirmRecursiveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogCopyErrorTitle {
            get {
                return ResourceManager.GetString("DialogCopyErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogCopyImageErrorTitle {
            get {
                return ResourceManager.GetString("DialogCopyImageErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete user data. Are you sure?
        ///
        ///The following data will be deleted
        ///- Setting file
        ///- History file
        ///- Bookmark file
        ///- Pagemark file
        ///- Cache file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationData {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   User data deleted. Quit NeeView. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataComplete {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It has been deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataCompleteTitle {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataCompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It can not be deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataErrorTitle {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete user data. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataTitle {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This operation can not be changed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDragActionLockedTitle {
            get {
                return ResourceManager.GetString("DialogDragActionLockedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize all drag operations. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDragActionReset {
            get {
                return ResourceManager.GetString("DialogDragActionReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize the drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDragActionResetTitle {
            get {
                return ResourceManager.GetString("DialogDragActionResetTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogExportErrorTitle {
            get {
                return ResourceManager.GetString("DialogExportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} saved. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogExportImageSuccess {
            get {
                return ResourceManager.GetString("DialogExportImageSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to save playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogExportPlaylistFailedTitle {
            get {
                return ResourceManager.GetString("DialogExportPlaylistFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export all settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogExportTitle {
            get {
                return ResourceManager.GetString("DialogExportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to delete this {0} ? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDelete {
            get {
                return ResourceManager.GetString("DialogFileDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteBookTitle {
            get {
                return ResourceManager.GetString("DialogFileDeleteBookTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete failed. Would you like to try again? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteError {
            get {
                return ResourceManager.GetString("DialogFileDeleteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete failed. Would you like to retry? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteErrorTitle {
            get {
                return ResourceManager.GetString("DialogFileDeleteErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete failed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteFailed {
            get {
                return ResourceManager.GetString("DialogFileDeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to delete these {0} items? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteMulti {
            get {
                return ResourceManager.GetString("DialogFileDeleteMulti", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Some files could not be deleted. Would you like to try again? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteMultiError {
            get {
                return ResourceManager.GetString("DialogFileDeleteMultiError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeletePageTitle {
            get {
                return ResourceManager.GetString("DialogFileDeletePageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteTitle {
            get {
                return ResourceManager.GetString("DialogFileDeleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} already exists.
        ///Would you like to rename it to {1}?  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameConfrict {
            get {
                return ResourceManager.GetString("DialogFileRenameConfrict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A file with the same name exists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameConfrictTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameConfrictTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Can not rename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameErrorTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Changing the extension may make it impossible to use it.
        ///Is it OK?  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameExtension {
            get {
                return ResourceManager.GetString("DialogFileRenameExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change the extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameExtensionTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameExtensionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to change the name. Would you like to try again? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameFailed {
            get {
                return ResourceManager.GetString("DialogFileRenameFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rename failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameFailedTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file name contains characters that can not be used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameInvalid {
            get {
                return ResourceManager.GetString("DialogFileRenameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified file name is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameWrong {
            get {
                return ResourceManager.GetString("DialogFileRenameWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified device name is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameWrongDevice {
            get {
                return ResourceManager.GetString("DialogFileRenameWrongDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHistoryDeleteAll {
            get {
                return ResourceManager.GetString("DialogHistoryDeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHistoryDeleteAllTitle {
            get {
                return ResourceManager.GetString("DialogHistoryDeleteAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deleted history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHistoryDeletedTitle {
            get {
                return ResourceManager.GetString("DialogHistoryDeletedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Could not get link. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHyperLinkFailedTitle {
            get {
                return ResourceManager.GetString("DialogHyperLinkFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This image can not be output. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImageExportError {
            get {
                return ResourceManager.GetString("DialogImageExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File save failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImageExportErrorTitle {
            get {
                return ResourceManager.GetString("DialogImageExportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImportErrorTitle {
            get {
                return ResourceManager.GetString("DialogImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select the item to be imported に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImportSelectTitle {
            get {
                return ResourceManager.GetString("DialogImportSelectTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import all settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImportTitle {
            get {
                return ResourceManager.GetString("DialogImportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consolidate folders into {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogMergeFolder {
            get {
                return ResourceManager.GetString("DialogMergeFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to merge folders? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogMergeFolderTitle {
            get {
                return ResourceManager.GetString("DialogMergeFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app execution failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogOpenApplicationErrorTitle {
            get {
                return ResourceManager.GetString("DialogOpenApplicationErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cannot open scripts folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogOpenScriptsFolderErrorTitle {
            get {
                return ResourceManager.GetString("DialogOpenScriptsFolderErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The location of the setting file can not be opened with the store application に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogOpenSettingFolderError {
            get {
                return ResourceManager.GetString("DialogOpenSettingFolderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This command can not be used に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogOpenSettingFolderErrorTitle {
            get {
                return ResourceManager.GetString("DialogOpenSettingFolderErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select an action. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogPageEnd {
            get {
                return ResourceManager.GetString("DialogPageEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   End of page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogPageEndTitle {
            get {
                return ResourceManager.GetString("DialogPageEndTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary folders can not be pagemarked に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogPagemarkError {
            get {
                return ResourceManager.GetString("DialogPagemarkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Removed {5} pagemarks. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogPagemarkFolderDelete {
            get {
                return ResourceManager.GetString("DialogPagemarkFolderDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Could not write Page view record に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogPageViewRecordWriteError {
            get {
                return ResourceManager.GetString("DialogPageViewRecordWriteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary folders can not be added to quick access. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogQuickAccessTempError {
            get {
                return ResourceManager.GetString("DialogQuickAccessTempError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection to Susie failed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogSusieConnectError {
            get {
                return ResourceManager.GetString("DialogSusieConnectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag action settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionTable_Elements {
            get {
                return ResourceManager.GetString("DragActionTable.Elements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Angle {
            get {
                return ResourceManager.GetString("DragActionType.Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotation (horizontal slide) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_AngleSlider {
            get {
                return ResourceManager.GetString("DragActionType.AngleSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_FlipHorizontal {
            get {
                return ResourceManager.GetString("DragActionType.FlipHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_FlipVertical {
            get {
                return ResourceManager.GetString("DragActionType.FlipVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Gesture {
            get {
                return ResourceManager.GetString("DragActionType.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select area to enlarge に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_MarqueeZoom {
            get {
                return ResourceManager.GetString("DragActionType.MarqueeZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Move {
            get {
                return ResourceManager.GetString("DragActionType.Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move (scale dependent) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_MoveScale {
            get {
                return ResourceManager.GetString("DragActionType.MoveScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_None {
            get {
                return ResourceManager.GetString("DragActionType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scaling に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Scale {
            get {
                return ResourceManager.GetString("DragActionType.Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scaling (horizontal slide) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_ScaleSlider {
            get {
                return ResourceManager.GetString("DragActionType.ScaleSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scaling (horizontal slide, centered) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_ScaleSliderCentered {
            get {
                return ResourceManager.GetString("DragActionType.ScaleSliderCentered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_WindowMove {
            get {
                return ResourceManager.GetString("DragActionType.WindowMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cursor position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragControlCenter_Cursor {
            get {
                return ResourceManager.GetString("DragControlCenter.Cursor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragControlCenter_Target {
            get {
                return ResourceManager.GetString("DragControlCenter.Target", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragControlCenter_View {
            get {
                return ResourceManager.GetString("DragControlCenter.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Remarks {
            get {
                return ResourceManager.GetString("EditCommandWindow.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_General {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Gesture {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Parameter {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Shortcut {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Shortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Touch {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Touch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Title {
            get {
                return ResourceManager.GetString("EditCommandWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display a message when executing a command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Visible {
            get {
                return ResourceManager.GetString("EditCommandWindow.Visible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectBaseScale {
            get {
                return ResourceManager.GetString("EffectBaseScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectCustomSize {
            get {
                return ResourceManager.GetString("EffectCustomSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectEffect {
            get {
                return ResourceManager.GetString("EffectEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectEffectType {
            get {
                return ResourceManager.GetString("EffectEffectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectGrid {
            get {
                return ResourceManager.GetString("EffectGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectKeepDot {
            get {
                return ResourceManager.GetString("EffectKeepDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectName {
            get {
                return ResourceManager.GetString("EffectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectPanelAccessor {
            get {
                return ResourceManager.GetString("EffectPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectResizeFilter {
            get {
                return ResourceManager.GetString("EffectResizeFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Interpolation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectResizeInterpolation {
            get {
                return ResourceManager.GetString("EffectResizeInterpolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectResizeReset {
            get {
                return ResourceManager.GetString("EffectResizeReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unsharp mask に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectResizeUnsharp {
            get {
                return ResourceManager.GetString("EffectResizeUnsharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Trim に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectTrim {
            get {
                return ResourceManager.GetString("EffectTrim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Bloom {
            get {
                return ResourceManager.GetString("EffectType.Bloom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blur に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Blur {
            get {
                return ResourceManager.GetString("EffectType.Blur", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color select に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_ColorSelect {
            get {
                return ResourceManager.GetString("EffectType.ColorSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color tone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_ColorTone {
            get {
                return ResourceManager.GetString("EffectType.ColorTone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Embossed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Embossed {
            get {
                return ResourceManager.GetString("EffectType.Embossed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HSV に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Hsv {
            get {
                return ResourceManager.GetString("EffectType.Hsv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Level に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Level {
            get {
                return ResourceManager.GetString("EffectType.Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Magnify に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Magnify {
            get {
                return ResourceManager.GetString("EffectType.Magnify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Monochrome に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Monochrome {
            get {
                return ResourceManager.GetString("EffectType.Monochrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_None {
            get {
                return ResourceManager.GetString("EffectType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pixelate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Pixelate {
            get {
                return ResourceManager.GetString("EffectType.Pixelate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ripple に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Ripple {
            get {
                return ResourceManager.GetString("EffectType.Ripple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sharpen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Sharpen {
            get {
                return ResourceManager.GetString("EffectType.Sharpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Swirl に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Swirl {
            get {
                return ResourceManager.GetString("EffectType.Swirl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EmbossedEffectUnit_Amount {
            get {
                return ResourceManager.GetString("EmbossedEffectUnit.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EmbossedEffectUnit_Color {
            get {
                return ResourceManager.GetString("EmbossedEffectUnit.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EmbossedEffectUnit_Height {
            get {
                return ResourceManager.GetString("EmbossedEffectUnit.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is not an AppData folder, so it will not be deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionCannotDeleteData {
            get {
                return ResourceManager.GetString("ExceptionCannotDeleteData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An error occurred. Quit the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionCritical {
            get {
                return ResourceManager.GetString("ExceptionCritical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy to clipboard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionCriticalCopy {
            get {
                return ResourceManager.GetString("ExceptionCriticalCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Details of the error are saved in &lt;a href=&quot;{0}&quot;&gt;{0}&lt;/a&gt; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionCriticalLogPath {
            get {
                return ResourceManager.GetString("ExceptionCriticalLogPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error details: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionCriticalMessage {
            get {
                return ResourceManager.GetString("ExceptionCriticalMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView - Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionCriticalTitle {
            get {
                return ResourceManager.GetString("ExceptionCriticalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File not found &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionFileNotFound {
            get {
                return ResourceManager.GetString("ExceptionFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionImageLoadFailed {
            get {
                return ResourceManager.GetString("ExceptionImageLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Inconsistency of page data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionInconsistency {
            get {
                return ResourceManager.GetString("ExceptionInconsistency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to read {0}.
        ///{1}  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionLoadFailed {
            get {
                return ResourceManager.GetString("ExceptionLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file folders are not supported. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionNotSupportArchiveFolder {
            get {
                return ResourceManager.GetString("ExceptionNotSupportArchiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The combination of {0} key and modifier key is not supported in {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionNotSupportedKey {
            get {
                return ResourceManager.GetString("ExceptionNotSupportedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is not a ZIP file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionNotZip {
            get {
                return ResourceManager.GetString("ExceptionNotZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load image at Susie. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExceptionSusieLoadFailed {
            get {
                return ResourceManager.GetString("ExceptionSusieLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Register in the Explorer context menu. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExplorerContextMenu_IsEnabled {
            get {
                return ResourceManager.GetString("ExplorerContextMenu.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add &quot;Open in NeeView&quot; to the Explorer context menu. This feature uses the registry. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExplorerContextMenu_IsEnabled_Remarks {
            get {
                return ResourceManager.GetString("ExplorerContextMenu.IsEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportBackupCommand {
            get {
                return ResourceManager.GetString("ExportBackupCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export settings... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportBackupCommand_Menu {
            get {
                return ResourceManager.GetString("ExportBackupCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Create backups of settings, history, bookmarks, page marks. The thumbnail cache is not backed up. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportBackupCommand_Remarks {
            get {
                return ResourceManager.GetString("ExportBackupCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save as に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommand {
            get {
                return ResourceManager.GetString("ExportImageAsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Save as... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommand_Menu {
            get {
                return ResourceManager.GetString("ExportImageAsCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save the image to a file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommand_Remarks {
            get {
                return ResourceManager.GetString("ExportImageAsCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default output folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_ExportFolder {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.ExportFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output folder at startup. During startup, it follows the changed storage location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_ExportFolder_Remarks {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.ExportFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_QualityLevel {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.QualityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used only when conversion is required. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_QualityLevel_Remarks {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.QualityLevel.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommand {
            get {
                return ResourceManager.GetString("ExportImageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Save に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommand_Menu {
            get {
                return ResourceManager.GetString("ExportImageCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save the image to a file. The storage folder is specified by a command parameter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommand_Remarks {
            get {
                return ResourceManager.GetString("ExportImageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_ExportFolder {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.ExportFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output file format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_FileFormat {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.FileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Used when &quot;@ExportImageCommandParameter.Mode&quot; is &quot;@ExportImageMode.View&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_FileFormat_Remarks {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.FileFormat.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output file name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_FileNameMode {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.FileNameMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_HasBackground {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.HasBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output image type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_Mode {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_QualityLevel {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.QualityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used only when conversion is required. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_QualityLevel_Remarks {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.QualityLevel.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book name + page number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFileNameMode_BookPageNumber {
            get {
                return ResourceManager.GetString("ExportImageFileNameMode.BookPageNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFileNameMode_Deault {
            get {
                return ResourceManager.GetString("ExportImageFileNameMode.Deault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original file name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFileNameMode_Original {
            get {
                return ResourceManager.GetString("ExportImageFileNameMode.Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFormat_Jpeg {
            get {
                return ResourceManager.GetString("ExportImageFormat.Jpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PNG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFormat_Png {
            get {
                return ResourceManager.GetString("ExportImageFormat.Png", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save as original file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageMode_Original {
            get {
                return ResourceManager.GetString("ExportImageMode.Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageMode_View {
            get {
                return ResourceManager.GetString("ExportImageMode.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default destination folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_Folder {
            get {
                return ResourceManager.GetString("ExportImageWindow.Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_InclideBackground {
            get {
                return ResourceManager.GetString("ExportImageWindow.InclideBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output image type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_Mode {
            get {
                return ResourceManager.GetString("ExportImageWindow.Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save as... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_SaveAs {
            get {
                return ResourceManager.GetString("ExportImageWindow.SaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_Title {
            get {
                return ResourceManager.GetString("ExportImageWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External apps に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalAppDialogTitle {
            get {
                return ResourceManager.GetString("ExternalAppDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalAppEditDialogTitle {
            get {
                return ResourceManager.GetString("ExternalAppEditDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalProgramType_Normal {
            get {
                return ResourceManager.GetString("ExternalProgramType.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Protocol に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalProgramType_Protocol {
            get {
                return ResourceManager.GetString("ExternalProgramType.Protocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileInfoName {
            get {
                return ResourceManager.GetString("FileInfoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please enter the folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_Directory_Message {
            get {
                return ResourceManager.GetString("FileNameBox.Directory.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please enter the path of the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_File_Message {
            get {
                return ResourceManager.GetString("FileNameBox.File.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_SelectDirectory {
            get {
                return ResourceManager.GetString("FileNameBox.SelectDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_SelectFile {
            get {
                return ResourceManager.GetString("FileNameBox.SelectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsEnabled {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsHideFilmStrip {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsHideFilmStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch scroll termination bound on filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsManipulationBoundaryFeedbackEnabled {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsManipulationBoundaryFeedbackEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll so that the selected item appears in the center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsSelectedCenter {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsSelectedCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display page number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsVisibleNumber {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsVisibleNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsVisiblePlate {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsVisiblePlate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the background of the filmstrip in the case of automatically hidden settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsVisiblePlate_Remarks {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsVisiblePlate.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page thumbnail size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_ThumbnailSize {
            get {
                return ResourceManager.GetString("FilmStripConfig.ThumbnailSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FirstPageCommand {
            get {
                return ResourceManager.GetString("FirstPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the first page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FirstPageCommand_Remarks {
            get {
                return ResourceManager.GetString("FirstPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display bookmark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusBookmarkListCommand {
            get {
                return ResourceManager.GetString("FocusBookmarkListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusBookmarkListCommand_Menu {
            get {
                return ResourceManager.GetString("FocusBookmarkListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display bookmark list of the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusBookmarkListCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusBookmarkListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focus search box に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusFolderSearchBoxCommand {
            get {
                return ResourceManager.GetString("FocusFolderSearchBoxCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search box に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusFolderSearchBoxCommand_Menu {
            get {
                return ResourceManager.GetString("FocusFolderSearchBoxCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focus search box. The bookshelf is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusFolderSearchBoxCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusFolderSearchBoxCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focus on main view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommand {
            get {
                return ResourceManager.GetString("FocusMainViewCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommand_Menu {
            get {
                return ResourceManager.GetString("FocusMainViewCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move focus to the main view. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusMainViewCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close all panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommandParameter_NeedClosePanels {
            get {
                return ResourceManager.GetString("FocusMainViewCommandParameter.NeedClosePanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch next NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusNextAppCommand {
            get {
                return ResourceManager.GetString("FocusNextAppCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch next NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusNextAppCommand_Menu {
            get {
                return ResourceManager.GetString("FocusNextAppCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch to the next NeeView when multiple are started. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusNextAppCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusNextAppCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch prev NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusPrevAppCommand {
            get {
                return ResourceManager.GetString("FocusPrevAppCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch prev NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusPrevAppCommand_Menu {
            get {
                return ResourceManager.GetString("FocusPrevAppCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch to the previous NeeView when multiple are started. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusPrevAppCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusPrevAppCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Archiver に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoArchiver {
            get {
                return ResourceManager.GetString("FolderInfoArchiver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File date に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoDate {
            get {
                return ResourceManager.GetString("FolderInfoDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   yyyy-MM-dd dddd H:mm に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoDateFormat {
            get {
                return ResourceManager.GetString("FolderInfoDateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date taken に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoDateTimeOriginal {
            get {
                return ResourceManager.GetString("FolderInfoDateTimeOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Decoder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoDecoder {
            get {
                return ResourceManager.GetString("FolderInfoDecoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Device に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoDevice {
            get {
                return ResourceManager.GetString("FolderInfoDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoFileName {
            get {
                return ResourceManager.GetString("FolderInfoFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoFilePath {
            get {
                return ResourceManager.GetString("FolderInfoFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoFileSize {
            get {
                return ResourceManager.GetString("FolderInfoFileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoFolderPath {
            get {
                return ResourceManager.GetString("FolderInfoFolderPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoImageSize {
            get {
                return ResourceManager.GetString("FolderInfoImageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoInfo {
            get {
                return ResourceManager.GetString("FolderInfoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ISO に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoISO {
            get {
                return ResourceManager.GetString("FolderInfoISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoMenuCopy {
            get {
                return ResourceManager.GetString("FolderInfoMenuCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderInfoOpenFolder {
            get {
                return ResourceManager.GetString("FolderInfoOpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder tree layout に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderListConfig_FolderTreeLayout {
            get {
                return ResourceManager.GetString("FolderListConfig.FolderTreeLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display folder tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderListConfig_IsFolderTreeVisible {
            get {
                return ResourceManager.GetString("FolderListConfig.IsFolderTreeVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderListConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("FolderListConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder {
            get {
                return ResourceManager.GetString("FolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_EntryTime {
            get {
                return ResourceManager.GetString("FolderOrder.EntryTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_EntryTimeDescending {
            get {
                return ResourceManager.GetString("FolderOrder.EntryTimeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileName {
            get {
                return ResourceManager.GetString("FolderOrder.FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileNameDescending {
            get {
                return ResourceManager.GetString("FolderOrder.FileNameDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileType {
            get {
                return ResourceManager.GetString("FolderOrder.FileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileTypeDescending {
            get {
                return ResourceManager.GetString("FolderOrder.FileTypeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_Path {
            get {
                return ResourceManager.GetString("FolderOrder.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_PathDescending {
            get {
                return ResourceManager.GetString("FolderOrder.PathDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_Random {
            get {
                return ResourceManager.GetString("FolderOrder.Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_Size {
            get {
                return ResourceManager.GetString("FolderOrder.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_SizeDescending {
            get {
                return ResourceManager.GetString("FolderOrder.SizeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_TimeStamp {
            get {
                return ResourceManager.GetString("FolderOrder.TimeStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_TimeStampDescending {
            get {
                return ResourceManager.GetString("FolderOrder.TimeStampDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Place to the left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeLayout_Left {
            get {
                return ResourceManager.GetString("FolderTreeLayout.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Place to the top に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeLayout_Top {
            get {
                return ResourceManager.GetString("FolderTreeLayout.Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeMenuAddBookmark {
            get {
                return ResourceManager.GetString("FolderTreeMenuAddBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add current place to quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeMenuAddCurrentQuickAccess {
            get {
                return ResourceManager.GetString("FolderTreeMenuAddCurrentQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add to quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeMenuAddQuickAccess {
            get {
                return ResourceManager.GetString("FolderTreeMenuAddQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove invalid bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeMenuDeleteInvalidBookmark {
            get {
                return ResourceManager.GetString("FolderTreeMenuDeleteInvalidBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in explorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeMenuExplorer {
            get {
                return ResourceManager.GetString("FolderTreeMenuExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeMenuRefreshFolder {
            get {
                return ResourceManager.GetString("FolderTreeMenuRefreshFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove from quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeMenuRemoveQuickAccess {
            get {
                return ResourceManager.GetString("FolderTreeMenuRemoveQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CHANGELOG.html に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpChangeLogFile {
            get {
                return ResourceManager.GetString("HelpChangeLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandListCommand {
            get {
                return ResourceManager.GetString("HelpCommandListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandListCommand_Menu {
            get {
                return ResourceManager.GetString("HelpCommandListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Displays help of all commands in the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandListCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpCommandListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Commands to which no operation is assigned can be used by setting with &quot;Edit commands&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandMessage {
            get {
                return ResourceManager.GetString("HelpCommandMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Command List に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandTitle {
            get {
                return ResourceManager.GetString("HelpCommandTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main menu help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpMainMenuCommand {
            get {
                return ResourceManager.GetString("HelpMainMenuCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main menu help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpMainMenuCommand_Menu {
            get {
                return ResourceManager.GetString("HelpMainMenuCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the main menu help on the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpMainMenuCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpMainMenuCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   README.html に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpReadMeFile {
            get {
                return ResourceManager.GetString("HelpReadMeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpScriptCommand {
            get {
                return ResourceManager.GetString("HelpScriptCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpScriptCommand_Menu {
            get {
                return ResourceManager.GetString("HelpScriptCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Displays the script manual in the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpScriptCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpScriptCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search options help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpSearchOptionCommand {
            get {
                return ResourceManager.GetString("HelpSearchOptionCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search options help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpSearchOptionCommand_Menu {
            get {
                return ResourceManager.GetString("HelpSearchOptionCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the search options help on the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpSearchOptionCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpSearchOptionCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of page operations to start history registration に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_HistoryEntryPageCount {
            get {
                return ResourceManager.GetString("HistoryConfig.HistoryEntryPageCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Register in history with page movement operation more than this count or last page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_HistoryEntryPageCount_Remarks {
            get {
                return ResourceManager.GetString("HistoryConfig.HistoryEntryPageCount.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History list file location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_HistoryFilePath {
            get {
                return ResourceManager.GetString("HistoryConfig.HistoryFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic deletion of invalid history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsAutoCleanupEnabled {
            get {
                return ResourceManager.GetString("HistoryConfig.IsAutoCleanupEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete invalid history on startup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsAutoCleanupEnabled_Remarks {
            get {
                return ResourceManager.GetString("HistoryConfig.IsAutoCleanupEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current folder only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsCurrentFolder {
            get {
                return ResourceManager.GetString("HistoryConfig.IsCurrentFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shows the history of only the folders of the currently open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsCurrentFolder_Remarks {
            get {
                return ResourceManager.GetString("HistoryConfig.IsCurrentFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Even if you open a book from history, it updates the last browsing date に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsForceUpdateHistory {
            get {
                return ResourceManager.GetString("HistoryConfig.IsForceUpdateHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save recursive compressed file in history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsInnerArchiveHistoryEnabled {
            get {
                return ResourceManager.GetString("HistoryConfig.IsInnerArchiveHistoryEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save folder state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsKeepFolderStatus {
            get {
                return ResourceManager.GetString("HistoryConfig.IsKeepFolderStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save search history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsKeepSearchHistory {
            get {
                return ResourceManager.GetString("HistoryConfig.IsKeepSearchHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save history list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsSaveHistory {
            get {
                return ResourceManager.GetString("HistoryConfig.IsSaveHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save UNC path in history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsUncHistoryEnabled {
            get {
                return ResourceManager.GetString("HistoryConfig.IsUncHistoryEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save the path on the network like &quot;\\computer\~&quot; in the history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsUncHistoryEnabled_Remarks {
            get {
                return ResourceManager.GetString("HistoryConfig.IsUncHistoryEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_LimitSize {
            get {
                return ResourceManager.GetString("HistoryConfig.LimitSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Retention period に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_LimitSpan {
            get {
                return ResourceManager.GetString("HistoryConfig.LimitSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History list item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("HistoryConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor {
            get {
                return ResourceManager.GetString("HistoryItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last access time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor_LastAccessTime {
            get {
                return ResourceManager.GetString("HistoryItemAccessor.LastAccessTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor_Name {
            get {
                return ResourceManager.GetString("HistoryItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor_Path {
            get {
                return ResourceManager.GetString("HistoryItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Remove history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemMenuDelete {
            get {
                return ResourceManager.GetString("HistoryItemMenuDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current folder only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemMenuIsCurrentFolder {
            get {
                return ResourceManager.GetString("HistoryItemMenuIsCurrentFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemMenuOpenBook {
            get {
                return ResourceManager.GetString("HistoryItemMenuOpenBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryMenuDeleteAll {
            get {
                return ResourceManager.GetString("HistoryMenuDeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove invalid history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryMenuDeleteInvalid {
            get {
                return ResourceManager.GetString("HistoryMenuDeleteInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryName {
            get {
                return ResourceManager.GetString("HistoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor_Items {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item stye に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor_Style {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignment_Center {
            get {
                return ResourceManager.GetString("HorizontalAlignment.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignment_Left {
            get {
                return ResourceManager.GetString("HorizontalAlignment.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignment_Right {
            get {
                return ResourceManager.GetString("HorizontalAlignment.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HsvEffectUnit_Hue {
            get {
                return ResourceManager.GetString("HsvEffectUnit.Hue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Saturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HsvEffectUnit_Saturation {
            get {
                return ResourceManager.GetString("HsvEffectUnit.Saturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Brightness に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HsvEffectUnit_Value {
            get {
                return ResourceManager.GetString("HsvEffectUnit.Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_Height {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable custom image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lock aspect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_IsUniformed {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.IsUniformed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_Size {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_Width {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageDotKeepConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageDotKeepConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale threshold for &quot;@ImageDotKeepConfig.IsEnabled&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageDotKeepConfig_Threshold {
            get {
                return ResourceManager.GetString("ImageDotKeepConfig.Threshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only applicable if the scale is larger than this. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageDotKeepConfig_Threshold_Remarks {
            get {
                return ResourceManager.GetString("ImageDotKeepConfig.Threshold.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image effect type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_EffectType {
            get {
                return ResourceManager.GetString("ImageEffectConfig.EffectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable image effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageEffectConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform color setting with HSV に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_IsHsvMode {
            get {
                return ResourceManager.GetString("ImageEffectConfig.IsHsvMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the color parameter with HSV (Hue, Saturation, Brightness). When set to OFF, it becomes the setting with RGB. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_IsHsvMode_Remarks {
            get {
                return ResourceManager.GetString("ImageEffectConfig.IsHsvMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_Color {
            get {
                return ResourceManager.GetString("ImageGridConfig.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Column に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_DivX {
            get {
                return ResourceManager.GetString("ImageGridConfig.DivX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Row に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_DivY {
            get {
                return ResourceManager.GetString("ImageGridConfig.DivY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageGridConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Square に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_IsSquare {
            get {
                return ResourceManager.GetString("ImageGridConfig.IsSquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageResizeFilterConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageResizeFilterConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable unsharp mask when resizing に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageResizeFilterConfig_IsUnsharpMaskEnabled {
            get {
                return ResourceManager.GetString("ImageResizeFilterConfig.IsUnsharpMaskEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize interpolation method に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageResizeFilterConfig_ResizeInterpolation {
            get {
                return ResourceManager.GetString("ImageResizeFilterConfig.ResizeInterpolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A file whose extension is unknown is regarded as an image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAllFileSupported {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAllFileSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This function works when &quot;@SystemConfig.BookPageCollectMode&quot; is &quot;@BookPageCollectMode.All&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAllFileSupported_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAllFileSupported.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play animated GIF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAnimatedGifEnabled {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAnimatedGifEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform animated GIF playback. Memory consumption problems may occur with long GIFs. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAnimatedGifEnabled_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAnimatedGifEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply image resolution information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAspectRatioEnabled {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAspectRatioEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display according to the dpi and aspect ratio set in the image file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAspectRatioEnabled_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAspectRatioEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image file extensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("ImageStandardConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use WIC information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_UseWicInformation {
            get {
                return ResourceManager.GetString("ImageStandardConfig.UseWicInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Obtains the image file extension from WIC at initialization. If off, only the default extension is available. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_UseWicInformation_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.UseWicInformation.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable SVG file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageSvgConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageSvgConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open an SVG file as a page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageSvgConfig_IsEnabled_Remarks {
            get {
                return ResourceManager.GetString("ImageSvgConfig.IsEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SVG file extensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageSvgConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("ImageSvgConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bottom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Bottom {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable trim に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageTrimConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Left {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Right {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Top に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Top {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommand {
            get {
                return ResourceManager.GetString("ImportBackupCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import settings... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommand_Menu {
            get {
                return ResourceManager.GetString("ImportBackupCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select the restored item from the backup file and restore it. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommand_Remarks {
            get {
                return ResourceManager.GetString("ImportBackupCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Bookmark {
            get {
                return ResourceManager.GetString("ImportControl_Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_History {
            get {
                return ResourceManager.GetString("ImportControl_History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Pagemark {
            get {
                return ResourceManager.GetString("ImportControl_Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Setting {
            get {
                return ResourceManager.GetString("ImportControl_Setting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the number of bits per pixel in image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleBitsPerPixel {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleBitsPerPixel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the file path in the compressed file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleFilePath {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display used archiver, image decoder name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleLoader {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationPanelAccessor {
            get {
                return ResourceManager.GetString("InformationPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Conflict resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_ButtonConflict {
            get {
                return ResourceManager.GetString("InputGestureControl.ButtonConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse input here に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_InputMouse {
            get {
                return ResourceManager.GetString("InputGestureControl.InputMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Key input here に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_InputShortcut {
            get {
                return ResourceManager.GetString("InputGestureControl.InputShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse input に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_LabelMouse {
            get {
                return ResourceManager.GetString("InputGestureControl.LabelMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut key に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_LabelShortcut {
            get {
                return ResourceManager.GetString("InputGestureControl.LabelShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_Title {
            get {
                return ResourceManager.GetString("InputGestureControl.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeA {
            get {
                return ResourceManager.GetString("InputSceme.TypeA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   By clicking the mouse, &quot;@CommandPrevPage&quot; &quot;@CommandNextPage&quot;.
        ///In the wheel operation, &quot;@CommandPrevScrollPage&quot; &quot;@CommandNextScrollPage&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeA_Remarks {
            get {
                return ResourceManager.GetString("InputSceme.TypeA.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize page feed by wheel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeB {
            get {
                return ResourceManager.GetString("InputSceme.TypeB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In the wheel operation, &quot;@CommandPrevPage&quot; &quot;@CommandNextPage&quot;.
        ///By right-click, &quot;@CommandOpenContextMenu&quot;.
        ///Left click is undefined. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeB_Remarks {
            get {
                return ResourceManager.GetString("InputSceme.TypeB.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize page feed by click に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeC {
            get {
                return ResourceManager.GetString("InputSceme.TypeC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   By clicking the mouse, &quot;@CommandPrevPage&quot; &quot;@CommandNextPage&quot;.
        ///In the wheel operation, &quot;@CommandViewScrollUp&quot; &quot;@CommandViewScrollDown&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeC_Remarks {
            get {
                return ResourceManager.GetString("InputSceme.TypeC.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the area to touch.
        ///If Center is not assigned to a command, the judgment of the area (L1, L2, R1, R2) below it is applied.
        ///Please substitute gesture for flick operation.  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputTouchControl_Remarks {
            get {
                return ResourceManager.GetString("InputTouchControl.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Here, touch input に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputTouchControl_TouchInput {
            get {
                return ResourceManager.GetString("InputTouchControl.TouchInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load and execute the script. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Load and run Sample.nvjs
        ///include(&quot;Sample.nvjs&quot;) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile_Example {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script path. Relative paths are relative to the current script location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile_path {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile.path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script execution result に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile_Returns {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print a message to the console. It only works when you run the script from the console. For script testing. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Log {
            get {
                return ResourceManager.GetString("JavascriptEngine.Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Log_log {
            get {
                return ResourceManager.GetString("JavascriptEngine.Log.log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Suspends the script for the specified amount of time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Sleep {
            get {
                return ResourceManager.GetString("JavascriptEngine.Sleep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pause time (milliseconds) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Sleep_millisecond {
            get {
                return ResourceManager.GetString("JavascriptEngine.Sleep.millisecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run the external app. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_SystemCall {
            get {
                return ResourceManager.GetString("JavascriptEngine.SystemCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   App arguments (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_SystemCall_args {
            get {
                return ResourceManager.GetString("JavascriptEngine.SystemCall.args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Executable path. If you specify a URL or file path, the associated app will be executed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_SystemCall_filename {
            get {
                return ResourceManager.GetString("JavascriptEngine.SystemCall.filename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jump page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpPageCommand {
            get {
                return ResourceManager.GetString("JumpPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   number: int|Page number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpPageCommand_Execute_Remarks {
            get {
                return ResourceManager.GetString("JumpPageCommand.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enter the page number and move. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpPageCommand_Remarks {
            get {
                return ResourceManager.GetString("JumpPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Random page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpRandomPageCommand {
            get {
                return ResourceManager.GetString("JumpRandomPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jump to a random page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpRandomPageCommand_Remarks {
            get {
                return ResourceManager.GetString("JumpRandomPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   English に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Language_English {
            get {
                return ResourceManager.GetString("Language.English", resourceCulture);
            }
        }
        
        /// <summary>
        ///   日本語 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Language_Japanese {
            get {
                return ResourceManager.GetString("Language.Japanese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LastPageCommand {
            get {
                return ResourceManager.GetString("LastPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the last page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LastPageCommand_Remarks {
            get {
                return ResourceManager.GetString("LastPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_Close {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel is floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_IsFloating {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.IsFloating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel is selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_IsSelected {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.IsSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel is visible に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_IsVisible {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_Open {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open panel in docking mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_OpenDock {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.OpenDock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open panel in floating mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_OpenFloat {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.OpenFloat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelMenuClose {
            get {
                return ResourceManager.GetString("LayoutPanelMenuClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Doc_king に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelMenuDocking {
            get {
                return ResourceManager.GetString("LayoutPanelMenuDocking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelMenuFloating {
            get {
                return ResourceManager.GetString("LayoutPanelMenuFloating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Black {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Center {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Max に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Maximum {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Maximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Min に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Minimum {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Minimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_White {
            get {
                return ResourceManager.GetString("LevelEffectUnit.White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand {
            get {
                return ResourceManager.GetString("LoadAsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   path: string|File or folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand_Execute_Remarks {
            get {
                return ResourceManager.GetString("LoadAsCommand.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand_Menu {
            get {
                return ResourceManager.GetString("LoadAsCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select and open the compressed file or image file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand_Remarks {
            get {
                return ResourceManager.GetString("LoadAsCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadingPage_ViewNone {
            get {
                return ResourceManager.GetString("LoadingPage.ViewNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image of previous page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadingPage_ViewPreImage {
            get {
                return ResourceManager.GetString("LoadingPage.ViewPreImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail of previous page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadingPage_ViewPreThumbnail {
            get {
                return ResourceManager.GetString("LoadingPage.ViewPreThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonDownMode_Loupe {
            get {
                return ResourceManager.GetString("LongButtonDownMode.Loupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonDownMode_None {
            get {
                return ResourceManager.GetString("LongButtonDownMode.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Repeat input に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonDownMode_Repeat {
            get {
                return ResourceManager.GetString("LongButtonDownMode.Repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All buttons に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonMask_All {
            get {
                return ResourceManager.GetString("LongButtonMask.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonMask_Left {
            get {
                return ResourceManager.GetString("LongButtonMask.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonMask_Right {
            get {
                return ResourceManager.GetString("LongButtonMask.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe standard magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_DefaultScale {
            get {
                return ResourceManager.GetString("LoupeConfig.DefaultScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the Esc key to release the loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsEscapeKeyEnabled {
            get {
                return ResourceManager.GetString("LoupeConfig.IsEscapeKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   At the start, move the cursor position to the screen center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsLoupeCenter {
            get {
                return ResourceManager.GetString("LoupeConfig.IsLoupeCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Release the loupe after moving the page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsResetByPageChanged {
            get {
                return ResourceManager.GetString("LoupeConfig.IsResetByPageChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start loupe at standard magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsResetByRestart {
            get {
                return ResourceManager.GetString("LoupeConfig.IsResetByRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, the previous magnification will be inherited. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsResetByRestart_Remarks {
            get {
                return ResourceManager.GetString("LoupeConfig.IsResetByRestart.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the magnification of loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsVisibleLoupeInfo {
            get {
                return ResourceManager.GetString("LoupeConfig.IsVisibleLoupeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The magnification will be displayed on the upper right of the screen during loupe. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsVisibleLoupeInfo_Remarks {
            get {
                return ResourceManager.GetString("LoupeConfig.IsVisibleLoupeInfo.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When using a loupe, change the magnifying power by wheel operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsWheelScalingEnabled {
            get {
                return ResourceManager.GetString("LoupeConfig.IsWheelScalingEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Commands to which wheel operation is assigned are invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsWheelScalingEnabled_Remarks {
            get {
                return ResourceManager.GetString("LoupeConfig.IsWheelScalingEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe maximum magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_MaximumScale {
            get {
                return ResourceManager.GetString("LoupeConfig.MaximumScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe minimum magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_MinimumScale {
            get {
                return ResourceManager.GetString("LoupeConfig.MinimumScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe magnification change unit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_ScaleStep {
            get {
                return ResourceManager.GetString("LoupeConfig.ScaleStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe Speed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_Speed {
            get {
                return ResourceManager.GetString("LoupeConfig.Speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOffCommand {
            get {
                return ResourceManager.GetString("LoupeOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Release the loupe mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOffCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeOffCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOnCommand {
            get {
                return ResourceManager.GetString("LoupeOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the loupe mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOnCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeOnCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe zoom out に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleDownCommand {
            get {
                return ResourceManager.GetString("LoupeScaleDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the loupe magnification. It functions only when using a loupe. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleDownCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeScaleDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe zoom in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleUpCommand {
            get {
                return ResourceManager.GetString("LoupeScaleUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expands the magnifying power of the loupe. It functions only when using a loupe. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleUpCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeScaleUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_Amount {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_Center {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Inner radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_InnerRadius {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.InnerRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Outer radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_OuterRadius {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.OuterRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainViewConfig_IsFloating {
            get {
                return ResourceManager.GetString("MainViewConfig.IsFloating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide MainView window title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainViewConfig_IsHideTitleBar {
            get {
                return ResourceManager.GetString("MainViewConfig.IsHideTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView window is topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainViewConfig_IsTopmost {
            get {
                return ResourceManager.GetString("MainViewConfig.IsTopmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mute video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_IsMuted {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.IsMuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video repeat に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_IsRepeat {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.IsRepeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play start delay (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_MediaStartDelaySeconds {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.MediaStartDelaySeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If 0 is specified, the contents may flicker. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_MediaStartDelaySeconds_Remarks {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.MediaStartDelaySeconds.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change time in page movement (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_PageSeconds {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.PageSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Probably what you can play with Windows Media Player is playable. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_SupportFileTypes_Remarks {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.SupportFileTypes.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video volume に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_Volume {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.Volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System manages memory に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MemoryControl_IsAutoGC {
            get {
                return ResourceManager.GetString("MemoryControl.IsAutoGC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When it is OFF, memory is released every time page is switched に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MemoryControl_IsAutoGC_Remarks {
            get {
                return ResourceManager.GetString("MemoryControl.IsAutoGC.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuAutoHideTitleBar {
            get {
                return ResourceManager.GetString("MenuAutoHideTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsAddressBarEnabled {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsAddressBarEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the hamburger menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsHamburgerMenu {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsHamburgerMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide menu automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsHideMenu {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsHideMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the menu when it is auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsHideMenuInAutoHideMode {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsHideMenuInAutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Menu visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsVisible {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_Command {
            get {
                return ResourceManager.GetString("MenuElementType.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Submenu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_Group {
            get {
                return ResourceManager.GetString("MenuElementType.Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recent books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_History {
            get {
                return ResourceManager.GetString("MenuElementType.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_None {
            get {
                return ResourceManager.GetString("MenuElementType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Separator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_Separator {
            get {
                return ResourceManager.GetString("MenuElementType.Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeBookmark {
            get {
                return ResourceManager.GetString("MenuTreeBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Debug に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeDebug {
            get {
                return ResourceManager.GetString("MenuTreeDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeFile {
            get {
                return ResourceManager.GetString("MenuTreeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeHelp {
            get {
                return ResourceManager.GetString("MenuTreeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open from the list of recent books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeHistory {
            get {
                return ResourceManager.GetString("MenuTreeHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeImage {
            get {
                return ResourceManager.GetString("MenuTreeImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Jump に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeJump {
            get {
                return ResourceManager.GetString("MenuTreeJump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Option に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeOption {
            get {
                return ResourceManager.GetString("MenuTreeOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreePage {
            get {
                return ResourceManager.GetString("MenuTreePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _View に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTreeView {
            get {
                return ResourceManager.GetString("MenuTreeView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MonochromeEffectUnit_Color {
            get {
                return ResourceManager.GetString("MonochromeEffectUnit.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move distance to redisplay に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_CursorHideReleaseDistance {
            get {
                return ResourceManager.GetString("MouseConfig.CursorHideReleaseDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_CursorHideTime {
            get {
                return ResourceManager.GetString("MouseConfig.CursorHideTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse gesture stroke (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_GestureMinimumDistance {
            get {
                return ResourceManager.GetString("MouseConfig.GestureMinimumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   By moving this distance, it is judged as a gesture stroke. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_GestureMinimumDistance_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.GestureMinimumDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable auto hide に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsCursorHideEnabled {
            get {
                return ResourceManager.GetString("MouseConfig.IsCursorHideEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Redisplay with mouse button operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsCursorHideReleaseAction {
            get {
                return ResourceManager.GetString("MouseConfig.IsCursorHideReleaseAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use mouse drag に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsDragEnabled {
            get {
                return ResourceManager.GetString("MouseConfig.IsDragEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use mouse gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsGestureEnabled {
            get {
                return ResourceManager.GetString("MouseConfig.IsGestureEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonDownMode {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonDownMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press decision time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonDownTime {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonDownTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is time to be judged to be long pressed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonDownTime_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonDownTime.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonMask {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Repeat interval (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonRepeatTime {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonRepeatTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Repeat time with repeat input. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonRepeatTime_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonRepeatTime.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag starting distance (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_MinimumDragDistance {
            get {
                return ResourceManager.GetString("MouseConfig.MinimumDragDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First moving distance to become a drag or gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_MinimumDragDistance_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.MinimumDragDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragList_Header_Command {
            get {
                return ResourceManager.GetString("MouseDragList.Header.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragList_Header_Drag {
            get {
                return ResourceManager.GetString("MouseDragList.Header.Drag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragList_Reset {
            get {
                return ResourceManager.GetString("MouseDragList.Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse input here に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Input {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_New {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Old に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Old {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse button input in light blue frame.
        ///You can not use right button drag because it is reserved with mouse gesture.  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Remarks {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Title {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Here gesture input
        ///(Hold down the right button while dragging)  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_InputGesture {
            get {
                return ResourceManager.GetString("MouseGestureControl.InputGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_New {
            get {
                return ResourceManager.GetString("MouseGestureControl.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Old に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_Old {
            get {
                return ResourceManager.GetString("MouseGestureControl.Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enter a mouse gesture within a light blue frame.
        ///Mouse gesture is a drag operation while holding down the right mouse button.
        ///A left click can be registered as the last gesture key.  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_Remarks {
            get {
                return ResourceManager.GetString("MouseGestureControl.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include the first and last pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MovePagemarkInBookCommandParameter_IsIncludeTerminal {
            get {
                return ResourceManager.GetString("MovePagemarkInBookCommandParameter.IsIncludeTerminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MovePagemarkInBookCommandParameter_IsLoop {
            get {
                return ResourceManager.GetString("MovePagemarkInBookCommandParameter.IsLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of moved pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveSizePageCommandParameter_Size {
            get {
                return ResourceManager.GetString("MoveSizePageCommandParameter.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to child に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToChildBookCommand {
            get {
                return ResourceManager.GetString("MoveToChildBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When the page is a book, open that book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToChildBookCommand_Remarks {
            get {
                return ResourceManager.GetString("MoveToChildBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to parent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToParentBookCommand {
            get {
                return ResourceManager.GetString("MoveToParentBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the upper hierarchy as a book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToParentBookCommand_Remarks {
            get {
                return ResourceManager.GetString("MoveToParentBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run all pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultiPagePolicy_All {
            get {
                return ResourceManager.GetString("MultiPagePolicy.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute only one page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultiPagePolicy_Once {
            get {
                return ResourceManager.GetString("MultiPagePolicy.Once", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run both pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultiPagePolicy_Twice {
            get {
                return ResourceManager.GetString("MultiPagePolicy.Twice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateAngle {
            get {
                return ResourceManager.GetString("NavigateAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateFlip {
            get {
                return ResourceManager.GetString("NavigateFlip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateFlipHorizontal {
            get {
                return ResourceManager.GetString("NavigateFlipHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateFlipVertical {
            get {
                return ResourceManager.GetString("NavigateFlipVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateIsKeepAngle {
            get {
                return ResourceManager.GetString("NavigateIsKeepAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep flip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateIsKeepFlip {
            get {
                return ResourceManager.GetString("NavigateIsKeepFlip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateIsKeepScale {
            get {
                return ResourceManager.GetString("NavigateIsKeepScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateName {
            get {
                return ResourceManager.GetString("NavigateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateRotateLeft {
            get {
                return ResourceManager.GetString("NavigateRotateLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateRotateRerset {
            get {
                return ResourceManager.GetString("NavigateRotateRerset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateRotateRight {
            get {
                return ResourceManager.GetString("NavigateRotateRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply stretch to rotate button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateRotateStretch {
            get {
                return ResourceManager.GetString("NavigateRotateStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateScale {
            get {
                return ResourceManager.GetString("NavigateScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateScaleDown {
            get {
                return ResourceManager.GetString("NavigateScaleDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateScaleReset {
            get {
                return ResourceManager.GetString("NavigateScaleReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateScaleUp {
            get {
                return ResourceManager.GetString("NavigateScaleUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateStretch {
            get {
                return ResourceManager.GetString("NavigateStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateStretchAllowScaleDown {
            get {
                return ResourceManager.GetString("NavigateStretchAllowScaleDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigateStretchScale {
            get {
                return ResourceManager.GetString("NavigateStretchScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigatorPanelAccessor {
            get {
                return ResourceManager.GetString("NavigatorPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavitageStretchAllowScaleUp {
            get {
                return ResourceManager.GetString("NavitageStretchAllowScaleUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookCommand {
            get {
                return ResourceManager.GetString("NextBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the next book on the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookCommand_Remarks {
            get {
                return ResourceManager.GetString("NextBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookHistoryCommand {
            get {
                return ResourceManager.GetString("NextBookHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a next open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("NextBookHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextFolderPageCommand {
            get {
                return ResourceManager.GetString("NextFolderPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the first page of the next folder of the book. Valid only in name order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextFolderPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextFolderPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryCommand {
            get {
                return ResourceManager.GetString("NextHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the following new history book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("NextHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go next view page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryPageCommand {
            get {
                return ResourceManager.GetString("NextHistoryPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to next view page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextHistoryPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next One に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextOnePageCommand {
            get {
                return ResourceManager.GetString("NextOnePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only one page will move in the next direction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextOnePageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextOnePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPageCommand {
            get {
                return ResourceManager.GetString("NextPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to next page direction. If it is 2 page display, it moves by 2 pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPagemarkCommand {
            get {
                return ResourceManager.GetString("NextPagemarkCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to the next page mark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPagemarkCommand_Remarks {
            get {
                return ResourceManager.GetString("NextPagemarkCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next pagemark in book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPagemarkInBookCommand {
            get {
                return ResourceManager.GetString("NextPagemarkInBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the next page mark in the current book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPagemarkInBookCommand_Remarks {
            get {
                return ResourceManager.GetString("NextPagemarkInBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll + Next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextScrollPageCommand {
            get {
                return ResourceManager.GetString("NextScrollPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Scrolls the image in the next direction. If it is not possible to scroll, it will move to the next page. When using a loupe, only move pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextScrollPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextScrollPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next num に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextSizePageCommand {
            get {
                return ResourceManager.GetString("NextSizePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the next direction by the set number of pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextSizePageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextSizePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (none) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoneCommand {
            get {
                return ResourceManager.GetString("NoneCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show open book name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_BookNameShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.BookNameShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show command execution message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_CommandShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.CommandShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show gesture status に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_GestureShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.GestureShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The image reading processing in progress mark is displayed on the upper left of the screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsBusyMarkEnabled {
            get {
                return ResourceManager.GetString("NoticeConfig.IsBusyMarkEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show message when there are no pages in the book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsEmptyMessageEnabled {
            get {
                return ResourceManager.GetString("NoticeConfig.IsEmptyMessageEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the scale display of the view operation the original image size standard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsOriginalScaleShowMessage {
            get {
                return ResourceManager.GetString("NoticeConfig.IsOriginalScaleShowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In case of 2 page display, we refer to the page with the younger number. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsOriginalScaleShowMessage_Remarks {
            get {
                return ResourceManager.GetString("NoticeConfig.IsOriginalScaleShowMessage.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_NoticeShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.NoticeShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show Now Loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_NowLoadingShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.NowLoadingShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sbow status change by drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_ViewTransformShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.ViewTransformShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No next book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyBookNextFailed {
            get {
                return ResourceManager.GetString("NotifyBookNextFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looped. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyBookOperationPageLoop {
            get {
                return ResourceManager.GetString("NotifyBookOperationPageLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No previous book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyBookPrevFailed {
            get {
                return ResourceManager.GetString("NotifyBookPrevFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder not found. ({0})
        ///Initialize the cache location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyCacheErrorDirectoryNotFound {
            get {
                return ResourceManager.GetString("NotifyCacheErrorDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyCacheErrorTitle {
            get {
                return ResourceManager.GetString("NotifyCacheErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyCannotDisplay {
            get {
                return ResourceManager.GetString("NotifyCannotDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cannot open {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyCannotOpen {
            get {
                return ResourceManager.GetString("NotifyCannotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is a bookmark folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyCannotOpenBookmarkFolder {
            get {
                return ResourceManager.GetString("NotifyCannotOpenBookmarkFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Conflicting with {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyConflict {
            get {
                return ResourceManager.GetString("NotifyConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &quot;{0}&quot; conflicts with {1} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyConflictWith {
            get {
                return ResourceManager.GetString("NotifyConflictWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load content に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyContentFailed {
            get {
                return ResourceManager.GetString("NotifyContentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dropped content に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyDropContent {
            get {
                return ResourceManager.GetString("NotifyDropContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyFirstFolderPage {
            get {
                return ResourceManager.GetString("NotifyFirstFolderPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyFirstPage {
            get {
                return ResourceManager.GetString("NotifyFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no pagemark before the current page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyFirstPagemark {
            get {
                return ResourceManager.GetString("NotifyFirstPagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyFlipHorizontal {
            get {
                return ResourceManager.GetString("NotifyFlipHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyFlipVertical {
            get {
                return ResourceManager.GetString("NotifyFlipVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In order to display the HEIF image it is necessary to install the additional codec &quot;HEIF Image Extensions&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyHeifHelp {
            get {
                return ResourceManager.GetString("NotifyHeifHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is the latest history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyHistoryLastest {
            get {
                return ResourceManager.GetString("NotifyHistoryLastest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no history older than this に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyHistoryTerminal {
            get {
                return ResourceManager.GetString("NotifyHistoryTerminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The following characters can not be used in the file name:
        ///\ / : * ? &quot; &lt; &gt; | に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyInvalidFileNameChars {
            get {
                return ResourceManager.GetString("NotifyInvalidFileNameChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page number ({0} - {1}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyJumpPageLabel {
            get {
                return ResourceManager.GetString("NotifyJumpPageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLastFolderPage {
            get {
                return ResourceManager.GetString("NotifyLastFolderPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLastPage {
            get {
                return ResourceManager.GetString("NotifyLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no pagemark after the current page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLastPagemark {
            get {
                return ResourceManager.GetString("NotifyLastPagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load bookmark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadBookmarkFailed {
            get {
                return ResourceManager.GetString("NotifyLoadBookmarkFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadBookmarkFailedTitle {
            get {
                return ResourceManager.GetString("NotifyLoadBookmarkFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadHistoryFailed {
            get {
                return ResourceManager.GetString("NotifyLoadHistoryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadHistoryFailedTitle {
            get {
                return ResourceManager.GetString("NotifyLoadHistoryFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (Loading...) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadingTitle {
            get {
                return ResourceManager.GetString("NotifyLoadingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load pagemark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadPagemarkFailed {
            get {
                return ResourceManager.GetString("NotifyLoadPagemarkFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadPagemarkFailedTitle {
            get {
                return ResourceManager.GetString("NotifyLoadPagemarkFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadSettingFailed {
            get {
                return ResourceManager.GetString("NotifyLoadSettingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quit app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadSettingFailedButtonQuit {
            get {
                return ResourceManager.GetString("NotifyLoadSettingFailedButtonQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyLoadSettingFailedTitle {
            get {
                return ResourceManager.GetString("NotifyLoadSettingFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyNoFiles {
            get {
                return ResourceManager.GetString("NotifyNoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} has no pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyNoPages {
            get {
                return ResourceManager.GetString("NotifyNoPages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Not supported file type: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyNotSupportedFileType {
            get {
                return ResourceManager.GetString("NotifyNotSupportedFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to output the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyOutputFailed {
            get {
                return ResourceManager.GetString("NotifyOutputFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No next pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyPagemarkNextFailed {
            get {
                return ResourceManager.GetString("NotifyPagemarkNextFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No previous pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyPagemarkPrevFailed {
            get {
                return ResourceManager.GetString("NotifyPagemarkPrevFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyPlayFailed {
            get {
                return ResourceManager.GetString("NotifyPlayFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} pagemarks deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyRemoveUnlinkedPagemark {
            get {
                return ResourceManager.GetString("NotifyRemoveUnlinkedPagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Illegal date-time format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifySearchKeywordDateTimeError {
            get {
                return ResourceManager.GetString("NotifySearchKeywordDateTimeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Illegal option: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifySearchKeywordOptionError {
            get {
                return ResourceManager.GetString("NotifySearchKeywordOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder not found. ({0})
        ///Initialize the temporary location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyTemporaryErrorDirectoryNotFound {
            get {
                return ResourceManager.GetString("NotifyTemporaryErrorDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotifyTemporaryErrorTitle {
            get {
                return ResourceManager.GetString("NotifyTemporaryErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open script console に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenConsoleCommand {
            get {
                return ResourceManager.GetString("OpenConsoleCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open script _console... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenConsoleCommand_Menu {
            get {
                return ResourceManager.GetString("OpenConsoleCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the script console. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenConsoleCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenConsoleCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open context menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenContextMenuCommand {
            get {
                return ResourceManager.GetString("OpenContextMenuCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the context menu. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenContextMenuCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenContextMenuCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in explorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExplorerCommand {
            get {
                return ResourceManager.GetString("OpenExplorerCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the file of the page you are viewing in Explorer. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExplorerCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenExplorerCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommand {
            get {
                return ResourceManager.GetString("OpenExternalAppCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the displayed image with an external application.  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenExternalAppCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file policy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_ArchivePolicy {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.ArchivePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Command {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If not specified, launch the application associated with the extension. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Command_Remarks {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Command.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_MultiPagePolicy {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.MultiPagePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Parameter {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   $File will be replaced with the file path. $Uri is replaced with the URI escaped file path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Parameter_Remarks {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Parameter.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open options window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenOptionsWindowCommand {
            get {
                return ResourceManager.GetString("OpenOptionsWindowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Options... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenOptionsWindowCommand_Menu {
            get {
                return ResourceManager.GetString("OpenOptionsWindowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the options window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenOptionsWindowCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenOptionsWindowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open scripts folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenScriptsFolderCommand {
            get {
                return ResourceManager.GetString("OpenScriptsFolderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the scripts folder with Explorer. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenScriptsFolderCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenScriptsFolderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open setting folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenSettingFilesFolderCommand {
            get {
                return ResourceManager.GetString("OpenSettingFilesFolderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the folder where the configuration file setting file is saved. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenSettingFilesFolderCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenSettingFilesFolderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display version information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenVersionWindowCommand {
            get {
                return ResourceManager.GetString("OpenVersionWindowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _About... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenVersionWindowCommand_Menu {
            get {
                return ResourceManager.GetString("OpenVersionWindowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display version information. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenVersionWindowCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenVersionWindowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is an unsupported argument type. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionErrorArgument {
            get {
                return ResourceManager.GetString("OptionErrorArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An argument is required for {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionErrorArgumentEmpty {
            get {
                return ResourceManager.GetString("OptionErrorArgumentEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can not use {1} as an argument to {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionErrorArgumentFailed {
            get {
                return ResourceManager.GetString("OptionErrorArgumentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is an unknown option. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionErrorArgumentUnknown {
            get {
                return ResourceManager.GetString("OptionErrorArgumentUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specified configuration file does not exist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionErrorFileNotFound {
            get {
                return ResourceManager.GetString("OptionErrorFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the bookshelf location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionFolderList {
            get {
                return ResourceManager.GetString("OptionFolderList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start up without opening the image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionIsBlank {
            get {
                return ResourceManager.GetString("OptionIsBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify whether to start with full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionIsFullScreen {
            get {
                return ResourceManager.GetString("OptionIsFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This help is displayed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionIsHelp {
            get {
                return ResourceManager.GetString("OptionIsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify whether to start in a new window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionIsNewWindow {
            get {
                return ResourceManager.GetString("OptionIsNewWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionIsResetPlacement {
            get {
                return ResourceManager.GetString("OptionIsResetPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify whether to start a slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionIsSlideShow {
            get {
                return ResourceManager.GetString("OptionIsSlideShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display version information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionIsVersion {
            get {
                return ResourceManager.GetString("OptionIsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Executes the specified script file at startup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionScriptFile {
            get {
                return ResourceManager.GetString("OptionScriptFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the path of the setting file (UserSetting.json) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionSettingFilename {
            get {
                return ResourceManager.GetString("OptionSettingFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Indicates the end of option list. Subsequent arguments are considered file names. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionTerminater {
            get {
                return ResourceManager.GetString("OptionTerminater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start with the specified window state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionWindowState {
            get {
                return ResourceManager.GetString("OptionWindowState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor {
            get {
                return ResourceManager.GetString("PageAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Display the first page name with toast
        ///nv.ShowToast(nv.Book.Pages[0].Path) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_Example {
            get {
                return ResourceManager.GetString("PageAccessor.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last write time of the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_LastWriteTime {
            get {
                return ResourceManager.GetString("PageAccessor.LastWriteTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_Path {
            get {
                return ResourceManager.GetString("PageAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File size (Byte) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_Size {
            get {
                return ResourceManager.GetString("PageAccessor.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select in dialog に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_Dialog {
            get {
                return ResourceManager.GetString("PageEndAction.Dialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_Loop {
            get {
                return ResourceManager.GetString("PageEndAction.Loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to next book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_NextBook {
            get {
                return ResourceManager.GetString("PageEndAction.NextBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_None {
            get {
                return ResourceManager.GetString("PageEndAction.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Back (Alt+Left) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Back_ToolTip {
            get {
                return ResourceManager.GetString("PageList.Back.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_CopyToFolderFailed {
            get {
                return ResourceManager.GetString("PageList.CopyToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Message_MoveToFolderFailed {
            get {
                return ResourceManager.GetString("PageList.Message.MoveToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next (Alt+Right) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Next_ToolTip {
            get {
                return ResourceManager.GetString("PageList.Next.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up (Alt+Up) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Up_ToolTip {
            get {
                return ResourceManager.GetString("PageList.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page name display format of page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListConfig_Format {
            get {
                return ResourceManager.GetString("PageListConfig.Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page list item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("PageListConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cop_y to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_CopyToFolder {
            get {
                return ResourceManager.GetString("PageListItem.Menu.CopyToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in e_xplorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_Explorer {
            get {
                return ResourceManager.GetString("PageListItem.Menu.Explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mov_e to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_MoveToFolder {
            get {
                return ResourceManager.GetString("PageListItem.Menu.MoveToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItemMenuCopy {
            get {
                return ResourceManager.GetString("PageListItemMenuCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItemMenuDelete {
            get {
                return ResourceManager.GetString("PageListItemMenuDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagelistItemMenuOpen {
            get {
                return ResourceManager.GetString("PagelistItemMenuOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagelistItemMenuOpenBook {
            get {
                return ResourceManager.GetString("PagelistItemMenuOpenBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListName {
            get {
                return ResourceManager.GetString("PageListName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor {
            get {
                return ResourceManager.GetString("PageListPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Format {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Items {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current book path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Path {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page sort mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_SortMode {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item stye に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Style {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save pagemark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkConfig_IsSavePagemark {
            get {
                return ResourceManager.GetString("PagemarkConfig.IsSavePagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark list file location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkConfig_PagemarkFilePath {
            get {
                return ResourceManager.GetString("PagemarkConfig.PagemarkFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkConfig_PagemarkOrder {
            get {
                return ResourceManager.GetString("PagemarkConfig.PagemarkOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark list item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("PagemarkConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemAccessor {
            get {
                return ResourceManager.GetString("PagemarkItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item is expanded に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemAccessor_IsExpanded {
            get {
                return ResourceManager.GetString("PagemarkItemAccessor.IsExpanded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemAccessor_Name {
            get {
                return ResourceManager.GetString("PagemarkItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemAccessor_Path {
            get {
                return ResourceManager.GetString("PagemarkItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemAccessor_Type {
            get {
                return ResourceManager.GetString("PagemarkItemAccessor.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Remove pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemMenuDelete {
            get {
                return ResourceManager.GetString("PagemarkItemMenuDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemMenuDeleteFolder {
            get {
                return ResourceManager.GetString("PagemarkItemMenuDeleteFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemMenuOpen {
            get {
                return ResourceManager.GetString("PagemarkItemMenuOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rena_me に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkItemMenuRename {
            get {
                return ResourceManager.GetString("PagemarkItemMenuRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkListAddTips {
            get {
                return ResourceManager.GetString("PagemarkListAddTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current book only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkMenuCurrentBook {
            get {
                return ResourceManager.GetString("PagemarkMenuCurrentBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove invalid pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkMenuDeleteInvalid {
            get {
                return ResourceManager.GetString("PagemarkMenuDeleteInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open as a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkMenuOpenAsBook {
            get {
                return ResourceManager.GetString("PagemarkMenuOpenAsBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkMenuSortPath {
            get {
                return ResourceManager.GetString("PagemarkMenuSortPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkName {
            get {
                return ResourceManager.GetString("PagemarkName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkPanelAccessor {
            get {
                return ResourceManager.GetString("PagemarkPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkPanelAccessor_Items {
            get {
                return ResourceManager.GetString("PagemarkPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("PagemarkPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item stye に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PagemarkPanelAccessor_Style {
            get {
                return ResourceManager.GetString("PagemarkPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   One page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageMode_SinglePage {
            get {
                return ResourceManager.GetString("PageMode.SinglePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageMode_WidePage {
            get {
                return ResourceManager.GetString("PageMode.WidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name format in PageList に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat {
            get {
                return ResourceManager.GetString("PageNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat_NameOnly {
            get {
                return ResourceManager.GetString("PageNameFormat.NameOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Raw に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat_Raw {
            get {
                return ResourceManager.GetString("PageNameFormat.Raw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Smart に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat_Smart {
            get {
                return ResourceManager.GetString("PageNameFormat.Smart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageOperation_Landscape {
            get {
                return ResourceManager.GetString("PageOperation_Landscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Portrait に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageOperation_Portrait {
            get {
                return ResourceManager.GetString("PageOperation_Portrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page read order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageReadOrder {
            get {
                return ResourceManager.GetString("PageReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left to right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageReadOrder_LeftToRight {
            get {
                return ResourceManager.GetString("PageReadOrder.LeftToRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right to left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageReadOrder_RightToLeft {
            get {
                return ResourceManager.GetString("PageReadOrder.RightToLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page sort mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode {
            get {
                return ResourceManager.GetString("PageSortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_FileName {
            get {
                return ResourceManager.GetString("PageSortMode.FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_FileNameDescending {
            get {
                return ResourceManager.GetString("PageSortMode.FileNameDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_Random {
            get {
                return ResourceManager.GetString("PageSortMode.Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_Size {
            get {
                return ResourceManager.GetString("PageSortMode.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_SizeDescending {
            get {
                return ResourceManager.GetString("PageSortMode.SizeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_TimeStamp {
            get {
                return ResourceManager.GetString("PageSortMode.TimeStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_TimeStampDescending {
            get {
                return ResourceManager.GetString("PageSortMode.TimeStampDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_None {
            get {
                return ResourceManager.GetString("PageStretchMode.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_Uniform {
            get {
                return ResourceManager.GetString("PageStretchMode.Uniform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extend it to fill the window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToFill {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit width to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToHorizontal {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit the area size to the window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToSize {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit height to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToVertical {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save page view recods に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageViewRecorderConfig_IsSavePageViewRecord {
            get {
                return ResourceManager.GetString("PageViewRecorderConfig.IsSavePageViewRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view recording path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageViewRecorderConfig_PageViewRecordFilePath {
            get {
                return ResourceManager.GetString("PageViewRecorderConfig.PageViewRecordFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_Banner {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.Banner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book shape に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_BookShape {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.BookShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_Original {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Square に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_Square {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.Square", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shape of Icon に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_ImageShape {
            get {
                return ResourceManager.GetString("PanelListItemProfile.ImageShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_ImageWidth {
            get {
                return ResourceManager.GetString("PanelListItemProfile.ImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The width of the icon image. If the thumbnail image resolution is exceeded, the image will be grainy. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_ImageWidth_Remarks {
            get {
                return ResourceManager.GetString("PanelListItemProfile.ImageWidth.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon popup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsImagePopupEnabled {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsImagePopupEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When placing the cursor on the icon, a large image will be displayed in the popup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsImagePopupEnabled_Remarks {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsImagePopupEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsTextVisible {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsTextVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wrap name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsTextWrapped {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsTextWrapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Supplemental text opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_NoteOpacity {
            get {
                return ResourceManager.GetString("PanelListItemProfile.NoteOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemStyle {
            get {
                return ResourceManager.GetString("PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font size of folder tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_FolderTreeFontSize {
            get {
                return ResourceManager.GetString("PanelsConfig.FolderTreeFontSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_FontName {
            get {
                return ResourceManager.GetString("PanelsConfig.FontName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font size of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_FontSize {
            get {
                return ResourceManager.GetString("PanelsConfig.FontSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Format path display of supplemental text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsDecoratePlace {
            get {
                return ResourceManager.GetString("PanelsConfig.IsDecoratePlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Format as &quot;AAA (C:\BBB\CCC)&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsDecoratePlace_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.IsDecoratePlace.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide side panels automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsHidePanel {
            get {
                return ResourceManager.GetString("PanelsConfig.IsHidePanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the side panel when it is auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsHidePanelInAutoHideMode {
            get {
                return ResourceManager.GetString("PanelsConfig.IsHidePanelInAutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The left and right key input of the side panel is valid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsLeftRightKeyEnabled {
            get {
                return ResourceManager.GetString("PanelsConfig.IsLeftRightKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Activate left / right key operation on the side panel. In the bookshelf, move the folder hierarchically. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsLeftRightKeyEnabled_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.IsLeftRightKeyEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch scroll termination bound on side panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsManipulationBoundaryFeedbackEnabled {
            get {
                return ResourceManager.GetString("PanelsConfig.IsManipulationBoundaryFeedbackEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsSideBarEnabled {
            get {
                return ResourceManager.GetString("PanelsConfig.IsSideBarEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse wheel scroll speed rate in thumbnail view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_MouseWheelSpeedRate {
            get {
                return ResourceManager.GetString("PanelsConfig.MouseWheelSpeedRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_Opacity {
            get {
                return ResourceManager.GetString("PanelsConfig.Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is effective in auto-hide mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_Opacity_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.Opacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Double click to open book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_OpenWithDoubleClick {
            get {
                return ResourceManager.GetString("PanelsConfig.OpenWithDoubleClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effective on bookshelf, bookmark panel, and history panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_OpenWithDoubleClick_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.OpenWithDoubleClick.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamBookshelfPageListVisible {
            get {
                return ResourceManager.GetString("ParamBookshelfPageListVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCacheDirectory {
            get {
                return ResourceManager.GetString("ParamCacheDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the storage location of the thumbnail cache (Cache.db). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCacheDirectoryTips {
            get {
                return ResourceManager.GetString("ParamCacheDirectoryTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delimiter between compressed file and filename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamClipboardArchiveSeparater {
            get {
                return ResourceManager.GetString("ParamClipboardArchiveSeparater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the setting when &quot;@CopyFileCommandParameter.ArchivePolicy&quot; is &quot;@ArchivePolicy.SendArchivePath&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamClipboardArchiveSeparaterTips {
            get {
                return ResourceManager.GetString("ParamClipboardArchiveSeparaterTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Smooth scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCommandParameterScrollPageAnimation {
            get {
                return ResourceManager.GetString("ParamCommandParameterScrollPageAnimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll stop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCommandParameterScrollPageStop {
            get {
                return ResourceManager.GetString("ParamCommandParameterScrollPageStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When it is executed continuously for a short time, it does not move the page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCommandParameterScrollPageStopTips {
            get {
                return ResourceManager.GetString("ParamCommandParameterScrollPageStopTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter sharing に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCommandParameterShare {
            get {
                return ResourceManager.GetString("ParamCommandParameterShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Get focus when displaying panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCommandParameterThumbnailListFocus {
            get {
                return ResourceManager.GetString("ParamCommandParameterThumbnailListFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameters to share with &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCommandShare {
            get {
                return ResourceManager.GetString("ParamCommandShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remember previously saved folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamExportImageIsEnableExportFolder {
            get {
                return ResourceManager.GetString("ParamExportImageIsEnableExportFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamExportImageQualityLevel {
            get {
                return ResourceManager.GetString("ParamExportImageQualityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used only when conversion is required. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamExportImageQualityLevelTips {
            get {
                return ResourceManager.GetString("ParamExportImageQualityLevelTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delimiter between compressed file and filename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamExternalArchiveSeparater {
            get {
                return ResourceManager.GetString("ParamExternalArchiveSeparater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the setting when &quot;@ParamExternalArchiveOption&quot; is &quot;@EnumArchiveOptionTypeSendArchivePath&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamExternalArchiveSeparaterTips {
            get {
                return ResourceManager.GetString("ParamExternalArchiveSeparaterTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Program Type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamExternalProgramType {
            get {
                return ResourceManager.GetString("ParamExternalProgramType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Protocol に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamExternalProtocol {
            get {
                return ResourceManager.GetString("ParamExternalProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use EXIF ​​date and time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFileInformationIsUseExifDateTime {
            get {
                return ResourceManager.GetString("ParamFileInformationIsUseExifDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is limited to display on the information panel. It does not affect sorting by date. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFileInformationIsUseExifDateTimeTips {
            get {
                return ResourceManager.GetString("ParamFileInformationIsUseExifDateTimeTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image shape に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamItemProfileImageShape {
            get {
                return ResourceManager.GetString("ParamItemProfileImageShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamItemProfileImageWidth {
            get {
                return ResourceManager.GetString("ParamItemProfileImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable image popup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamItemProfileIsImagePopupEnabled {
            get {
                return ResourceManager.GetString("ParamItemProfileIsImagePopupEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Note opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamItemProfileIsNoteOpacity {
            get {
                return ResourceManager.GetString("ParamItemProfileIsNoteOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamItemProfileIsTextVisibled {
            get {
                return ResourceManager.GetString("ParamItemProfileIsTextVisibled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable text wrapped に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamItemProfileIsTextWrapped {
            get {
                return ResourceManager.GetString("ParamItemProfileIsTextWrapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemBannerImageWidth {
            get {
                return ResourceManager.GetString("ParamListItemBannerImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The width of the image in banner style. The vertical width is 1/4 of the horizontal width. If the thumbnail image resolution is exceeded, the image will be grainy. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemBannerImageWidthTips {
            get {
                return ResourceManager.GetString("ParamListItemBannerImageWidthTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wrap name in banner style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemBannerIsTextWrapped {
            get {
                return ResourceManager.GetString("ParamListItemBannerIsTextWrapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon popup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentImagePopup {
            get {
                return ResourceManager.GetString("ParamListItemContentImagePopup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When placing the cursor on the icon, a large image will be displayed in the popup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentImagePopupTips {
            get {
                return ResourceManager.GetString("ParamListItemContentImagePopupTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shape of Icon に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentImageShape {
            get {
                return ResourceManager.GetString("ParamListItemContentImageShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentImageWidth {
            get {
                return ResourceManager.GetString("ParamListItemContentImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The width of the image in content style. If the thumbnail image resolution is exceeded, the image will be grainy. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentImageWidthTips {
            get {
                return ResourceManager.GetString("ParamListItemContentImageWidthTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wrap name in content style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentIsTextWrapped {
            get {
                return ResourceManager.GetString("ParamListItemContentIsTextWrapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Supplemental text transparency in content style. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentNoteOpacity {
            get {
                return ResourceManager.GetString("ParamListItemContentNoteOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transparency of supplemental text in content style. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemContentNoteOpacityTips {
            get {
                return ResourceManager.GetString("ParamListItemContentNoteOpacityTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shape of thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemThumbnailImageShape {
            get {
                return ResourceManager.GetString("ParamListItemThumbnailImageShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemThumbnailImageWidth {
            get {
                return ResourceManager.GetString("ParamListItemThumbnailImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The width of the image in thumbnail style. If the thumbnail image resolution is exceeded, the image will be grainy. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemThumbnailImageWidthTips {
            get {
                return ResourceManager.GetString("ParamListItemThumbnailImageWidthTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wrap name in thumbnail style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemThumbnailIsTextWrapped {
            get {
                return ResourceManager.GetString("ParamListItemThumbnailIsTextWrapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the name when thumbnail style. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemThumbnailNameVisibled {
            get {
                return ResourceManager.GetString("ParamListItemThumbnailNameVisibled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamNavigateAutoRotate {
            get {
                return ResourceManager.GetString("ParamNavigateAutoRotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamNavigateIsFlipHorizontal {
            get {
                return ResourceManager.GetString("ParamNavigateIsFlipHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamNavigateIsFlipVertical {
            get {
                return ResourceManager.GetString("ParamNavigateIsFlipVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Place page list on bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamPageListPlacementInBookshelf {
            get {
                return ResourceManager.GetString("ParamPageListPlacementInBookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When turned OFF, it becomes a side panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamPageListPlacementInBookshelfTips {
            get {
                return ResourceManager.GetString("ParamPageListPlacementInBookshelfTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use SIMD for resize filtering に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamPictureProfileIsMagicScaleSimdEnabled {
            get {
                return ResourceManager.GetString("ParamPictureProfileIsMagicScaleSimdEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pre Extract に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverIsPreExtract {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverIsPreExtract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache the plugin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusieIsPluginCacheEnabled {
            get {
                return ResourceManager.GetString("ParamSusieIsPluginCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If it is unstable, it may stabilize when it is OFF. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusieIsPluginCacheEnabledTips {
            get {
                return ResourceManager.GetString("ParamSusieIsPluginCacheEnabledTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache plugin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusiePluginIsCacheEnabled {
            get {
                return ResourceManager.GetString("ParamSusiePluginIsCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusiePluginIsEnabled {
            get {
                return ResourceManager.GetString("ParamSusiePluginIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pre extract に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusiePluginIsPreExtract {
            get {
                return ResourceManager.GetString("ParamSusiePluginIsPreExtract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable touch operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamTouchIsEnabled {
            get {
                return ResourceManager.GetString("ParamTouchIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window frame with title bar hidden に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamWindowChromeFrame {
            get {
                return ResourceManager.GetString("ParamWindowChromeFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do not cover the task bar area at full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamWindowShapeIsFullScreenWithTaskBar {
            get {
                return ResourceManager.GetString("ParamWindowShapeIsFullScreenWithTaskBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParmViewForceAutoRotate {
            get {
                return ResourceManager.GetString("ParmViewForceAutoRotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Paste に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PasteCommand {
            get {
                return ResourceManager.GetString("PasteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Paste に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PasteCommand_Menu {
            get {
                return ResourceManager.GetString("PasteCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Paste clipboard files and images. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PasteCommand_Remarks {
            get {
                return ResourceManager.GetString("PasteCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF page standard size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_RenderSize {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.RenderSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normally we will render according to the display size, but the lower limit will be this standard size. If it becomes smaller, it is reduced and displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_RenderSize_Remarks {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.RenderSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book cache memory size (MB) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_CacheMemorySize {
            get {
                return ResourceManager.GetString("PerformanceConfig.CacheMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Once the page has been read, it is stored in memory to speed up redisplay. This value is a guideline, and memory may be used beyond this value. Note that too large a value can make the system unstable. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_CacheMemorySize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.CacheMemorySize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load image size limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLimitSourceSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLimitSourceSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the imported image with &quot;@PerformanceConfig.MaximumSize&quot; as the upper limit. It is setting for speed and memory saving. When this restriction is applied, &quot;*&quot; will be displayed in the size field of the information if it is the loaded image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLimitSourceSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLimitSourceSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the current page until the next page loads に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLoadingPageVisible {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLoadingPageVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can save memory by turning it off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLoadingPageVisible_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLoadingPageVisible.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In the case of a solid compressed file, expand it in memory in advance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsPreExtractToMemory {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsPreExtractToMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It speeds up by expanding not in temporary files but in memory. The memory consumed is secured separately from the book cache memory. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsPreExtractToMemory_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsPreExtractToMemory.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of threads used for image loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_JobWorkerSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.JobWorkerSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The recommended value is 2 to 4 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_JobWorkerSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.JobWorkerSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximum image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_MaximumSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.MaximumSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the maximum image size enlarged by the resize filter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_MaximumSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.MaximumSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximum solid compressed file extraction size to be extracted in advance (MB) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreExtractSolidSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreExtractSolidSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed files exceeding this extraction size will not be pre-extracted. Set 0 to prohibit all pre-extraction.
        ///The Susie archive does not determine this size, but only pre-extraction in the plug-in settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreExtractSolidSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreExtractSolidSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Read ahead page size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreLoadSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreLoadSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Read ahead within the cache memory size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreLoadSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreLoadSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image file extensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PictureProfile_SupportFileTypes {
            get {
                return ResourceManager.GetString("PictureProfile.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pixelation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PixelateEffectUnit_Pixelation {
            get {
                return ResourceManager.GetString("PixelateEffectUnit.Pixelation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookCommand {
            get {
                return ResourceManager.GetString("PrevBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the previous book on the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go back に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookHistoryCommand {
            get {
                return ResourceManager.GetString("PrevBookHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a previously open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevBookHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevFolderPageCommand {
            get {
                return ResourceManager.GetString("PrevFolderPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the first page of the previous folder of the book. Valid only in name order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevFolderPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevFolderPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryCommand {
            get {
                return ResourceManager.GetString("PrevHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the previous old history book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go back view page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryPageCommand {
            get {
                return ResourceManager.GetString("PrevHistoryPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to previously view page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevHistoryPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev One に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevOnePageCommand {
            get {
                return ResourceManager.GetString("PrevOnePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move forward one page only. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevOnePageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevOnePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPageCommand {
            get {
                return ResourceManager.GetString("PrevPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the front of the page. If it is 2 page display, it moves by 2 pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPagemarkCommand {
            get {
                return ResourceManager.GetString("PrevPagemarkCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to the previous page mark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPagemarkCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevPagemarkCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev pagemark in book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPagemarkInBookCommand {
            get {
                return ResourceManager.GetString("PrevPagemarkInBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the previous page mark in the current book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPagemarkInBookCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevPagemarkInBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll + Prev に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevScrollPageCommand {
            get {
                return ResourceManager.GetString("PrevScrollPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll the image forward in the page. If it is not possible to scroll, it will move to the previous page. When using a loupe, only move pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevScrollPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevScrollPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev num に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevSizePageCommand {
            get {
                return ResourceManager.GetString("PrevSizePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It moves forward by the set number of pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevSizePageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevSizePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintCommand {
            get {
                return ResourceManager.GetString("PrintCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Print... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintCommand_Menu {
            get {
                return ResourceManager.GetString("PrintCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintCommand_Remarks {
            get {
                return ResourceManager.GetString("PrintCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_RawImage {
            get {
                return ResourceManager.GetString("PrintMode.RawImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_View {
            get {
                return ResourceManager.GetString("PrintMode.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View with paper size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_ViewFill {
            get {
                return ResourceManager.GetString("PrintMode.ViewFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View all に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_ViewStretch {
            get {
                return ResourceManager.GetString("PrintMode.ViewStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Background {
            get {
                return ResourceManager.GetString("PrintWindow.Background", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_ButtonPrint {
            get {
                return ResourceManager.GetString("PrintWindow.ButtonPrint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Column に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Column {
            get {
                return ResourceManager.GetString("PrintWindow.Column", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Content に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Content {
            get {
                return ResourceManager.GetString("PrintWindow.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Horizontal alignment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Horizontal {
            get {
                return ResourceManager.GetString("PrintWindow.Horizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_KeepDot {
            get {
                return ResourceManager.GetString("PrintWindow.KeepDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Margin (mm) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Margin {
            get {
                return ResourceManager.GetString("PrintWindow.Margin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Orientation {
            get {
                return ResourceManager.GetString("PrintWindow.Orientation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Printer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Printer {
            get {
                return ResourceManager.GetString("PrintWindow.Printer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Row に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Row {
            get {
                return ResourceManager.GetString("PrintWindow.Row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of sheets に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Sheets {
            get {
                return ResourceManager.GetString("PrintWindow.Sheets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Title {
            get {
                return ResourceManager.GetString("PrintWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vertical alignment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Vertival {
            get {
                return ResourceManager.GetString("PrintWindow.Vertival", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_Bookmark {
            get {
                return ResourceManager.GetString("QueryScheme.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PC に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_File {
            get {
                return ResourceManager.GetString("QueryScheme.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_Pagemark {
            get {
                return ResourceManager.GetString("QueryScheme.Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_QuickAccess {
            get {
                return ResourceManager.GetString("QueryScheme.QuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_Root {
            get {
                return ResourceManager.GetString("QueryScheme.Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Random Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RandomBookCommand {
            get {
                return ResourceManager.GetString("RandomBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the random book on the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RandomBookCommand_Remarks {
            get {
                return ResourceManager.GetString("RandomBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReLoadCommand {
            get {
                return ResourceManager.GetString("ReLoadCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload the book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReLoadCommand_Remarks {
            get {
                return ResourceManager.GetString("ReLoadCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReloadSettingCommand {
            get {
                return ResourceManager.GetString("ReloadSettingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload the settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReloadSettingCommand_Remarks {
            get {
                return ResourceManager.GetString("ReloadSettingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select only one command to execute with &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ResolveConflictDialog_Message {
            get {
                return ResourceManager.GetString("ResolveConflictDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Conflict resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ResolveConflictDialog_Title {
            get {
                return ResourceManager.GetString("ResolveConflictDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable operation swap by slider direction に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReversibleCommandParameter_IsReverse {
            get {
                return ResourceManager.GetString("ReversibleCommandParameter.IsReverse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allows the operation replacement by changing the slider direction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReversibleCommandParameter_IsReverse_Remarks {
            get {
                return ResourceManager.GetString("ReversibleCommandParameter.IsReverse.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Center {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Frequency に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Frequency {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Frequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Magnitude に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Magnitude {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Magnitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Phase に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Phase {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Phase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SaveSettingCommand {
            get {
                return ResourceManager.GetString("SaveSettingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Performs saving the current settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SaveSettingCommand_Remarks {
            get {
                return ResourceManager.GetString("SaveSettingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptCommand {
            get {
                return ResourceManager.GetString("ScriptCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptCommand_Remarks {
            get {
                return ResourceManager.GetString("ScriptCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_IsScriptFolderEnabled {
            get {
                return ResourceManager.GetString("ScriptConfig.IsScriptFolderEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scripts folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_ScriptFolder {
            get {
                return ResourceManager.GetString("ScriptConfig.ScriptFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the scripts in this folder. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_ScriptFolder_Remarks {
            get {
                return ResourceManager.GetString("ScriptConfig.ScriptFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scrpit. Executes when the book is opened. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptOnBookLoadedCommand_Remarks {
            get {
                return ResourceManager.GetString("ScriptOnBookLoadedCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script reference に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptReference {
            get {
                return ResourceManager.GetString("ScriptReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This section explains how to use NeeView-specific commands. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptReference_Summary {
            get {
                return ResourceManager.GetString("ScriptReference.Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   N-type scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_IsNScroll {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.IsNScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If vertically scrollable, scroll vertically as well. If you can scroll vertically and horizontally, scroll to draw N characters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_IsNScroll_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.IsNScroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimum scrolling distance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_Margin {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.Margin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll only if you can scroll above this pixel width. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_Margin_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.Margin.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page move margin (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_PageMoveMargin {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.PageMoveMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Judgment time for not moving the page immediately. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_PageMoveMargin_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.PageMoveMargin.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount of movement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_Scroll {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.Scroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The ratio to the screen to scroll in one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_Scroll_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.Scroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_ScrollDuration {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.ScrollDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image colored background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundAutoCommand {
            get {
                return ResourceManager.GetString("SetBackgroundAutoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the background color from the image. Specifically, the color of the upper left pixel of the image is used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundAutoCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundAutoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundBlackCommand {
            get {
                return ResourceManager.GetString("SetBackgroundBlackCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background black. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundBlackCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundBlackCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckCommand {
            get {
                return ResourceManager.GetString("SetBackgroundCheckCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background a white checkered pattern. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundCheckCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckDarkCommand {
            get {
                return ResourceManager.GetString("SetBackgroundCheckDarkCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background a black checkered pattern. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckDarkCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundCheckDarkCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCustomCommand {
            get {
                return ResourceManager.GetString("SetBackgroundCustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background a custom background. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCustomCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundCustomCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundWhiteCommand {
            get {
                return ResourceManager.GetString("SetBackgroundWhiteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background white. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundWhiteCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundWhiteCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book EntryTime Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by entry time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book EntryTime Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by entry time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Name Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Name Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book FileType Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by file type. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book FileType Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by file type. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Path Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByPathACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by full path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByPathACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Path Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByPathDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by full path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByPathDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByRandomCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByRandomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books randomly. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByRandomCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByRandomCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Size Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeACommand {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Size Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Date Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by date. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Date Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by darte. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left to right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderLeftCommand {
            get {
                return ResourceManager.GetString("SetBookReadOrderLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left forward from left to right. The younger page turns to the left when 2 page is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookReadOrderLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right to left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderRightCommand {
            get {
                return ResourceManager.GetString("SetBookReadOrderRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left forward from left to right. The young page turns to the right when 2 page is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderRightCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookReadOrderRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset page setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetDefaultPageSettingCommand {
            get {
                return ResourceManager.GetString("SetDefaultPageSettingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore the default page setting. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetDefaultPageSettingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetDefaultPageSettingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetFullScreenCommand {
            get {
                return ResourceManager.GetString("SetFullScreenCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make it full screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetFullScreenCommand_Remarks {
            get {
                return ResourceManager.GetString("SetFullScreenCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   One page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeOneCommand {
            get {
                return ResourceManager.GetString("SetPageModeOneCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make it 1 page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeOneCommand_Remarks {
            get {
                return ResourceManager.GetString("SetPageModeOneCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeTwoCommand {
            get {
                return ResourceManager.GetString("SetPageModeTwoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It makes 2 page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeTwoCommand_Remarks {
            get {
                return ResourceManager.GetString("SetPageModeTwoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameCommand {
            get {
                return ResourceManager.GetString("SetSortModeFileNameCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of the pages in ascending order by filename. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeFileNameCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameDescendingCommand {
            get {
                return ResourceManager.GetString("SetSortModeFileNameDescendingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of the pages in descending order by file name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameDescendingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeFileNameDescendingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeRandomCommand {
            get {
                return ResourceManager.GetString("SetSortModeRandomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle the order of pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeRandomCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeRandomCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeCommand {
            get {
                return ResourceManager.GetString("SetSortModeSizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of pages in ascending order by file size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeSizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeDescendingCommand {
            get {
                return ResourceManager.GetString("SetSortModeSizeDescendingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of pages in descending order of file size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeDescendingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeSizeDescendingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampCommand {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of pages by file date ascending order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampDescendingCommand {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampDescendingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of pages by file date descending order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampDescendingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampDescendingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window if large に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeInsideCommand {
            get {
                return ResourceManager.GetString("SetStretchModeInsideCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the image to fit in the window and display it. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeInsideCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeInsideCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeNoneCommand {
            get {
                return ResourceManager.GetString("SetStretchModeNoneCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the image as it is. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeNoneCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeNoneCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window if small に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeOutsideCommand {
            get {
                return ResourceManager.GetString("SetStretchModeOutsideCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The image is enlarged as much as possible so that it fits in the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeOutsideCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeOutsideCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales the image to fit the window size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extend to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToFillCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToFillCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale up or down to fit the window size either vertically or horizontally. The image will be larger than the window size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToFillCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToFillCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit width to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToHorizontalCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToHorizontalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales to fit the width of the image to the width of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToHorizontalCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToHorizontalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window area size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToSizeCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToSizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales the image so that it is equal to the area size of ​​the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToSizeCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToSizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit height to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToVerticalCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToVerticalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales to fit the height of the image to the height of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToVerticalCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToVerticalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all data... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingItemRemove {
            get {
                return ResourceManager.GetString("SettingItemRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete the user data and exit the application. It is used when you want to completely delete history etc. before uninstallation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingItemRemoveTips {
            get {
                return ResourceManager.GetString("SettingItemRemoveTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File types に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchive {
            get {
                return ResourceManager.GetString("SettingPageArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveMedia {
            get {
                return ResourceManager.GetString("SettingPageArchiveMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveMediaAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchiveMediaAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveMediaFeature {
            get {
                return ResourceManager.GetString("SettingPageArchiveMediaFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchivePdf {
            get {
                return ResourceManager.GetString("SettingPageArchivePdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchivePdfAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchivePdfAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchivePdfFeature {
            get {
                return ResourceManager.GetString("SettingPageArchivePdfFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiverSevenZip {
            get {
                return ResourceManager.GetString("SettingPageArchiverSevenZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiverSevenZipAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchiverSevenZipAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiverSevenZipFeature {
            get {
                return ResourceManager.GetString("SettingPageArchiverSevenZipFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ZIP に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveZip {
            get {
                return ResourceManager.GetString("SettingPageArchiveZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveZipAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchiveZipAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard archive に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveZipFeature {
            get {
                return ResourceManager.GetString("SettingPageArchiveZipFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBook {
            get {
                return ResourceManager.GetString("SettingPageBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookGeneral {
            get {
                return ResourceManager.GetString("SettingPageBookGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookGeneralGeneral {
            get {
                return ResourceManager.GetString("SettingPageBookGeneralGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookMove {
            get {
                return ResourceManager.GetString("SettingPageBookMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookMoveAdvance {
            get {
                return ResourceManager.GetString("SettingPageBookMoveAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookMoveBook {
            get {
                return ResourceManager.GetString("SettingPageBookMoveBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookMovePage {
            get {
                return ResourceManager.GetString("SettingPageBookMovePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookPageSetting {
            get {
                return ResourceManager.GetString("SettingPageBookPageSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookPageSettingAdvance {
            get {
                return ResourceManager.GetString("SettingPageBookPageSettingAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The left item is the default value, and the right item is the behavior when the book is opened. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookPageSettingTips {
            get {
                return ResourceManager.GetString("SettingPageBookPageSettingTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookSubFolder {
            get {
                return ResourceManager.GetString("SettingPageBookSubFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic determination of subfolder loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookSubFolderAuto {
            get {
                return ResourceManager.GetString("SettingPageBookSubFolderAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Confirm loading of subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookSubFolderConfirm {
            get {
                return ResourceManager.GetString("SettingPageBookSubFolderConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookVisual {
            get {
                return ResourceManager.GetString("SettingPageBookVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageBookVisualVisual {
            get {
                return ResourceManager.GetString("SettingPageBookVisualVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageCommand {
            get {
                return ResourceManager.GetString("SettingPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageCommandGeneral {
            get {
                return ResourceManager.GetString("SettingPageCommandGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageCommandGeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPageCommandGeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit commands に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageCommandMain {
            get {
                return ResourceManager.GetString("SettingPageCommandMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageCommandScipt {
            get {
                return ResourceManager.GetString("SettingPageCommandScipt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Context menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageContextMenu {
            get {
                return ResourceManager.GetString("SettingPageContextMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit context menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageContextMenuEdit {
            get {
                return ResourceManager.GetString("SettingPageContextMenuEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Memory &amp; Performance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageEnvironmentMemoryAndPerformance {
            get {
                return ResourceManager.GetString("SettingPageEnvironmentMemoryAndPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternal {
            get {
                return ResourceManager.GetString("SettingPageExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternalGeneral {
            get {
                return ResourceManager.GetString("SettingPageExternalGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy files to clipboard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternalGeneralCopyToClipboard {
            get {
                return ResourceManager.GetString("SettingPageExternalGeneralCopyToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag and drop from browser に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternalGeneralFromBrowser {
            get {
                return ResourceManager.GetString("SettingPageExternalGeneralFromBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternalGeneralSave {
            get {
                return ResourceManager.GetString("SettingPageExternalGeneralSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the setting of the command to save the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternalGeneralSaveTips {
            get {
                return ResourceManager.GetString("SettingPageExternalGeneralSaveTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternalProgram {
            get {
                return ResourceManager.GetString("SettingPageExternalProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageExternalProgramSetting {
            get {
                return ResourceManager.GetString("SettingPageExternalProgramSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneral {
            get {
                return ResourceManager.GetString("SettingPageGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBoot {
            get {
                return ResourceManager.GetString("SettingPageGeneralBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBoot {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBootDetail {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBootDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * This setting will be reflected after closing the setting screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBootDetailTips {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBootDetailTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * This setting will be reflected after closing the setting screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBootTips {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBootTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Environment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralDetail {
            get {
                return ResourceManager.GetString("SettingPageGeneralDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralDetailDetail {
            get {
                return ResourceManager.GetString("SettingPageGeneralDetailDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Explorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralDetailExplorer {
            get {
                return ResourceManager.GetString("SettingPageGeneralDetailExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralDetailLanguage {
            get {
                return ResourceManager.GetString("SettingPageGeneralDetailLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralLocation {
            get {
                return ResourceManager.GetString("SettingPageGeneralLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralLocationTypes {
            get {
                return ResourceManager.GetString("SettingPageGeneralLocationTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * It is applied from the next startup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralLocationTypesTips {
            get {
                return ResourceManager.GetString("SettingPageGeneralLocationTypesTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralSaveData {
            get {
                return ResourceManager.GetString("SettingPageGeneralSaveData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralSaveDataRemove {
            get {
                return ResourceManager.GetString("SettingPageGeneralSaveDataRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralSaveDataTypes {
            get {
                return ResourceManager.GetString("SettingPageGeneralSaveDataTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * The file location will be applied the next time you start up. Please use export, import to take over data. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralSaveDataTypesTips {
            get {
                return ResourceManager.GetString("SettingPageGeneralSaveDataTypesTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistory {
            get {
                return ResourceManager.GetString("SettingPageHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneral {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneralBookshelf {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneralBookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneralDelete {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneralDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneralDeleteButton {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneralDeleteButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneralGeneral {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneralGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of records saved limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneralLimit {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneralLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sets the maximum number of history saved in the history file. The history during application operation is not limited. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryGeneralLimitTips {
            get {
                return ResourceManager.GetString("SettingPageHistoryGeneralLimitTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryPageView {
            get {
                return ResourceManager.GetString("SettingPageHistoryPageView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view recording に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageHistoryPageViewRecord {
            get {
                return ResourceManager.GetString("SettingPageHistoryPageViewRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageImage {
            get {
                return ResourceManager.GetString("SettingPageImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image formats に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageImageCollection {
            get {
                return ResourceManager.GetString("SettingPageImageCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurate {
            get {
                return ResourceManager.GetString("SettingPageManipurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateGeneral {
            get {
                return ResourceManager.GetString("SettingPageManipurateGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateGeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPageManipurateGeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateGeneralViewOperation {
            get {
                return ResourceManager.GetString("SettingPageManipurateGeneralViewOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateLoupe {
            get {
                return ResourceManager.GetString("SettingPageManipurateLoupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateLoupeAdvance {
            get {
                return ResourceManager.GetString("SettingPageManipurateLoupeAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateLoupeGeneral {
            get {
                return ResourceManager.GetString("SettingPageManipurateLoupeGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateMouse {
            get {
                return ResourceManager.GetString("SettingPageManipurateMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse drag に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateMouseDrag {
            get {
                return ResourceManager.GetString("SettingPageManipurateMouseDrag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse long press に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateMouseHold {
            get {
                return ResourceManager.GetString("SettingPageManipurateMouseHold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cursor auto hide に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateMouseVisibility {
            get {
                return ResourceManager.GetString("SettingPageManipurateMouseVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you do not operate the mouse for a certain time, the cursor will be hidden. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateMouseVisibilityTips {
            get {
                return ResourceManager.GetString("SettingPageManipurateMouseVisibilityTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateTouch {
            get {
                return ResourceManager.GetString("SettingPageManipurateTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateTouchAdvance {
            get {
                return ResourceManager.GetString("SettingPageManipurateTouchAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageManipurateTouchGeneral {
            get {
                return ResourceManager.GetString("SettingPageManipurateTouchGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelBookshelf {
            get {
                return ResourceManager.GetString("SettingPagePanelBookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelBookshelfAdvance {
            get {
                return ResourceManager.GetString("SettingPagePanelBookshelfAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelBookshelfGeneral {
            get {
                return ResourceManager.GetString("SettingPagePanelBookshelfGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelBookshelfTree {
            get {
                return ResourceManager.GetString("SettingPagePanelBookshelfTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelBookshelfVisual {
            get {
                return ResourceManager.GetString("SettingPagePanelBookshelfVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelEffect {
            get {
                return ResourceManager.GetString("SettingPagePanelEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelEffectAdvance {
            get {
                return ResourceManager.GetString("SettingPagePanelEffectAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelEffectVisual {
            get {
                return ResourceManager.GetString("SettingPagePanelEffectVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelFileInfo {
            get {
                return ResourceManager.GetString("SettingPagePanelFileInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelFileInfoVisual {
            get {
                return ResourceManager.GetString("SettingPagePanelFileInfoVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelGeneral {
            get {
                return ResourceManager.GetString("SettingPagePanelGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelGeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPagePanelGeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelGeneralOperation {
            get {
                return ResourceManager.GetString("SettingPagePanelGeneralOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelGeneralVisual {
            get {
                return ResourceManager.GetString("SettingPagePanelGeneralVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel list item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelListItem {
            get {
                return ResourceManager.GetString("SettingPagePanelListItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanels {
            get {
                return ResourceManager.GetString("SettingPagePanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanels_AutoHideMode {
            get {
                return ResourceManager.GetString("SettingPagePanels.AutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window state to apply auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanels_AutoHideMode_WindowState {
            get {
                return ResourceManager.GetString("SettingPagePanels.AutoHideMode.WindowState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner style of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelStyleBanner {
            get {
                return ResourceManager.GetString("SettingPagePanelStyleBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Content style of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelStyleContent {
            get {
                return ResourceManager.GetString("SettingPagePanelStyleContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail style of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelStyleThumbnail {
            get {
                return ResourceManager.GetString("SettingPagePanelStyleThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageScript {
            get {
                return ResourceManager.GetString("SettingPageScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search results に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSearchResult {
            get {
                return ResourceManager.GetString("SettingPageSearchResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search results not found に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSearchResultNotFound {
            get {
                return ResourceManager.GetString("SettingPageSearchResultNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Susie に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusie {
            get {
                return ResourceManager.GetString("SettingPageSusie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Archive plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieArchivePlugin {
            get {
                return ResourceManager.GetString("SettingPageSusieArchivePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General Susie に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneral {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Susie plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneralGeneral {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneralGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It supports Susie plug-in (.spi). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneralGeneralTips {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneralGeneralTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It supports Susie plug-in (.sph) for 64bit. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneralGeneralTipsX64 {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneralGeneralTipsX64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Priority に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneralPriority {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneralPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieImagePlugin {
            get {
                return ResourceManager.GetString("SettingPageSusieImagePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visual に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisual {
            get {
                return ResourceManager.GetString("SettingPageVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualFilmstrip {
            get {
                return ResourceManager.GetString("SettingPageVisualFilmstrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualFilmstripFilmstrip {
            get {
                return ResourceManager.GetString("SettingPageVisualFilmstripFilmstrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualFont {
            get {
                return ResourceManager.GetString("SettingPageVisualFont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualFontPanel {
            get {
                return ResourceManager.GetString("SettingPageVisualFontPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visual General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneral {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window advanced setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralAutoHide {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralAutoHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralBackground {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralOpacity {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralTheme {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualNotify {
            get {
                return ResourceManager.GetString("SettingPageVisualNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notification display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualNotifyDisplay {
            get {
                return ResourceManager.GetString("SettingPageVisualNotifyDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualSlider {
            get {
                return ResourceManager.GetString("SettingPageVisualSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualSliderVisual {
            get {
                return ResourceManager.GetString("SettingPageVisualSliderVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualSlideshow {
            get {
                return ResourceManager.GetString("SettingPageVisualSlideshow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualSlideshowGeneral {
            get {
                return ResourceManager.GetString("SettingPageVisualSlideshowGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnail {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail image settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailAdvance {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailCache {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailCacheClear {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailCacheClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailCacheClearButton {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailCacheClearButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After changing the thumbnail image settings, you need to clear the cache. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailCacheClearTips {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailCacheClearTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualWindowTitile {
            get {
                return ResourceManager.GetString("SettingPageVisualWindowTitile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualWindowTitileDisplay {
            get {
                return ResourceManager.GetString("SettingPageVisualWindowTitileDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Format Description
        ///
        ///$Book .. Name of the book
        ///$Page[LR] .. Current page number
        ///$PageMax .. Maximum page number
        ///$ViewScale .. Scale by view operation (%)
        ///$FullName[LR] .. File name including path
        ///$Name[LR] .. File name
        ///$Size[LR] .. File size (ex. 100 × 100)
        ///$SizeEx[LR] .. File size + number of pixel bits (ex. 100 × 100 × 24)
        ///$Scale[LR] .. Image scale (%)
        ///
        ///&quot;◯◯◯[LR]&quot; indicates that the variable name changes for 1 page or 2 pages.
        ///For example, $Name is for 1 page, $NameL is for 2 pages left, $NameR is for 2 pag [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualWindowTitileNote {
            get {
                return ResourceManager.GetString("SettingPageVisualWindowTitileNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageWindow {
            get {
                return ResourceManager.GetString("SettingPageWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SVG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingSectionSvg {
            get {
                return ResourceManager.GetString("SettingSectionSvg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use compressed file expansion with 7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location of 7z.dll (64 bit) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X64DllPath {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X64DllPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this if you want to use another 7z.dll. To reflect, you need to reopen the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X64DllPath_Remarks {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X64DllPath.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location of 7z.dll (32bit) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X86DllPath {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X86DllPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this if you want to use another 7z.dll. To reflect, you need to reopen the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X86DllPath_Remarks {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X86DllPath.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SharpenEffectUnit_Amount {
            get {
                return ResourceManager.GetString("SharpenEffectUnit.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SharpenEffectUnit_Height {
            get {
                return ResourceManager.GetString("SharpenEffectUnit.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show panels  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowHiddenPanelsCommand {
            get {
                return ResourceManager.GetString("ShowHiddenPanelsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show panels  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowHiddenPanelsCommand_Menu {
            get {
                return ResourceManager.GetString("ShowHiddenPanelsCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The panel which is hidden automatically is displayed once. It will be canceled by some operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowHiddenPanelsCommand_Remarks {
            get {
                return ResourceManager.GetString("ShowHiddenPanelsCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowMessageStyle_None {
            get {
                return ResourceManager.GetString("ShowMessageStyle.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visible に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowMessageStyle_Normal {
            get {
                return ResourceManager.GetString("ShowMessageStyle.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tiny に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowMessageStyle_Tiny {
            get {
                return ResourceManager.GetString("ShowMessageStyle.Tiny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide slider automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsHidePageSlider {
            get {
                return ResourceManager.GetString("SliderConfig.IsHidePageSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the slider when it is auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsHidePageSliderInAutoHideMode {
            get {
                return ResourceManager.GetString("SliderConfig.IsHidePageSliderInAutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Real time change with slider applies only to film strip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsSliderLinkedFilmStrip {
            get {
                return ResourceManager.GetString("SliderConfig.IsSliderLinkedFilmStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch pages when decided. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsSliderLinkedFilmStrip_Remarks {
            get {
                return ResourceManager.GetString("SliderConfig.IsSliderLinkedFilmStrip.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchronize the amount of change to the number of displayed pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsSyncPageMode {
            get {
                return ResourceManager.GetString("SliderConfig.IsSyncPageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsVisible {
            get {
                return ResourceManager.GetString("SliderConfig.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_Opacity {
            get {
                return ResourceManager.GetString("SliderConfig.Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is effective in auto-hide mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_Opacity_Remarks {
            get {
                return ResourceManager.GetString("SliderConfig.Opacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider Direction に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_SliderDirection {
            get {
                return ResourceManager.GetString("SliderConfig.SliderDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page number display position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_SliderIndexLayout {
            get {
                return ResourceManager.GetString("SliderConfig.SliderIndexLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left to right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderDirection_LeftToRight {
            get {
                return ResourceManager.GetString("SliderDirection.LeftToRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right to left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderDirection_RightToLeft {
            get {
                return ResourceManager.GetString("SliderDirection.RightToLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Depends on books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderDirection_SyncBookReadDirection {
            get {
                return ResourceManager.GetString("SliderDirection.SyncBookReadDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderIndexLayout_Left {
            get {
                return ResourceManager.GetString("SliderIndexLayout.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderIndexLayout_None {
            get {
                return ResourceManager.GetString("SliderIndexLayout.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderIndexLayout_Right {
            get {
                return ResourceManager.GetString("SliderIndexLayout.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset display interval with mouse move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsCancelSlideByMouseMove {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsCancelSlideByMouseMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, it will only be reset by clear action such as clicking. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsCancelSlideByMouseMove_Remarks {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsCancelSlideByMouseMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop play に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsSlideShowByLoop {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsSlideShowByLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After playing to the last page, it will return to the first page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsSlideShowByLoop_Remarks {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsSlideShowByLoop.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display interval (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_SlideShowInterval {
            get {
                return ResourceManager.GetString("SlideShowConfig.SlideShowInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start playing slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsAutoPlaySlideShow {
            get {
                return ResourceManager.GetString("StartUpConfig.IsAutoPlaySlideShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow multiple activations に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsMultiBootEnabled {
            get {
                return ResourceManager.GetString("StartUpConfig.IsMultiBootEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore an open book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsOpenLastBook {
            get {
                return ResourceManager.GetString("StartUpConfig.IsOpenLastBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore bookshelf location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsOpenLastFolder {
            get {
                return ResourceManager.GetString("StartUpConfig.IsOpenLastFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The location of the bookshelf if you do not open the book at startup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsOpenLastFolder_Remarks {
            get {
                return ResourceManager.GetString("StartUpConfig.IsOpenLastFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore full screen state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreFullScreen {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore the second window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreSecondWindowPlacement {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreSecondWindowPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Also restore window coordinates when duplicates are activated. When set to OFF, it is displayed in the initial coordinates. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreSecondWindowPlacement_Remarks {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreSecondWindowPlacement.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreWindowPlacement {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreWindowPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Splash screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsSplashScreenEnabled {
            get {
                return ResourceManager.GetString("StartUpConfig.IsSplashScreenEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switching to original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchModeCommandParameter_IsToggle {
            get {
                return ResourceManager.GetString("StretchModeCommandParameter.IsToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the stretch mode is already specified, it will be the original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchModeCommandParameter_IsToggle_Remarks {
            get {
                return ResourceManager.GetString("StretchModeCommandParameter.IsToggle.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchWindowCommand {
            get {
                return ResourceManager.GetString("StretchWindowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchWindowCommand_Menu {
            get {
                return ResourceManager.GetString("StretchWindowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit the window to the MainView content size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchWindowCommand_Remarks {
            get {
                return ResourceManager.GetString("StretchWindowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the Susie plugin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_IsEnabled {
            get {
                return ResourceManager.GetString("SusieConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize Susie plugin in compressed file expansion に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_IsFirstOrderSusieArchive {
            get {
                return ResourceManager.GetString("SusieConfig.IsFirstOrderSusieArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize Susie plugin in image display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_IsFirstOrderSusieImage {
            get {
                return ResourceManager.GetString("SusieConfig.IsFirstOrderSusieImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Plugin folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_SusiePluginPath {
            get {
                return ResourceManager.GetString("SusieConfig.SusiePluginPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_Config {
            get {
                return ResourceManager.GetString("SusiePluginList.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_Down {
            get {
                return ResourceManager.GetString("SusiePluginList.Down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All On / Off に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_SwitchAll {
            get {
                return ResourceManager.GetString("SusiePluginList.SwitchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_Up {
            get {
                return ResourceManager.GetString("SusiePluginList.Up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SwirlEffectUnit_Center {
            get {
                return ResourceManager.GetString("SwirlEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Twist amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SwirlEffectUnit_TwistAmount {
            get {
                return ResourceManager.GetString("SwirlEffectUnit.TwistAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file handling に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_ArchiveRecursiveMode {
            get {
                return ResourceManager.GetString("SystemConfig.ArchiveRecursiveMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extended range when opening compressed file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_ArchiveRecursiveMode_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.ArchiveRecursiveMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File type to be page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_BookPageCollectMode {
            get {
                return ResourceManager.GetString("SystemConfig.BookPageCollectMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you make a folder a page, you can open the folder from that page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_BookPageCollectMode_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.BookPageCollectMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Destination folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_DestinationFodlerCollection {
            get {
                return ResourceManager.GetString("SystemConfig.DestinationFodlerCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Download folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_DownloadPath {
            get {
                return ResourceManager.GetString("SystemConfig.DownloadPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is a storage place of the image dropped by the browser etc. If not specified, temporary folder is used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_DownloadPath_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.DownloadPath.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External applications に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_ExternalAppCollection {
            get {
                return ResourceManager.GetString("SystemConfig.ExternalAppCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File operation enabled に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsFileWriteAccessEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsFileWriteAccessEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show hidden files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsHiddenFileVisibled {
            get {
                return ResourceManager.GetString("SystemConfig.IsHiddenFileVisibled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dot-by-dot display of image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsIgnoreImageDpi {
            get {
                return ResourceManager.GetString("SystemConfig.IsIgnoreImageDpi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When displaying at the original size, it matches the pixels of the display independently of the display scale of the display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsIgnoreImageDpi_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsIgnoreImageDpi.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable IME outside the text box に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsInputMethodEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsInputMethodEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * It is applied from the next startup. Always valid for text boxes. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsInputMethodEnabled_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsInputMethodEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Natural sort に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNaturalSortEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsNaturalSortEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Makes sorting by name, such as numbers separated by periods, kanji numbers, etc. more natural. When off, same as Explorer. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNaturalSortEnabled_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsNaturalSortEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow network access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNetworkEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsNetworkEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In this application, we will use the network only for WEB links such as version update confirmation and online help from &quot;About&quot; dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNetworkEnabled_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsNetworkEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the start position of the file selection dialog in &quot;@LoadAsCommand&quot; the location of the currently opened book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsOpenbookAtCurrentPlace {
            get {
                return ResourceManager.GetString("SystemConfig.IsOpenbookAtCurrentPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show confirmation dialog when deleting files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsRemoveConfirmed {
            get {
                return ResourceManager.GetString("SystemConfig.IsRemoveConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show confirmation dialog when deleting files that don&apos;t fit in the Recycle Bin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsRemoveWantNukeWarning {
            get {
                return ResourceManager.GetString("SystemConfig.IsRemoveWantNukeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make a backup of the user setting file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSettingBackup {
            get {
                return ResourceManager.GetString("SystemConfig.IsSettingBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make a backup of the configuration file and load it instead if the normal configuration file can not be read. The file name is UserSetting.json.bak. The update timing is when you close the options window and when you exit the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSettingBackup_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsSettingBackup.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchronize settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSyncUserSetting {
            get {
                return ResourceManager.GetString("SystemConfig.IsSyncUserSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When multi-booting, all NeeView settings are updated when closing the options window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSyncUserSetting_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsSyncUserSetting.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_Language {
            get {
                return ResourceManager.GetString("SystemConfig.Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * It is applied from the next startup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_Language_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.Language.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_TemporaryDirectory {
            get {
                return ResourceManager.GetString("SystemConfig.TemporaryDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used for pre-extraction and recursive compression files. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_TemporaryDirectory_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.TemporaryDirectory.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Menu color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeConfig_MenuColor {
            get {
                return ResourceManager.GetString("ThemeConfig.MenuColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeConfig_PanelColor {
            get {
                return ResourceManager.GetString("ThemeConfig.PanelColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache retention period に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_CacheLimitSpan {
            get {
                return ResourceManager.GetString("ThumbnailConfig.CacheLimitSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail image format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Format {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PNG is high quality, but the data size is larger than JPEG. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Format_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Format.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_IsCacheEnabled {
            get {
                return ResourceManager.GetString("ThumbnailConfig.IsCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache the book thumbnail. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_IsCacheEnabled_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.IsCacheEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Quality {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Quality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quality when the thumbnail image format is JPEG. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Quality_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Quality.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail image resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Resolution {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Resolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The higher the value, the higher the resolution but the larger the data size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Resolution_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Resolution.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Thumbnail Capacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailBookCapacity {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailBookCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of book thumbnails held in memory. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailBookCapacity_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailBookCapacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache file location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailCacheFilePath {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailCacheFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Thumbnail Capacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailPageCapacity {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailPageCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of page thumbnails held in memory. When the book is closed everything is destroyed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailPageCapacity_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailPageCapacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBackgroundCommand {
            get {
                return ResourceManager.GetString("ToggleBackgroundCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the background sequentially. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBackgroundCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBackgroundCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_Off {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_On {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookmark registration / release of currently open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch book order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookOrderCommand {
            get {
                return ResourceManager.GetString("ToggleBookOrderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the order of books in order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookOrderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBookOrderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookReadOrderCommand {
            get {
                return ResourceManager.GetString("ToggleBookReadOrderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle right and left open. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookReadOrderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBookReadOrderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   switch: bool|ON/OFF. Toggle if omitted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCommand_Execute_Remarks {
            get {
                return ResourceManager.GetString("ToggleCommand.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle custom size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom size OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_Off {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_On {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggles enabling / disabling of size specification applied to original size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand {
            get {
                return ResourceManager.GetString("ToggleEffectCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleEffectCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_Off {
            get {
                return ResourceManager.GetString("ToggleEffectCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_On {
            get {
                return ResourceManager.GetString("ToggleEffectCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle effect on / off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleEffectCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateCommand {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic rotation is applied regardless of the aspect ratio of the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateOffCommand {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateOnCommand {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_Off {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_On {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the full screen state. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand {
            get {
                return ResourceManager.GetString("ToggleGridCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleGridCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_Off {
            get {
                return ResourceManager.GetString("ToggleGridCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_On {
            get {
                return ResourceManager.GetString("ToggleGridCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of grid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleGridCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide menu OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_On {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide the menu. It is displayed by moving the cursor to the upper end of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide slider OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_On {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide the slider. It is displayed by moving the cursor to the lower end of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide panels OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_On {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the left and right panels. It is displayed by moving the cursor to the left and right edges of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide filmstrip OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_On {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the film strip only when using the slider. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateCommand {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto left rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When displaying the page, left rotate the portrait image 90 degrees. If the window is portrait, rotate horizontally long image by 90 degrees. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto rithg rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When displaying the page, right rotate the portrait image 90 degrees. If the window is portrait, rotate horizontally long image by 90 degrees. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Turn the loupe on or off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When loading images from folders, subfolders or compressed files are also loaded at the same time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split wide page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split wide page OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split wide page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When one page is displayed, divide the landscape page into pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page alone OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Even on 2 page display, the first page is displayed as 1 page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page alone OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Even on 2 page display, the last page is displayed on 1 page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wide is two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wide is two page OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wide is two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When two pages are displayed, the horizontally long image is regarded as two pages and is displayed independently. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle MainView window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the MainView a window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView docking に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingOff {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingOn {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play/Stop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMediaPlayCommand {
            get {
                return ResourceManager.GetString("ToggleMediaPlayCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle between playing and stopping the movie. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMediaPlayCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleMediaPlayCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_Off {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_On {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to ON, it will expand while maintaining the dot. When it is OFF, scale conversion processing (Fant) is executed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Place page list on bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageListPlacementBookshelfCommand {
            get {
                return ResourceManager.GetString("TogglePageListPlacementBookshelfCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch placement of page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageListPlacementCommand {
            get {
                return ResourceManager.GetString("TogglePageListPlacementCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page list placement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageListPlacementCommand_Menu {
            get {
                return ResourceManager.GetString("TogglePageListPlacementCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch placement of page list between bookshelf and side panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageListPlacementCommand_Remarks {
            get {
                return ResourceManager.GetString("TogglePageListPlacementCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Place page list on side panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageListPlacementPanelCommand {
            get {
                return ResourceManager.GetString("TogglePageListPlacementPanelCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePagemarkCommand {
            get {
                return ResourceManager.GetString("TogglePagemarkCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePagemarkCommand_Menu {
            get {
                return ResourceManager.GetString("TogglePagemarkCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePagemarkCommand_Off {
            get {
                return ResourceManager.GetString("TogglePagemarkCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePagemarkCommand_On {
            get {
                return ResourceManager.GetString("TogglePagemarkCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggles registration / cancellation of page mark of currently open page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePagemarkCommand_Remarks {
            get {
                return ResourceManager.GetString("TogglePagemarkCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle page mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageModeCommand {
            get {
                return ResourceManager.GetString("TogglePageModeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch between 1 page display and 2 page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageModeCommand_Remarks {
            get {
                return ResourceManager.GetString("TogglePageModeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle file operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_Menu {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disable file operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_Off {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable file operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_On {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle enable / disable of file operation command. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_Remarks {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_Off {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_On {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle resize filter on / off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop slideshw に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_Off {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_On {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle play / stop of the slideshow. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch pages order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSortModeCommand {
            get {
                return ResourceManager.GetString("ToggleSortModeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the order of the pages in order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSortModeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleSortModeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleDownCommand {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale down on stretch. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleUpCommand {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale up on stretch. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommand {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the stretch in order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableNone {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switchable mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableNone_Title {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableNone.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.Uniform に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniform {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToFill に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToFill {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToHorizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToHorizontal {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToSize に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToSize {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToVertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToVertical {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsLoop {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsLoop_Title {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsLoop.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch stretch (reverse) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeReverseCommand {
            get {
                return ResourceManager.GetString("ToggleStretchModeReverseCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the stretch in order (reverse). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeReverseCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchModeReverseCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_Off {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_On {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Always display the window in front. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipHorizontalCommand {
            get {
                return ResourceManager.GetString("ToggleViewFlipHorizontalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip the image left and right. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipHorizontalCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleViewFlipHorizontalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle flip vertial に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipVerticalCommand {
            get {
                return ResourceManager.GetString("ToggleViewFlipVerticalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip the image upside down. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipVerticalCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleViewFlipVerticalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Address bar OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the address bar. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookmark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark list OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the bookmark list panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the bookshelf panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the effect panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the information panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the Folders tree. The bookshelf is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle history list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History list OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the history list panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page list OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the page list. The bookshelf is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle pagemark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePagemarkListCommand {
            get {
                return ResourceManager.GetString("ToggleVisiblePagemarkListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePagemarkListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisiblePagemarkListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark list OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePagemarkListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisiblePagemarkListCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePagemarkListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisiblePagemarkListCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the pagemark list panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePagemarkListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisiblePagemarkListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side bar OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of sidebar. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the filmstrip. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleTitleBarCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleTitleBarCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleTitleBarCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleTitleBarCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title bar OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleTitleBarCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleTitleBarCommand_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleTitleBarCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleTitleBarCommand_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of window title bar. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleTitleBarCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleTitleBarCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximize window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMaximizeCommand {
            get {
                return ResourceManager.GetString("ToggleWindowMaximizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximize に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMaximizeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleWindowMaximizeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximize the window. If it has already been maximized, restore it to its original size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMaximizeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleWindowMaximizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimize window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMinimizeCommand {
            get {
                return ResourceManager.GetString("ToggleWindowMinimizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimize に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMinimizeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleWindowMinimizeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimize the window. If it has already been minimized, restore it to its original size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMinimizeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleWindowMinimizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TokenFormat {
            get {
                return ResourceManager.GetString("TokenFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch view operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_Drag {
            get {
                return ResourceManager.GetString("TouchAction.Drag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_Gesture {
            get {
                return ResourceManager.GetString("TouchAction.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_MouseDrag {
            get {
                return ResourceManager.GetString("TouchAction.MouseDrag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_None {
            get {
                return ResourceManager.GetString("TouchAction.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Single touch drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_DragAction {
            get {
                return ResourceManager.GetString("TouchConfig.DragAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimum movement distance for touch drag judgment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_GestureMinimumDistance {
            get {
                return ResourceManager.GetString("TouchConfig.GestureMinimumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dragging is judged to start for the first time by moving this distance. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_GestureMinimumDistance_Remarks {
            get {
                return ResourceManager.GetString("TouchConfig.GestureMinimumDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press Touch drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_HoldAction {
            get {
                return ResourceManager.GetString("TouchConfig.HoldAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable rotation operation with multi-touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_IsAngleEnabled {
            get {
                return ResourceManager.GetString("TouchConfig.IsAngleEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, it functions as standard mouse operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_IsEnabled {
            get {
                return ResourceManager.GetString("TouchConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable sizing operation with pinch in and pinch out に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_IsScaleEnabled {
            get {
                return ResourceManager.GetString("TouchConfig.IsScaleEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation pinch minimum change distance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationDistance {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the minimum operating distance at which rotation and enlargement / reduction by touch operation are effective. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationDistance_Remarks {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation pinch minimum determination distance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationRadius {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is the distance between the minimum of 2 touches judged as rotation by touch operation, enlargement / reduction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationRadius_Remarks {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationRadius.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch emulate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchEmulateCommand {
            get {
                return ResourceManager.GetString("TouchEmulateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute the touch command at the mouse cursor position. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchEmulateCommand_Remarks {
            get {
                return ResourceManager.GetString("TouchEmulateCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnloadCommand {
            get {
                return ResourceManager.GetString("UnloadCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnloadCommand_Menu {
            get {
                return ResourceManager.GetString("UnloadCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close the open workbook. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnloadCommand_Remarks {
            get {
                return ResourceManager.GetString("UnloadCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnsharpMaskConfig_Amount {
            get {
                return ResourceManager.GetString("UnsharpMaskConfig.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnsharpMaskConfig_Radius {
            get {
                return ResourceManager.GetString("UnsharpMaskConfig.Radius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Threshold に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnsharpMaskConfig_Threshold {
            get {
                return ResourceManager.GetString("UnsharpMaskConfig.Threshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeVew 32.0  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Ver320 {
            get {
                return ResourceManager.GetString("Ver320", resourceCulture);
            }
        }
        
        /// <summary>
        ///   · The bookmark list was integrated with the folder list and it became a bookshelf.
        ///· The folder of the pagemark list is now automatically created. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Ver320Note {
            get {
                return ResourceManager.GetString("Ver320Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Checking the latest version ... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Checking {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Update check failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Failed {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView is the latest version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Lastest {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Lastest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A new version has been released に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_New {
            get {
                return ResourceManager.GetString("VersionChecker.Message.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView is an unknown version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Unknown {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The format of the update page is different from what is supposed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_WrongFormat {
            get {
                return ResourceManager.GetString("VersionChecker.Message.WrongFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to download page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_Download {
            get {
                return ResourceManager.GetString("VersionWindow.Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   License Info / Change Log に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_License {
            get {
                return ResourceManager.GetString("VersionWindow_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy version info に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_Menu_Copy {
            get {
                return ResourceManager.GetString("VersionWindow.Menu.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Project Page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_Project {
            get {
                return ResourceManager.GetString("VersionWindow_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bottom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignment_Bottom {
            get {
                return ResourceManager.GetString("VerticalAlignment_Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignment_Center {
            get {
                return ResourceManager.GetString("VerticalAlignment_Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Top に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignment_Top {
            get {
                return ResourceManager.GetString("VerticalAlignment_Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale down by stretching に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AllowStretchScaleDown {
            get {
                return ResourceManager.GetString("ViewConfig.AllowStretchScaleDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale up by stretching に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AllowStretchScaleUp {
            get {
                return ResourceManager.GetString("ViewConfig.AllowStretchScaleUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotating Snap に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AngleFrequency {
            get {
                return ResourceManager.GetString("ViewConfig.AngleFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AutoRotate {
            get {
                return ResourceManager.GetString("ViewConfig.AutoRotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_BaseScale {
            get {
                return ResourceManager.GetString("ViewConfig.BaseScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After applying the stretch, apply this scale value. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_BaseScale_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.BaseScale.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center of flip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_FlipCenter {
            get {
                return ResourceManager.GetString("ViewConfig.FlipCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable base scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsBaseScaleEnabled {
            get {
                return ResourceManager.GetString("ViewConfig.IsBaseScaleEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable base scale. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsBaseScaleEnabled_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.IsBaseScaleEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keeping rotation even if you change the page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepAngle {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This setting does not work when automatic rotation is enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepAngle_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepAngle.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain reversal even when changing page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepFlip {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepFlip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain scaling even when changing pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepScale {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move inside the window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsLimitMove {
            get {
                return ResourceManager.GetString("ViewConfig.IsLimitMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply stretch to navigator rotation buttons に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsRotateStretchEnabled {
            get {
                return ResourceManager.GetString("ViewConfig.IsRotateStretchEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the display start position as the center of the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsViewStartPositionCenter {
            get {
                return ResourceManager.GetString("ViewConfig.IsViewStartPositionCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, it becomes the upper right reference and the upper left reference depending on the spreading direction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsViewStartPositionCenter_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.IsViewStartPositionCenter.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center of rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_RotateCenter {
            get {
                return ResourceManager.GetString("ViewConfig.RotateCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center of scaling に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_ScaleCenter {
            get {
                return ResourceManager.GetString("ViewConfig.ScaleCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_StretchMode {
            get {
                return ResourceManager.GetString("ViewConfig.StretchMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOffCommand {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel flip. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOffCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOffCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOnCommand {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip the image left and right. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOnCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOnCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertial OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOffCommand {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel flip. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOffCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOffCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertial に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOnCommand {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Turn it upside down. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOnCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOnCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ViewPage accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor {
            get {
                return ResourceManager.GetString("ViewPageAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   //  Display the view page name with toast
        ///nv.ShowToast(nv.Book.ViewPages[0].Path) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor_Example {
            get {
                return ResourceManager.GetString("ViewPageAccessor.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor_Height {
            get {
                return ResourceManager.GetString("ViewPageAccessor.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor_Width {
            get {
                return ResourceManager.GetString("ViewPageAccessor.Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewResetCommand {
            get {
                return ResourceManager.GetString("ViewResetCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize rotation, scaling, movement, and inversion by manipulating the view. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewResetCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewResetCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotation angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_Angle {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is an angle which rotates by one operation. (0-180) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_Angle_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.Angle.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply image stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_IsStretch {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.IsStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Re-apply image stretch after rotation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_IsStretch_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.IsStretch.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateLeftCommand {
            get {
                return ResourceManager.GetString("ViewRotateLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotates the image to the left. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateRightCommand {
            get {
                return ResourceManager.GetString("ViewRotateRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate the image to the right. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateRightCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   100% snap に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_IsSnapDefaultScale {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.IsSnapDefaultScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make sure to zoom in and out by 100%. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_IsSnapDefaultScale_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.IsSnapDefaultScale.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale rate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_Scale {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is the rate of change by one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_Scale_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.Scale.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Zoom out に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleDownCommand {
            get {
                return ResourceManager.GetString("ViewScaleDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Zoom in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleUpCommand {
            get {
                return ResourceManager.GetString("ViewScaleUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enlarge the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow vertical scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_AllowCrossScroll {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.AllowCrossScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you can not scroll in the axial direction, sucrose in the direction perpendicular to the axis. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_AllowCrossScroll_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.AllowCrossScroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount of movement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_Scroll {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.Scroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The ratio of the screen to scroll in one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_Scroll_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.Scroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_ScrollDuration {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.ScrollDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll ↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollDownCommand {
            get {
                return ResourceManager.GetString("ViewScrollDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image downwards. When it is not possible to scroll vertically, side scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll ← に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollLeftCommand {
            get {
                return ResourceManager.GetString("ViewScrollLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image to the left. If horizontal scrolling is not possible, vertical scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimum scrolling distance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_Margin {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.Margin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll only if you can scroll above this pixel width. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_Margin_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.Margin.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount of movement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_Scroll {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.Scroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The ratio to the screen to scroll in one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_Scroll_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.Scroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_ScrollDuration {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.ScrollDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   N-type scroll ↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeDownCommand {
            get {
                return ResourceManager.GetString("ViewScrollNTypeDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you can scroll vertically and horizontally, scroll to draw N characters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   N-type scroll ↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeUpCommand {
            get {
                return ResourceManager.GetString("ViewScrollNTypeUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you can scroll vertically and horizontally, scroll to draw N characters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll → に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollRightCommand {
            get {
                return ResourceManager.GetString("ViewScrollRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image to the right. If horizontal scrolling is not possible, vertical scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollRightCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll ↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollUpCommand {
            get {
                return ResourceManager.GetString("ViewScrollUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image upwards. When it is not possible to scroll vertically, side scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   About に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowAboutTitle {
            get {
                return ResourceManager.GetString("WindowAboutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowChromeFrame_None {
            get {
                return ResourceManager.GetString("WindowChromeFrame.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowChromeFrame_WindowFrame {
            get {
                return ResourceManager.GetString("WindowChromeFrame.WindowFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply auto-hide mode in full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsAutoHideInFullScreen {
            get {
                return ResourceManager.GetString("WindowConfig.IsAutoHideInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply auto-hide mode in normal window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsAutoHideInNormal {
            get {
                return ResourceManager.GetString("WindowConfig.IsAutoHideInNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply auto-hide mode in maximized window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsAutoHidInMaximized {
            get {
                return ResourceManager.GetString("WindowConfig.IsAutoHidInMaximized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title bar operation at full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsCaptionEmulateInFullScreen {
            get {
                return ResourceManager.GetString("WindowConfig.IsCaptionEmulateInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable the title bar operation (double click and drag) on ​​the menu at full screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsCaptionEmulateInFullScreen_Remarks {
            get {
                return ResourceManager.GetString("WindowConfig.IsCaptionEmulateInFullScreen.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsCaptionVisible {
            get {
                return ResourceManager.GetString("WindowConfig.IsCaptionVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore AeroSnap window placement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsRestoreAeroSnapPlacement {
            get {
                return ResourceManager.GetString("WindowConfig.IsRestoreAeroSnapPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsTopmost {
            get {
                return ResourceManager.GetString("WindowConfig.IsTopmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gap adjustment of window maximization with title bar hidden に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_MaximizeWindowGapWidth {
            get {
                return ResourceManager.GetString("WindowConfig.MaximizeWindowGapWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If there is a gap in maximizing the window with the title bar hidden, adjust with this value. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_MaximizeWindowGapWidth_Remarks {
            get {
                return ResourceManager.GetString("WindowConfig.MaximizeWindowGapWidth.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disable mouse data when activating window with mouse に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_MouseActivateAndEat {
            get {
                return ResourceManager.GetString("WindowConfig.MouseActivateAndEat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_State {
            get {
                return ResourceManager.GetString("WindowConfig.State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window frame with title bar hidden に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_WindowChromeFrame {
            get {
                return ResourceManager.GetString("WindowConfig.WindowChromeFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Options に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowSettingTitle {
            get {
                return ResourceManager.GetString("WindowSettingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FullScreen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_FullScreen {
            get {
                return ResourceManager.GetString("WindowStateEx.FullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximized に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_Maximized {
            get {
                return ResourceManager.GetString("WindowStateEx.Maximized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimized に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_Minimized {
            get {
                return ResourceManager.GetString("WindowStateEx.Minimized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_None {
            get {
                return ResourceManager.GetString("WindowStateEx.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_Normal {
            get {
                return ResourceManager.GetString("WindowStateEx.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When the title bar is not displayed, the window title is displayed in the display area に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitleConfig_IsMainViewDisplayEnabled {
            get {
                return ResourceManager.GetString("WindowTitleConfig.IsMainViewDisplayEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 1 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitleConfig_WindowTitleFormat1 {
            get {
                return ResourceManager.GetString("WindowTitleConfig.WindowTitleFormat1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitleConfig_WindowTitleFormat2 {
            get {
                return ResourceManager.GetString("WindowTitleConfig.WindowTitleFormat2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitleConfig_WindowTitleFormatMedia {
            get {
                return ResourceManager.GetString("WindowTitleConfig.WindowTitleFormatMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Example に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Example {
            get {
                return ResourceManager.GetString("Word.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fields に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Fields {
            get {
                return ResourceManager.GetString("Word.Fields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Methods に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Methods {
            get {
                return ResourceManager.GetString("Word.Methods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Name {
            get {
                return ResourceManager.GetString("Word.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Parameters {
            get {
                return ResourceManager.GetString("Word.Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Properties に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Properties {
            get {
                return ResourceManager.GetString("Word.Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Returns に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Returns {
            get {
                return ResourceManager.GetString("Word.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Summary に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Summary {
            get {
                return ResourceManager.GetString("Word.Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordAdd {
            get {
                return ResourceManager.GetString("WordAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordAllHistory {
            get {
                return ResourceManager.GetString("WordAllHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordAllPagemark {
            get {
                return ResourceManager.GetString("WordAllPagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Argument に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordArgument {
            get {
                return ResourceManager.GetString("WordArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordBookmark {
            get {
                return ResourceManager.GetString("WordBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordBookshelf {
            get {
                return ResourceManager.GetString("WordBookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCancel {
            get {
                return ResourceManager.GetString("WordCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cause に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCause {
            get {
                return ResourceManager.GetString("WordCause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disk drive に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCDRomDrive {
            get {
                return ResourceManager.GetString("WordCDRomDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordClear {
            get {
                return ResourceManager.GetString("WordClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordClose {
            get {
                return ResourceManager.GetString("WordClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCommand {
            get {
                return ResourceManager.GetString("WordCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCommandList {
            get {
                return ResourceManager.GetString("WordCommandList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCommandName {
            get {
                return ResourceManager.GetString("WordCommandName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCommandParameter {
            get {
                return ResourceManager.GetString("WordCommandParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordConfig {
            get {
                return ResourceManager.GetString("WordConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Config list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordConfigList {
            get {
                return ResourceManager.GetString("WordConfigList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCustomBackground {
            get {
                return ResourceManager.GetString("WordCustomBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} days ago に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDaysAgo {
            get {
                return ResourceManager.GetString("WordDaysAgo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDefaultApp {
            get {
                return ResourceManager.GetString("WordDefaultApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDefaultPagemark {
            get {
                return ResourceManager.GetString("WordDefaultPagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   degree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDegree {
            get {
                return ResourceManager.GetString("WordDegree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDelete {
            get {
                return ResourceManager.GetString("WordDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDescription {
            get {
                return ResourceManager.GetString("WordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDown {
            get {
                return ResourceManager.GetString("WordDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordEdit {
            get {
                return ResourceManager.GetString("WordEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Embedded image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordEmbeddedImage {
            get {
                return ResourceManager.GetString("WordEmbeddedImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   e.g. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordExample {
            get {
                return ResourceManager.GetString("WordExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Excluded path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordExcludePath {
            get {
                return ResourceManager.GetString("WordExcludePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordExport {
            get {
                return ResourceManager.GetString("WordExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordExtension {
            get {
                return ResourceManager.GetString("WordExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFile {
            get {
                return ResourceManager.GetString("WordFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFiles {
            get {
                return ResourceManager.GetString("WordFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFirstPage {
            get {
                return ResourceManager.GetString("WordFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Local disk に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFixedDrive {
            get {
                return ResourceManager.GetString("WordFixedDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFolder {
            get {
                return ResourceManager.GetString("WordFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFolders {
            get {
                return ResourceManager.GetString("WordFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFoldersTree {
            get {
                return ResourceManager.GetString("WordFoldersTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFullScreen {
            get {
                return ResourceManager.GetString("WordFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordGesture {
            get {
                return ResourceManager.GetString("WordGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Group に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordGroup {
            get {
                return ResourceManager.GetString("WordGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordImport {
            get {
                return ResourceManager.GetString("WordImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Innner に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordInner {
            get {
                return ResourceManager.GetString("WordInner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordIsPanelSelected {
            get {
                return ResourceManager.GetString("WordIsPanelSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordIsPanelVisible {
            get {
                return ResourceManager.GetString("WordIsPanelVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordItem {
            get {
                return ResourceManager.GetString("WordItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (None) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordItemNone {
            get {
                return ResourceManager.GetString("WordItemNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jump に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordJump {
            get {
                return ResourceManager.GetString("WordJump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordLeft {
            get {
                return ResourceManager.GetString("WordLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordLoop {
            get {
                return ResourceManager.GetString("WordLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main Menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordMainMenu {
            get {
                return ResourceManager.GetString("WordMainMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordName {
            get {
                return ResourceManager.GetString("WordName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Netword drive に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordNetworkDrive {
            get {
                return ResourceManager.GetString("WordNetworkDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordNewFolder {
            get {
                return ResourceManager.GetString("WordNewFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordNo {
            get {
                return ResourceManager.GetString("WordNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No Limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordNoLimit {
            get {
                return ResourceManager.GetString("WordNoLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordNone {
            get {
                return ResourceManager.GetString("WordNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Off に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOff {
            get {
                return ResourceManager.GetString("WordOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   OK に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOK {
            get {
                return ResourceManager.GetString("WordOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   On に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOn {
            get {
                return ResourceManager.GetString("WordOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOpen {
            get {
                return ResourceManager.GetString("WordOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in Nee&amp;View に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOpenInNeeView {
            get {
                return ResourceManager.GetString("WordOpenInNeeView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open Microsoft Store に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOpenStore {
            get {
                return ResourceManager.GetString("WordOpenStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordPage {
            get {
                return ResourceManager.GetString("WordPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordPageList {
            get {
                return ResourceManager.GetString("WordPageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordPagemark {
            get {
                return ResourceManager.GetString("WordPagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordParameter {
            get {
                return ResourceManager.GetString("WordParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordPath {
            get {
                return ResourceManager.GetString("WordPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   . に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordPeriod {
            get {
                return ResourceManager.GetString("WordPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordPlay {
            get {
                return ResourceManager.GetString("WordPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordPlaylist {
            get {
                return ResourceManager.GetString("WordPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordQuickAccess {
            get {
                return ResourceManager.GetString("WordQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RAM disk に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRamDrive {
            get {
                return ResourceManager.GetString("WordRamDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Read only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordReadOnly {
            get {
                return ResourceManager.GetString("WordReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Removable disk に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRemovableDrive {
            get {
                return ResourceManager.GetString("WordRemovableDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRemove {
            get {
                return ResourceManager.GetString("WordRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRename {
            get {
                return ResourceManager.GetString("WordRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordReset {
            get {
                return ResourceManager.GetString("WordReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordResetLong {
            get {
                return ResourceManager.GetString("WordResetLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRestore {
            get {
                return ResourceManager.GetString("WordRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Retry に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRetry {
            get {
                return ResourceManager.GetString("WordRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRight {
            get {
                return ResourceManager.GetString("WordRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search word に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordSearchWord {
            get {
                return ResourceManager.GetString("WordSearchWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   sec に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordSec {
            get {
                return ResourceManager.GetString("WordSec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordShortcut {
            get {
                return ResourceManager.GetString("WordShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stepless に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordStepless {
            get {
                return ResourceManager.GetString("WordStepless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordStop {
            get {
                return ResourceManager.GetString("WordStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordStyleBanner {
            get {
                return ResourceManager.GetString("WordStyleBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Content style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordStyleContent {
            get {
                return ResourceManager.GetString("WordStyleContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordStyleList {
            get {
                return ResourceManager.GetString("WordStyleList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordStyleThumbnail {
            get {
                return ResourceManager.GetString("WordStyleThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordToDown {
            get {
                return ResourceManager.GetString("WordToDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordTopmost {
            get {
                return ResourceManager.GetString("WordTopmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordTouch {
            get {
                return ResourceManager.GetString("WordTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordToUp {
            get {
                return ResourceManager.GetString("WordToUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordType {
            get {
                return ResourceManager.GetString("WordType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unsharp mask に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordUnsharpMask {
            get {
                return ResourceManager.GetString("WordUnsharpMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordUp {
            get {
                return ResourceManager.GetString("WordUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordYes {
            get {
                return ResourceManager.GetString("WordYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select copy destination folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_BookshelfCopyToFolderSelect {
            get {
                return ResourceManager.GetString("x.BookshelfCopyToFolderSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copied {0} items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_BookshelfCopyToFolderSuccess {
            get {
                return ResourceManager.GetString("x.BookshelfCopyToFolderSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Select folder... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_BookshelfItemMenuDestinationFolderSelect {
            get {
                return ResourceManager.GetString("x.BookshelfItemMenuDestinationFolderSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select move destination folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_BookshelfMoveToFolderSelect {
            get {
                return ResourceManager.GetString("x.BookshelfMoveToFolderSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Moved {0} items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_BookshelfMoveToFolderSuccess {
            get {
                return ResourceManager.GetString("x.BookshelfMoveToFolderSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_BookshelfName {
            get {
                return ResourceManager.GetString("x.BookshelfName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change Log に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_ControlAboutChangeLog {
            get {
                return ResourceManager.GetString("x.ControlAboutChangeLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save original file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_ControlSaveOriginal {
            get {
                return ResourceManager.GetString("x.ControlSaveOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Combine two pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string x_ControlSaveWidePage {
            get {
                return ResourceManager.GetString("x.ControlSaveWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use ZIP compressed file expansion with standard function に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only ZIP format is supported. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_SupportFileTypes_Remarks {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.SupportFileTypes.Remarks", resourceCulture);
            }
        }
    }
}

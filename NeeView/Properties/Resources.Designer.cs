//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeeView.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NeeView.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroupFile {
            get {
                return ResourceManager.GetString("CommandGroupFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandLoadAs {
            get {
                return ResourceManager.GetString("CommandLoadAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandLoadAsMenu {
            get {
                return ResourceManager.GetString("CommandLoadAsMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select and open the compressed file or image file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandLoadAsNote {
            get {
                return ResourceManager.GetString("CommandLoadAsNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlCustomBackgroundColor {
            get {
                return ResourceManager.GetString("ControlCustomBackgroundColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlCustomBackgroundImage {
            get {
                return ResourceManager.GetString("ControlCustomBackgroundImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlCustomBackgroundImageSelect {
            get {
                return ResourceManager.GetString("ControlCustomBackgroundImageSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select an image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlCustomBackgroundImageSelectNote {
            get {
                return ResourceManager.GetString("ControlCustomBackgroundImageSelectNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please enter the folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlFileNameBoxDirectoryNote {
            get {
                return ResourceManager.GetString("ControlFileNameBoxDirectoryNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please enter the path of the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlFileNameBoxFileNote {
            get {
                return ResourceManager.GetString("ControlFileNameBoxFileNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlFileNameBoxSelectDirectory {
            get {
                return ResourceManager.GetString("ControlFileNameBoxSelectDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlFileNameBoxSelectFile {
            get {
                return ResourceManager.GetString("ControlFileNameBoxSelectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlSusiePluginListConfig {
            get {
                return ResourceManager.GetString("ControlSusiePluginListConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlSusiePluginListDown {
            get {
                return ResourceManager.GetString("ControlSusiePluginListDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlSusiePluginListUp {
            get {
                return ResourceManager.GetString("ControlSusiePluginListUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogAddParameterTile {
            get {
                return ResourceManager.GetString("DialogAddParameterTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary folders can not be bookmarked に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogBookmarkError {
            get {
                return ResourceManager.GetString("DialogBookmarkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Can not bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogBookmarkErrorTitle {
            get {
                return ResourceManager.GetString("DialogBookmarkErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Startup error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogBootErrorTitle {
            get {
                return ResourceManager.GetString("DialogBootErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Startup options に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogBootOptionTitle {
            get {
                return ResourceManager.GetString("DialogBootOptionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache deleted に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogCacheDeletedTitle {
            get {
                return ResourceManager.GetString("DialogCacheDeletedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no file that can be read in &quot;{0}&quot;. Do you also load subfolders or compressed files? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogConfirmRecursive {
            get {
                return ResourceManager.GetString("DialogConfirmRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you also read subfolders? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogConfirmRecursiveTitle {
            get {
                return ResourceManager.GetString("DialogConfirmRecursiveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogCopyErrorTitle {
            get {
                return ResourceManager.GetString("DialogCopyErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogCopyImageErrorTitle {
            get {
                return ResourceManager.GetString("DialogCopyImageErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete user data. Are you sure?
        ///
        ///The following data will be deleted
        ///- Setting file
        ///- History file
        ///- Bookmark file
        ///- Pagemark file
        ///- Cache file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationData {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   User data deleted. Quit NeeView. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataComplete {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It has been deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataCompleteTitle {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataCompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It can not be deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataErrorTitle {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete user data. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDeleteApplicationDataTitle {
            get {
                return ResourceManager.GetString("DialogDeleteApplicationDataTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This operation can not be changed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDragActionLockedTitle {
            get {
                return ResourceManager.GetString("DialogDragActionLockedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize all drag operations. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDragActionReset {
            get {
                return ResourceManager.GetString("DialogDragActionReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize the drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogDragActionResetTitle {
            get {
                return ResourceManager.GetString("DialogDragActionResetTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogExportErrorTitle {
            get {
                return ResourceManager.GetString("DialogExportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export all settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogExportTitle {
            get {
                return ResourceManager.GetString("DialogExportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to move this {0} to Recycle Bin? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDelete {
            get {
                return ResourceManager.GetString("DialogFileDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteBookTitle {
            get {
                return ResourceManager.GetString("DialogFileDeleteBookTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete failed. Would you like to try again? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteError {
            get {
                return ResourceManager.GetString("DialogFileDeleteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete failed. Would you like to retry? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteErrorTitle {
            get {
                return ResourceManager.GetString("DialogFileDeleteErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeletePageTitle {
            get {
                return ResourceManager.GetString("DialogFileDeletePageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileDeleteTitle {
            get {
                return ResourceManager.GetString("DialogFileDeleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} already exists.
        ///Would you like to rename it to {1}?  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameConfrict {
            get {
                return ResourceManager.GetString("DialogFileRenameConfrict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A file with the same name exists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameConfrictTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameConfrictTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Can not rename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameErrorTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Changing the extension may make it impossible to use it.
        ///Is it OK?  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameExtension {
            get {
                return ResourceManager.GetString("DialogFileRenameExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change the extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameExtensionTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameExtensionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to change the name. Would you like to try again? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameFailed {
            get {
                return ResourceManager.GetString("DialogFileRenameFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rename failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameFailedTitle {
            get {
                return ResourceManager.GetString("DialogFileRenameFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file name contains characters that can not be used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameInvalid {
            get {
                return ResourceManager.GetString("DialogFileRenameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified file name is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameWrong {
            get {
                return ResourceManager.GetString("DialogFileRenameWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified device name is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogFileRenameWrongDevice {
            get {
                return ResourceManager.GetString("DialogFileRenameWrongDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHistoryDeleteAll {
            get {
                return ResourceManager.GetString("DialogHistoryDeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHistoryDeleteAllTitle {
            get {
                return ResourceManager.GetString("DialogHistoryDeleteAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deleted history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHistoryDeletedTitle {
            get {
                return ResourceManager.GetString("DialogHistoryDeletedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Could not get link. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogHyperLinkFailedTitle {
            get {
                return ResourceManager.GetString("DialogHyperLinkFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This image can not be output. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImageExportError {
            get {
                return ResourceManager.GetString("DialogImageExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File save failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImageExportErrorTitle {
            get {
                return ResourceManager.GetString("DialogImageExportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImportErrorTitle {
            get {
                return ResourceManager.GetString("DialogImportErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select the item to be imported に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImportSelectTitle {
            get {
                return ResourceManager.GetString("DialogImportSelectTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import all settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogImportTitle {
            get {
                return ResourceManager.GetString("DialogImportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External application execution failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogOpenApplicationErrorTitle {
            get {
                return ResourceManager.GetString("DialogOpenApplicationErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The location of the setting file can not be opened with the store application に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogOpenSettingFolderError {
            get {
                return ResourceManager.GetString("DialogOpenSettingFolderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This command can not be used に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogOpenSettingFolderErrorTitle {
            get {
                return ResourceManager.GetString("DialogOpenSettingFolderErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary folders can not be pagemarked に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogPagemarkError {
            get {
                return ResourceManager.GetString("DialogPagemarkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Can not pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DialogPagemarkErrorTitle {
            get {
                return ResourceManager.GetString("DialogPagemarkErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enlarge and display the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumBrushTypeImageFill {
            get {
                return ResourceManager.GetString("EnumBrushTypeImageFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image tile に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumBrushTypeImageTile {
            get {
                return ResourceManager.GetString("EnumBrushTypeImageTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit image to window size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumBrushTypeImageUniform {
            get {
                return ResourceManager.GetString("EnumBrushTypeImageUniform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extend the image to the full window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumBrushTypeImageUniformToFill {
            get {
                return ResourceManager.GetString("EnumBrushTypeImageUniformToFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solid color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumBrushTypeSolidColor {
            get {
                return ResourceManager.GetString("EnumBrushTypeSolidColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   English に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumLanguageEnglish {
            get {
                return ResourceManager.GetString("EnumLanguageEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   日本語 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumLanguageJapanese {
            get {
                return ResourceManager.GetString("EnumLanguageJapanese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumShowMessageStyleNone {
            get {
                return ResourceManager.GetString("EnumShowMessageStyleNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visible に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumShowMessageStyleNormal {
            get {
                return ResourceManager.GetString("EnumShowMessageStyleNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tiny に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumShowMessageStyleTiny {
            get {
                return ResourceManager.GetString("EnumShowMessageStyleTiny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ▶ Left to right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumSliderDirectionLeftToRight {
            get {
                return ResourceManager.GetString("EnumSliderDirectionLeftToRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ◀ Right to left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumSliderDirectionRightToLeft {
            get {
                return ResourceManager.GetString("EnumSliderDirectionRightToLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Depends on books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumSliderDirectionSyncBookReadDirection {
            get {
                return ResourceManager.GetString("EnumSliderDirectionSyncBookReadDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumSliderIndexLayoutLeft {
            get {
                return ResourceManager.GetString("EnumSliderIndexLayoutLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumSliderIndexLayoutNone {
            get {
                return ResourceManager.GetString("EnumSliderIndexLayoutNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumSliderIndexLayoutRight {
            get {
                return ResourceManager.GetString("EnumSliderIndexLayoutRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Frame border に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumWindowChromeFrameLine {
            get {
                return ResourceManager.GetString("EnumWindowChromeFrameLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window frame with title bar hidden に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumWindowChromeFrameNone {
            get {
                return ResourceManager.GetString("EnumWindowChromeFrameNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System standard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnumWindowChromeFrameWindowFrame {
            get {
                return ResourceManager.GetString("EnumWindowChromeFrameWindowFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System manages memory に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsAutoGC {
            get {
                return ResourceManager.GetString("IsAutoGC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When it is OFF, memory is released every time page is switched に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsAutoGCTips {
            get {
                return ResourceManager.GetString("IsAutoGCTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title bar operation at full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsCaptionEmulateInFullScreen {
            get {
                return ResourceManager.GetString("IsCaptionEmulateInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable the title bar operation (double click and drag) on ​​the menu at full screen. &quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsCaptionEmulateInFullScreenTips {
            get {
                return ResourceManager.GetString("IsCaptionEmulateInFullScreenTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamArchiverMediaIsEnabled {
            get {
                return ResourceManager.GetString("ParamArchiverMediaIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamArchiverMediaSupportFileTypes {
            get {
                return ResourceManager.GetString("ParamArchiverMediaSupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Probably what you can play with Windows Media Player is playable. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamArchiverMediaSupportFileTypesTips {
            get {
                return ResourceManager.GetString("ParamArchiverMediaSupportFileTypesTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamArchiverPdfIsEnabled {
            get {
                return ResourceManager.GetString("ParamArchiverPdfIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF page standard size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamArchiverPdfRenderSize {
            get {
                return ResourceManager.GetString("ParamArchiverPdfRenderSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normally we will render according to the display size, but the lower limit will be this standard size. If it becomes smaller, it is reduced and displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamArchiverPdfRenderSizeTips {
            get {
                return ResourceManager.GetString("ParamArchiverPdfRenderSizeTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamArchiverPdfSupportFileTypes {
            get {
                return ResourceManager.GetString("ParamArchiverPdfSupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time (in seconds) until panel and menu disappear automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamAutoHideDelayTime {
            get {
                return ResourceManager.GetString("ParamAutoHideDelayTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCustomBackground {
            get {
                return ResourceManager.GetString("ParamCustomBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This setting is applied when the background is set to &quot;custom background&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamCustomBackgroundTips {
            get {
                return ResourceManager.GetString("ParamCustomBackgroundTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Download folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDownloadPath {
            get {
                return ResourceManager.GetString("ParamDownloadPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is a storage place of the image dropped by the browser etc. If not specified, temporary folder is used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDownloadPathTips {
            get {
                return ResourceManager.GetString("ParamDownloadPathTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate, scaling, and invert the criteria as the center of the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsControlCenterImage {
            get {
                return ResourceManager.GetString("ParamDragTransformIsControlCenterImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, the center of the display is used as the reference. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsControlCenterImageTips {
            get {
                return ResourceManager.GetString("ParamDragTransformIsControlCenterImageTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keeping rotation even if you change the page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsKeepAngle {
            get {
                return ResourceManager.GetString("ParamDragTransformIsKeepAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This setting does not work when automatic rotation is enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsKeepAngleTips {
            get {
                return ResourceManager.GetString("ParamDragTransformIsKeepAngleTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain reversal even when changing page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsKeepFlip {
            get {
                return ResourceManager.GetString("ParamDragTransformIsKeepFlip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain scaling even when changing pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsKeepScale {
            get {
                return ResourceManager.GetString("ParamDragTransformIsKeepScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the scale display of the view operation the original image size standard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsOriginalScaleShowMessage {
            get {
                return ResourceManager.GetString("ParamDragTransformIsOriginalScaleShowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In case of 2 page display, we refer to the page with the younger number. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsOriginalScaleShowMessageTips {
            get {
                return ResourceManager.GetString("ParamDragTransformIsOriginalScaleShowMessageTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the display start position as the center of the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsViewStartPositionCenter {
            get {
                return ResourceManager.GetString("ParamDragTransformIsViewStartPositionCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, it becomes the upper right reference and the upper left reference depending on the spreading direction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamDragTransformIsViewStartPositionCenterTips {
            get {
                return ResourceManager.GetString("ParamDragTransformIsViewStartPositionCenterTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch scroll termination bound on filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFilmStripIsManipulationBoundaryFeedbackEnabled {
            get {
                return ResourceManager.GetString("ParamFilmStripIsManipulationBoundaryFeedbackEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll so that the selected item appears in the center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFilmStripIsSelectedCenter {
            get {
                return ResourceManager.GetString("ParamFilmStripIsSelectedCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display page number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFilmStripIsVisibleThumbnailNumber {
            get {
                return ResourceManager.GetString("ParamFilmStripIsVisibleThumbnailNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFilmStripIsVisibleThumbnailPlate {
            get {
                return ResourceManager.GetString("ParamFilmStripIsVisibleThumbnailPlate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the background of the filmstrip in the case of automatically hidden settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFilmStripIsVisibleThumbnailPlateTips {
            get {
                return ResourceManager.GetString("ParamFilmStripIsVisibleThumbnailPlateTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page thumbnail size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamFilmStripThumbnailSize {
            get {
                return ResourceManager.GetString("ParamFilmStripThumbnailSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of page operations to start history registration に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamHistoryEntryPageCount {
            get {
                return ResourceManager.GetString("ParamHistoryEntryPageCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Register in history with page movement operation more than this count or last page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamHistoryEntryPageCountTips {
            get {
                return ResourceManager.GetString("ParamHistoryEntryPageCountTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display command execution message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamInfoMessageCommandShowMessageStyle {
            get {
                return ResourceManager.GetString("ParamInfoMessageCommandShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display of gesture status に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamInfoMessageGestureShowMessageStyle {
            get {
                return ResourceManager.GetString("ParamInfoMessageGestureShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notice such as display of open book name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamInfoMessageNoticeShowMessageStyle {
            get {
                return ResourceManager.GetString("ParamInfoMessageNoticeShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View Now Loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamInfoMessageNowLoadingShowMessageStyle {
            get {
                return ResourceManager.GetString("ParamInfoMessageNowLoadingShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information display such as scale change by drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamInfoMessageViewTransformShowMessageStyle {
            get {
                return ResourceManager.GetString("ParamInfoMessageViewTransformShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow access key に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsAccessKeyEnabled {
            get {
                return ResourceManager.GetString("ParamIsAccessKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If it is set to OFF, system operation by Alt key will be invalid and malfunction will be eliminated when used with command shortcut. &quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsAccessKeyEnabledTips {
            get {
                return ResourceManager.GetString("ParamIsAccessKeyEnabledTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand all recursive compressed files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsArchiveRecursive {
            get {
                return ResourceManager.GetString("ParamIsArchiveRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If it is set to OFF, the included compressed file will be handled as subfolder. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsArchiveRecursiveTips {
            get {
                return ResourceManager.GetString("ParamIsArchiveRecursiveTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start playing slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsAutoPlaySlideShow {
            get {
                return ResourceManager.GetString("ParamIsAutoPlaySlideShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load a subfolder if there is no page and only one subfolder exists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsAutoRecursive {
            get {
                return ResourceManager.GetString("ParamIsAutoRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Determine including out-of-page files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsAutoRecursiveWithAllFiles {
            get {
                return ResourceManager.GetString("ParamIsAutoRecursiveWithAllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic judgment will not be performed if there are files other than files to become pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsAutoRecursiveWithAllFilesTips {
            get {
                return ResourceManager.GetString("ParamIsAutoRecursiveWithAllFilesTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset display interval with mouse move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsCancelSlideByMouseMove {
            get {
                return ResourceManager.GetString("ParamIsCancelSlideByMouseMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, it will only be reset by clear action such as clicking. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsCancelSlideByMouseMoveTips {
            get {
                return ResourceManager.GetString("ParamIsCancelSlideByMouseMoveTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If there is no page, inquire whether to read the subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsConfirmRecursive {
            get {
                return ResourceManager.GetString("ParamIsConfirmRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If there is no page that can be displayed when the book is opened, and a subfolder exists, a dialog is displayed asking whether to load the subfolder. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsConfirmRecursiveTips {
            get {
                return ResourceManager.GetString("ParamIsConfirmRecursiveTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do not save history, bookmarks, pagemarks に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsDisableSave {
            get {
                return ResourceManager.GetString("ParamIsDisableSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book information is not saved. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsDisableSaveTips {
            get {
                return ResourceManager.GetString("ParamIsDisableSaveTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File operation enabled に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsFileOperationEnabled {
            get {
                return ResourceManager.GetString("ParamIsFileOperationEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the side panel when it is full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsHidePanelInFullscreen {
            get {
                return ResourceManager.GetString("ParamIsHidePanelInFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dot-by-dot display of image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsIgnoreImageDpi {
            get {
                return ResourceManager.GetString("ParamIsIgnoreImageDpi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When displaying in original size, make it match with display pixels without depending on DPI. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsIgnoreImageDpiTips {
            get {
                return ResourceManager.GetString("ParamIsIgnoreImageDpiTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save recursive compressed file in history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsInnerArchiveHistoryEnabled {
            get {
                return ResourceManager.GetString("ParamIsInnerArchiveHistoryEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow multiple activations に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsMultiBootEnabled {
            get {
                return ResourceManager.GetString("ParamIsMultiBootEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow network access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsNetworkEnabled {
            get {
                return ResourceManager.GetString("ParamIsNetworkEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In this application, we will use the network only for WEB links such as version update confirmation and online help from &quot;About&quot; dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsNetworkEnabledTips {
            get {
                return ResourceManager.GetString("ParamIsNetworkEnabledTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the start position of the file selection dialog in &quot;Open file&quot; the location of the currently opened book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsOpenbookAtCurrentPlace {
            get {
                return ResourceManager.GetString("ParamIsOpenbookAtCurrentPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore an open book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsOpenLastBook {
            get {
                return ResourceManager.GetString("ParamIsOpenLastBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display confirmation dialog at file deletion に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsRemoveConfirmed {
            get {
                return ResourceManager.GetString("ParamIsRemoveConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore the second window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsRestoreSecondWindow {
            get {
                return ResourceManager.GetString("ParamIsRestoreSecondWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Also restore window coordinates when duplicates are activated. When set to OFF, it is displayed in the initial coordinates. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsRestoreSecondWindowTips {
            get {
                return ResourceManager.GetString("ParamIsRestoreSecondWindowTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore full screen state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsSaveFullScreen {
            get {
                return ResourceManager.GetString("ParamIsSaveFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsSaveWindowPlacement {
            get {
                return ResourceManager.GetString("ParamIsSaveWindowPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make a backup of the user setting file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsSettingBackup {
            get {
                return ResourceManager.GetString("ParamIsSettingBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make a backup of the configuration file and load it instead if the normal configuration file can not be read. The file name is UserSetting.xaml.old. The update timing is when you close the setting window and when you exit the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsSettingBackupTips {
            get {
                return ResourceManager.GetString("ParamIsSettingBackupTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop play に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsSlideShowByLoop {
            get {
                return ResourceManager.GetString("ParamIsSlideShowByLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After playing to the last page, it will return to the first page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsSlideShowByLoopTips {
            get {
                return ResourceManager.GetString("ParamIsSlideShowByLoopTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save UNC path in history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsUncHistoryEnabled {
            get {
                return ResourceManager.GetString("ParamIsUncHistoryEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save the path on the network like &quot;\\computer\~&quot; in the history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsUncHistoryEnabledTips {
            get {
                return ResourceManager.GetString("ParamIsUncHistoryEnabledTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The image reading processing in progress mark is displayed on the upper left of the screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsVisibleBusy {
            get {
                return ResourceManager.GetString("ParamIsVisibleBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When the title bar is not displayed, the window title is displayed in the display area に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamIsVisibleWindowTitle {
            get {
                return ResourceManager.GetString("ParamIsVisibleWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamLanguage {
            get {
                return ResourceManager.GetString("ParamLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * It is applied from the next startup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamLanguageTips {
            get {
                return ResourceManager.GetString("ParamLanguageTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemFontName {
            get {
                return ResourceManager.GetString("ParamListItemFontName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font size of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemFontSize {
            get {
                return ResourceManager.GetString("ParamListItemFontSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wrap file names of list item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemIsTextWrapped {
            get {
                return ResourceManager.GetString("ParamListItemIsTextWrapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is valid only for content style and banner style. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemIsTextWrappedTips {
            get {
                return ResourceManager.GetString("ParamListItemIsTextWrappedTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Supplemental text transparency of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemNoteOpacity {
            get {
                return ResourceManager.GetString("ParamListItemNoteOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transparency of supplemental text in content style. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamListItemNoteOpacityTips {
            get {
                return ResourceManager.GetString("ParamListItemNoteOpacityTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change time in page movement (seconds) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamPageSeconds {
            get {
                return ResourceManager.GetString("ParamPageSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamPanelColor {
            get {
                return ResourceManager.GetString("ParamPanelColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use compressed file expansion with 7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverIsEnabled {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pre Extract に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverIsPreExtract {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverIsPreExtract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When you browse books, you can speed up page feed by pre-extracting everything to a temporary folder. When OFF, pre-extraction is performed only for solid compressed files. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverIsPreExtractTips {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverIsPreExtractTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time to lock file (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverLockTime {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverLockTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you do not have access at this time, unlock it. -1 holds the lock. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverLockTimeTips {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverLockTimeTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximum file size to be extracted in advance (MB) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverPreExtractSolidSize {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverPreExtractSolidSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed files exceeding this size will not be pre-extracted. Set 0 to prohibit all pre-extraction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverPreExtractSolidSizeTips {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverPreExtractSolidSizeTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverSupportFileTypes {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverSupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location of 7z.dll (64 bit) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverX64DllPath {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverX64DllPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this if you want to use another 7z.dll. To reflect, you need to reopen the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverX64DllPathTips {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverX64DllPathTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location of 7z.dll (32bit) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverX86DllPath {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverX86DllPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this if you want to use another 7z.dll. To reflect, you need to reopen the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSevenZipArchiverX86DllPathTips {
            get {
                return ResourceManager.GetString("ParamSevenZipArchiverX86DllPathTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The left and right key input of the side panel is valid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSidePanelIsLeftRightKeyEnabled {
            get {
                return ResourceManager.GetString("ParamSidePanelIsLeftRightKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Activate left / right key operation on the side panel. In the folder list, move the folder hierarchically. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSidePanelIsLeftRightKeyEnabledTips {
            get {
                return ResourceManager.GetString("ParamSidePanelIsLeftRightKeyEnabledTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch scroll termination bound on side panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSidePanelIsManipulationBoundaryFeedbackEnabled {
            get {
                return ResourceManager.GetString("ParamSidePanelIsManipulationBoundaryFeedbackEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider Direction に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSliderDirection {
            get {
                return ResourceManager.GetString("ParamSliderDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page number display position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSliderIndexLayout {
            get {
                return ResourceManager.GetString("ParamSliderIndexLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Real time change with slider applies only to film strip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSliderIsLinkedThumbnailList {
            get {
                return ResourceManager.GetString("ParamSliderIsLinkedThumbnailList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch pages when decided. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSliderIsLinkedThumbnailListTips {
            get {
                return ResourceManager.GetString("ParamSliderIsLinkedThumbnailListTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display interval (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSlideShowInterval {
            get {
                return ResourceManager.GetString("ParamSlideShowInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the Susie plugin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusieIsEnabled {
            get {
                return ResourceManager.GetString("ParamSusieIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize Susie plugin in compressed file expansion に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusieIsFirstOrderSusieArchive {
            get {
                return ResourceManager.GetString("ParamSusieIsFirstOrderSusieArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize Susie plugin in image display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusieIsFirstOrderSusieImage {
            get {
                return ResourceManager.GetString("ParamSusieIsFirstOrderSusieImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Plugin folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamSusiePluginPath {
            get {
                return ResourceManager.GetString("ParamSusiePluginPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailBannerWidth {
            get {
                return ResourceManager.GetString("ParamThumbnailBannerWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The width of the image in banner style. The vertical width is 1/4 of the horizontal width. Since thumbnail images are diverted, the larger the size, the rough the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailBannerWidthTips {
            get {
                return ResourceManager.GetString("ParamThumbnailBannerWidthTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Thumbnail Capacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailBookCapacity {
            get {
                return ResourceManager.GetString("ParamThumbnailBookCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the number of thumbnails held in the memory in the folder list etc. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailBookCapacityTips {
            get {
                return ResourceManager.GetString("ParamThumbnailBookCapacityTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail image format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailFormat {
            get {
                return ResourceManager.GetString("ParamThumbnailFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Png is high quality but consumes more memory than Jpeg. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailFormatTips {
            get {
                return ResourceManager.GetString("ParamThumbnailFormatTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailIsCacheEnabled {
            get {
                return ResourceManager.GetString("ParamThumbnailIsCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache the book thumbnail. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailIsCacheEnabledTips {
            get {
                return ResourceManager.GetString("ParamThumbnailIsCacheEnabledTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book thumbnail popup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailIsThumbnailPopup {
            get {
                return ResourceManager.GetString("ParamThumbnailIsThumbnailPopup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When placing the cursor on the thumbnail, a large thumbnail image will be displayed in the popup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailIsThumbnailPopupTips {
            get {
                return ResourceManager.GetString("ParamThumbnailIsThumbnailPopupTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Thumbnail Capacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailPageCapacity {
            get {
                return ResourceManager.GetString("ParamThumbnailPageCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the number of page thumbnails held in memory. Close the book and it will be discarded. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailPageCapacityTips {
            get {
                return ResourceManager.GetString("ParamThumbnailPageCapacityTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailQuality {
            get {
                return ResourceManager.GetString("ParamThumbnailQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quality when the thumbnail image format is Jpeg. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailQualityTips {
            get {
                return ResourceManager.GetString("ParamThumbnailQualityTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book thumbnail size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailThumbnailWidth {
            get {
                return ResourceManager.GetString("ParamThumbnailThumbnailWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is the thumbnail size in the folder list contents style. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamThumbnailThumbnailWidthTips {
            get {
                return ResourceManager.GetString("ParamThumbnailThumbnailWidthTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window frame with title bar hidden に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamWindowChromeFrame {
            get {
                return ResourceManager.GetString("ParamWindowChromeFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window frame with title bar hidden に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamWindowShapeChromeFrame {
            get {
                return ResourceManager.GetString("ParamWindowShapeChromeFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 1 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamWindowTitleFormat1 {
            get {
                return ResourceManager.GetString("ParamWindowTitleFormat1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamWindowTitleFormat2 {
            get {
                return ResourceManager.GetString("ParamWindowTitleFormat2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamWindowTitleFormatMedia {
            get {
                return ResourceManager.GetString("ParamWindowTitleFormatMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use ZIP compressed file expansion with standard function に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamZipArchiverIsEnabled {
            get {
                return ResourceManager.GetString("ParamZipArchiverIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamZipArchiverSupportFileTypes {
            get {
                return ResourceManager.GetString("ParamZipArchiverSupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only zip format is supported. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParamZipArchiverSupportFileTypesTips {
            get {
                return ResourceManager.GetString("ParamZipArchiverSupportFileTypesTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingItemRemove {
            get {
                return ResourceManager.GetString("SettingItemRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete the user data and exit the application. It is used when you want to completely delete history etc. before uninstallation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingItemRemoveTips {
            get {
                return ResourceManager.GetString("SettingItemRemoveTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Supported format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchive {
            get {
                return ResourceManager.GetString("SettingPageArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveMedia {
            get {
                return ResourceManager.GetString("SettingPageArchiveMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveMediaAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchiveMediaAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveMediaFeature {
            get {
                return ResourceManager.GetString("SettingPageArchiveMediaFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchivePdf {
            get {
                return ResourceManager.GetString("SettingPageArchivePdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchivePdfAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchivePdfAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchivePdfFeature {
            get {
                return ResourceManager.GetString("SettingPageArchivePdfFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiverSevenZip {
            get {
                return ResourceManager.GetString("SettingPageArchiverSevenZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiverSevenZipAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchiverSevenZipAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiverSevenZipFeature {
            get {
                return ResourceManager.GetString("SettingPageArchiverSevenZipFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ZIP に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveZip {
            get {
                return ResourceManager.GetString("SettingPageArchiveZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveZipAdvance {
            get {
                return ResourceManager.GetString("SettingPageArchiveZipAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageArchiveZipFeature {
            get {
                return ResourceManager.GetString("SettingPageArchiveZipFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneral {
            get {
                return ResourceManager.GetString("SettingPageGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBoot {
            get {
                return ResourceManager.GetString("SettingPageGeneralBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBoot {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBootDetail {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBootDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * This setting will be reflected after closing the setting screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBootDetailTips {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBootDetailTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * This setting will be reflected after closing the setting screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralBootBootTips {
            get {
                return ResourceManager.GetString("SettingPageGeneralBootBootTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralDetail {
            get {
                return ResourceManager.GetString("SettingPageGeneralDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralDetailDetail {
            get {
                return ResourceManager.GetString("SettingPageGeneralDetailDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralRemove {
            get {
                return ResourceManager.GetString("SettingPageGeneralRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete user data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageGeneralRemoveRemove {
            get {
                return ResourceManager.GetString("SettingPageGeneralRemoveRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General Side Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelGeneral {
            get {
                return ResourceManager.GetString("SettingPagePanelGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelGeneralOperation {
            get {
                return ResourceManager.GetString("SettingPagePanelGeneralOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPagePanelGeneralVisual {
            get {
                return ResourceManager.GetString("SettingPagePanelGeneralVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Susie に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusie {
            get {
                return ResourceManager.GetString("SettingPageSusie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Archive plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieArchivePlugin {
            get {
                return ResourceManager.GetString("SettingPageSusieArchivePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General Susie に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneral {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneralGeneral {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneralGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Priority に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieGeneralPriority {
            get {
                return ResourceManager.GetString("SettingPageSusieGeneralPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageSusieImagePlugin {
            get {
                return ResourceManager.GetString("SettingPageSusieImagePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visual に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisual {
            get {
                return ResourceManager.GetString("SettingPageVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualFont {
            get {
                return ResourceManager.GetString("SettingPageVisualFont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualFontPanel {
            get {
                return ResourceManager.GetString("SettingPageVisualFontPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visual General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneral {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralBackground {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualGeneralTheme {
            get {
                return ResourceManager.GetString("SettingPageVisualGeneralTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualNotify {
            get {
                return ResourceManager.GetString("SettingPageVisualNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notification display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualNotifyDisplay {
            get {
                return ResourceManager.GetString("SettingPageVisualNotifyDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualSlider {
            get {
                return ResourceManager.GetString("SettingPageVisualSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualSliderSlider {
            get {
                return ResourceManager.GetString("SettingPageVisualSliderSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnail {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailAdvance {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cacge に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailCache {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailCacheClear {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailCacheClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailCacheClearTips {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailCacheClearTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Film strip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailFilmStrip {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailFilmStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualThumbnailPanel {
            get {
                return ResourceManager.GetString("SettingPageVisualThumbnailPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window Title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualWindowTitile {
            get {
                return ResourceManager.GetString("SettingPageVisualWindowTitile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualWindowTitileDisplay {
            get {
                return ResourceManager.GetString("SettingPageVisualWindowTitileDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Format Description
        ///
        ///$Book .. Name of the book
        ///$Page .. Current page number
        ///$PageMax .. Maximum page number
        ///$ViewScale .. Scale by view operation (%)
        ///$FullName[LR] .. File name including path
        ///$Name[LR] .. File name
        ///$Size[LR] .. File size (ex. 100 × 100)
        ///$SizeEx[LR] .. File size + number of pixel bits (ex. 100 × 100 × 24)
        ///$Scale[LR] .. Image scale (%)
        ///
        ///&quot;◯◯◯[LR]&quot; indicates that the variable name changes for 1 page or 2 pages.
        ///For example, $Name is for 1 page, $NameL is for 2 pages left, $NameR is fo [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPageVisualWindowTitileNote {
            get {
                return ResourceManager.GetString("SettingPageVisualWindowTitileNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordAdd {
            get {
                return ResourceManager.GetString("WordAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCancel {
            get {
                return ResourceManager.GetString("WordCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cause に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCause {
            get {
                return ResourceManager.GetString("WordCause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordCommand {
            get {
                return ResourceManager.GetString("WordCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDelete {
            get {
                return ResourceManager.GetString("WordDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordDescription {
            get {
                return ResourceManager.GetString("WordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordExport {
            get {
                return ResourceManager.GetString("WordExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordExtension {
            get {
                return ResourceManager.GetString("WordExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFile {
            get {
                return ResourceManager.GetString("WordFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFolder {
            get {
                return ResourceManager.GetString("WordFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordImport {
            get {
                return ResourceManager.GetString("WordImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordItem {
            get {
                return ResourceManager.GetString("WordItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main Menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordMainMenu {
            get {
                return ResourceManager.GetString("WordMainMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordNo {
            get {
                return ResourceManager.GetString("WordNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Off に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOff {
            get {
                return ResourceManager.GetString("WordOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   OK に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOK {
            get {
                return ResourceManager.GetString("WordOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   On に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordOn {
            get {
                return ResourceManager.GetString("WordOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRemove {
            get {
                return ResourceManager.GetString("WordRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRename {
            get {
                return ResourceManager.GetString("WordRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Retry に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordRetry {
            get {
                return ResourceManager.GetString("WordRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordYes {
            get {
                return ResourceManager.GetString("WordYes", resourceCulture);
            }
        }
    }
}

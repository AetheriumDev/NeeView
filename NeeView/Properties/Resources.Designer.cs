//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeeView.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NeeView.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   &lt;h1&gt;NeeView Script Manual&lt;/h1&gt;
        ///
        ///&lt;h2&gt; Overview &lt;/h2&gt;
        ///&lt;p&gt;
        ///    Extend the command with a script. You can change the settings, execute multiple commands at once, or execute them as separate commands with changed command parameters.
        ///&lt;/p&gt;
        ///&lt;p&gt;
        ///    Scripting is disabled by default. Set and enable on the Scripts page of Options.
        ///
        ///    &lt;ul&gt;
        ///        &lt;li&gt;The script grammar is Javascript (ECMA 5.1).&lt;/li&gt;
        ///        &lt;li&gt;&lt;a href=&quot;https://github.com/sebastienros/jint&quot;&gt;Jint&lt;/a&gt; is used for the script engine.&lt;/li&gt;
        ///        &lt;li&gt;Th [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _Document_ScriptManual_html {
            get {
                return ResourceManager.GetString("_Document.ScriptManual.html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;h1 class=&quot;sub&quot;&gt;Script examples&lt;/h1&gt;
        ///
        ///Here are some example scripts.
        ///For other samples, refer to &lt;a href=&quot;https://bitbucket.org/neelabo/neeview.scriptsamples/&quot;&gt;here&lt;/a&gt;.
        ///
        ///&lt;h3&gt;Execute &quot;External app&quot; command by temporarily changing the executable file and arguments&lt;/h3&gt;
        ///&lt;p&gt;
        ///&lt;pre&gt;OpenMsPaint.nvjs
        ///&lt;code class=&quot;example&quot;&gt;// @name MS Paint
        ///// @description Open the file with MS Paint.
        ///
        ///param = {
        ///    &quot;Command&quot;: &quot;mspaint.exe&quot;,
        ///    &quot;Parameter&quot;: &quot;\&quot;$File\&quot;&quot;
        ///}
        ///nv.Command.OpenExternalApp.Patch(param).Execute()
        ///&lt;/code&gt;&lt;/p [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _Document_ScriptManualExample_html {
            get {
                return ResourceManager.GetString("_Document.ScriptManualExample.html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;h1&gt;NeeView search options&lt;/h1&gt;
        ///
        ///&lt;h2&gt;Search options&lt;/h2&gt;
        ///&lt;p&gt;
        ///    If no search option is specified, it becomes AND-Standard search (same as specifying &quot;/and /m2&quot;).&lt;br/&gt; 
        ///    Search options affect only the immediately following search words.
        ///&lt;/p&gt;
        ///
        ///&lt;h3&gt;Connection options&lt;/h3&gt;
        ///&lt;table class=&quot;table-slim table-topless&quot;&gt;
        ///    &lt;tr&gt;&lt;th&gt;Option&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;/and&lt;/td&gt;&lt;td&gt;AND search (default)&lt;/td&gt;&lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;/or&lt;/td&gt;&lt;td&gt;OR search&lt;/td&gt;&lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;/not&lt;/td&gt;&lt;td&gt;NOT search&lt;/td&gt;&lt;/tr&gt;
        ///&lt;/ [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _Document_SearchOptions_html {
            get {
                return ResourceManager.GetString("_Document.SearchOptions.html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddParameterDialog_Tile {
            get {
                return ResourceManager.GetString("AddParameterDialog.Tile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Back に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Back_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Back.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Next_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Next.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_ReLoad_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.ReLoad.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Unload_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Unload.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AddressBar_Up_ToolTip {
            get {
                return ResourceManager.GetString("AddressBar.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the bookshelf location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_FolderList {
            get {
                return ResourceManager.GetString("AppOption.FolderList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start up without opening the image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_IsBlank {
            get {
                return ResourceManager.GetString("AppOption.IsBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify whether to start with full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_IsFullScreen {
            get {
                return ResourceManager.GetString("AppOption.IsFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This help is displayed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_IsHelp {
            get {
                return ResourceManager.GetString("AppOption.IsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify whether to start in a new window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_IsNewWindow {
            get {
                return ResourceManager.GetString("AppOption.IsNewWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_IsResetPlacement {
            get {
                return ResourceManager.GetString("AppOption.IsResetPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify whether to start a slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_IsSlideShow {
            get {
                return ResourceManager.GetString("AppOption.IsSlideShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display version information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_IsVersion {
            get {
                return ResourceManager.GetString("AppOption.IsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Executes the specified script file at startup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_ScriptFile {
            get {
                return ResourceManager.GetString("AppOption.ScriptFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the path of the setting file &quot;UserSetting.json&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_SettingFilename {
            get {
                return ResourceManager.GetString("AppOption.SettingFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Indicates the end of option list. Subsequent arguments are considered file names. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_Terminator {
            get {
                return ResourceManager.GetString("AppOption.Terminator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start with the specified window state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppOption_WindowState {
            get {
                return ResourceManager.GetString("AppOption.WindowState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand for each directory に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveEntryCollectionMode_CurrentDirectory {
            get {
                return ResourceManager.GetString("ArchiveEntryCollectionMode.CurrentDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand all に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveEntryCollectionMode_IncludeSubArchives {
            get {
                return ResourceManager.GetString("ArchiveEntryCollectionMode.IncludeSubArchives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand by compressed file unit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveEntryCollectionMode_IncludeSubDirectories {
            get {
                return ResourceManager.GetString("ArchiveEntryCollectionMode.IncludeSubDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_CompressedFile {
            get {
                return ResourceManager.GetString("ArchiveFormat.CompressedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Folder {
            get {
                return ResourceManager.GetString("ArchiveFormat.Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Media に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Media {
            get {
                return ResourceManager.GetString("ArchiveFormat.Media", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Pdf {
            get {
                return ResourceManager.GetString("ArchiveFormat.Pdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Playlist {
            get {
                return ResourceManager.GetString("ArchiveFormat.Playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unknown format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchiveFormat_Unknown {
            get {
                return ResourceManager.GetString("ArchiveFormat.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do not execute に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_None {
            get {
                return ResourceManager.GetString("ArchivePolicy.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_SendArchiveFile {
            get {
                return ResourceManager.GetString("ArchivePolicy.SendArchiveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file + filename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_SendArchivePath {
            get {
                return ResourceManager.GetString("ArchivePolicy.SendArchivePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ArchivePolicy_SendExtractFile {
            get {
                return ResourceManager.GetString("ArchivePolicy.SendExtractFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic display judgment of slider on side panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideConfrictBottomMargin {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideConfrictBottomMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic display judgment of menu bar on side panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideConfrictTopMargin {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideConfrictTopMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time to hide auto-hide panel (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideDelayTime {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideDelayTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time to display auto-hide panel (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideDelayVisibleTime {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideDelayVisibleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide panel focus mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideFocusLockMode {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideFocusLockMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is not hidden when it has focus. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideFocusLockMode_Remarks {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideFocusLockMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Horizontal area width for panel automatic display judgment (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideHitTestHorizontalMargin {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideHitTestHorizontalMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Area width of automatic panel display judgment (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideHitTestMargin {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideHitTestMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vertical area width for panel automatic display judgment (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_AutoHideHitTestVerticalMargin {
            get {
                return ResourceManager.GetString("AutoHideConfig.AutoHideHitTestVerticalMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide panel key input display continued に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_IsAutoHideKeyDownDelay {
            get {
                return ResourceManager.GetString("AutoHideConfig.IsAutoHideKeyDownDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Postpone the action to hide when key input. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfig_IsAutoHideKeyDownDelay_Remarks {
            get {
                return ResourceManager.GetString("AutoHideConfig.IsAutoHideKeyDownDelay.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfrictMode_Allow {
            get {
                return ResourceManager.GetString("AutoHideConfrictMode.Allow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow one pixel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfrictMode_AllowPixel {
            get {
                return ResourceManager.GetString("AutoHideConfrictMode.AllowPixel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deny に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideConfrictMode_Deny {
            get {
                return ResourceManager.GetString("AutoHideConfrictMode.Deny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window and Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_FocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.FocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_LogicalFocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.LogicalFocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   TextBox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_LogicalTextBoxFocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.LogicalTextBoxFocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_None {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window and TextBox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoHideFocusLockMode_TextBoxFocusLock {
            get {
                return ResourceManager.GetString("AutoHideFocusLockMode.TextBoxFocusLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoRotateType_Left {
            get {
                return ResourceManager.GetString("AutoRotateType.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoRotateType_None {
            get {
                return ResourceManager.GetString("AutoRotateType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AutoRotateType_Right {
            get {
                return ResourceManager.GetString("AutoRotateType.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_BackgroundType {
            get {
                return ResourceManager.GetString("BackgroundConfig.BackgroundType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_CustomBackground {
            get {
                return ResourceManager.GetString("BackgroundConfig.CustomBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This setting is applied when the background is set to &quot;custom background&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_CustomBackground_Remarks {
            get {
                return ResourceManager.GetString("BackgroundConfig.CustomBackground.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Checkered background transparent image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_IsPageBackgroundChecker {
            get {
                return ResourceManager.GetString("BackgroundConfig.IsPageBackgroundChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It will be a check pattern of &quot;@BackgroundConfig.PageBackgroundColor&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_IsPageBackgroundChecker_Remarks {
            get {
                return ResourceManager.GetString("BackgroundConfig.IsPageBackgroundChecker.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transparent image background color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundConfig_PageBackgroundColor {
            get {
                return ResourceManager.GetString("BackgroundConfig.PageBackgroundColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image colored background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Auto {
            get {
                return ResourceManager.GetString("BackgroundType.Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Black {
            get {
                return ResourceManager.GetString("BackgroundType.Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Check {
            get {
                return ResourceManager.GetString("BackgroundType.Check", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_CheckDark {
            get {
                return ResourceManager.GetString("BackgroundType.CheckDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_Custom {
            get {
                return ResourceManager.GetString("BackgroundType.Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType_White {
            get {
                return ResourceManager.GetString("BackgroundType.White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BitmapImageFormat_Jpeg {
            get {
                return ResourceManager.GetString("BitmapImageFormat.Jpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PNG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BitmapImageFormat_Png {
            get {
                return ResourceManager.GetString("BitmapImageFormat.Png", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base intensity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BaseIntensity {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BaseIntensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base saturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BaseSaturation {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BaseSaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloom intensity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BloomIntensity {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BloomIntensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloom saturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_BloomSaturation {
            get {
                return ResourceManager.GetString("BloomEffectUnit.BloomSaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Threshold に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BloomEffectUnit_Threshold {
            get {
                return ResourceManager.GetString("BloomEffectUnit.Threshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlurEffectUnit_Radius {
            get {
                return ResourceManager.GetString("BlurEffectUnit.Radius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor {
            get {
                return ResourceManager.GetString("BookAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_Config {
            get {
                return ResourceManager.GetString("BookAccessor.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Whether the book is a video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_IsMedia {
            get {
                return ResourceManager.GetString("BookAccessor.IsMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Whether the book is a newly opened book with no history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_IsNew {
            get {
                return ResourceManager.GetString("BookAccessor.IsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pages that make up the book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_Pages {
            get {
                return ResourceManager.GetString("BookAccessor.Pages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book path. Null if no book is open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_Path {
            get {
                return ResourceManager.GetString("BookAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Displaying pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_ViewPages {
            get {
                return ResourceManager.GetString("BookAccessor.ViewPages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wait for the view pages to finish loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAccessor_Wait {
            get {
                return ResourceManager.GetString("BookAccessor.Wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is bookmark address. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAddressInfo_Bookmark {
            get {
                return ResourceManager.GetString("BookAddressInfo.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This address is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAddressInfo_Invalid {
            get {
                return ResourceManager.GetString("BookAddressInfo.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookAddressInfo_Page {
            get {
                return ResourceManager.GetString("BookAddressInfo.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book page image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_BookPageSize {
            get {
                return ResourceManager.GetString("BookConfig.BookPageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The size of the image to display as the book page. Since thumbnails are displayed, large values ​​may be displayed at a lower resolution. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_BookPageSize_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.BookPageSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Distance between two pages (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_ContentsSpace {
            get {
                return ResourceManager.GetString("BookConfig.ContentsSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sets the gap between page and page. Negative values ​​mean overlapping. Because each page is scaled, it is rare that there will be no gap just at 0. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_ContentsSpace_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.ContentsSpace.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Excluded folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_Excludes {
            get {
                return ResourceManager.GetString("BookConfig.Excludes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the subfolder is independent, read it without checking に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsAutoRecursive {
            get {
                return ResourceManager.GetString("BookConfig.IsAutoRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically loads subfolders if there are no pages and only one subfolder exists. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsAutoRecursive_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsAutoRecursive.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ask if you want to load it when you only have a subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsConfirmRecursive {
            get {
                return ResourceManager.GetString("BookConfig.IsConfirmRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If there is no page that can be displayed when the book is opened, and a subfolder exists, a dialog is displayed asking whether to load the subfolder. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsConfirmRecursive_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsConfirmRecursive.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Insert a dummy page for a double-page spread に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsInsertDummyPage {
            get {
                return ResourceManager.GetString("BookConfig.IsInsertDummyPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When there are not enough pages at the end of the two-page display, add a dummy page to align the spread. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsInsertDummyPage_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsInsertDummyPage.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Accept duplication of page movement commands に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsMultiplePageMove {
            get {
                return ResourceManager.GetString("BookConfig.IsMultiplePageMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute all requested page move commands. If it is set to OFF, duplicate page move commands are canceled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsMultiplePageMove_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsMultiplePageMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notify page loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsNotifyPageLoop {
            get {
                return ResourceManager.GetString("BookConfig.IsNotifyPageLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page movement priority に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsPrioritizePageMove {
            get {
                return ResourceManager.GetString("BookConfig.IsPrioritizePageMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform page movement without waiting for page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsPrioritizePageMove_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsPrioritizePageMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort pages by file first に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsSortFileFirst {
            get {
                return ResourceManager.GetString("BookConfig.IsSortFileFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Arrange files before folders. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_IsSortFileFirst_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.IsSortFileFirst.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Behavior when trying to move past the end of the page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_PageEndAction {
            get {
                return ResourceManager.GetString("BookConfig.PageEndAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset page when shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_ResetPageWhenRandomSort {
            get {
                return ResourceManager.GetString("BookConfig.ResetPageWhenRandomSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sound when not able to move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_TerminalSound {
            get {
                return ResourceManager.GetString("BookConfig.TerminalSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Aspect ratio for determining horizontally long image (horizontal / vertical) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_WideRatio {
            get {
                return ResourceManager.GetString("BookConfig.WideRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used in &quot;Split landscape page&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfig_WideRatio_Remarks {
            get {
                return ResourceManager.GetString("BookConfig.WideRatio.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book config accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor {
            get {
                return ResourceManager.GetString("BookConfigAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left Open / Right Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_BookReadOrder {
            get {
                return ResourceManager.GetString("BookConfigAccessor.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split landscape page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show first page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consider landscape pages as two pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookConfigAccessor.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_SortMode {
            get {
                return ResourceManager.GetString("BookConfigAccessor.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of pages to display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookConfigAccessor_ViewPageSize {
            get {
                return ResourceManager.GetString("BookConfigAccessor.ViewPageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary folders can not be bookmarked に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookmark_Message_TemporaryNotSupportedError {
            get {
                return ResourceManager.GetString("Bookmark.Message.TemporaryNotSupportedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookmark_Title {
            get {
                return ResourceManager.GetString("Bookmark.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up (Alt+Up) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookmark_Up_ToolTip {
            get {
                return ResourceManager.GetString("Bookmark.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark file location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_BookmarkFilePath {
            get {
                return ResourceManager.GetString("BookmarkConfig.BookmarkFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default order of bookmarks に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_BookmarkFolderOrder {
            get {
                return ResourceManager.GetString("BookmarkConfig.BookmarkFolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save bookmark file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_IsSaveBookmark {
            get {
                return ResourceManager.GetString("BookmarkConfig.IsSaveBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sync bookshelf when book is opened に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkConfig_IsSyncBookshelfEnabled {
            get {
                return ResourceManager.GetString("BookmarkConfig.IsSyncBookshelfEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Removed {0} bookmarks. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkFolderDelete_Message {
            get {
                return ResourceManager.GetString("BookmarkFolderDelete.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkItemAccessor {
            get {
                return ResourceManager.GetString("BookmarkItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkItemAccessor_Name {
            get {
                return ResourceManager.GetString("BookmarkItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkItemAccessor_Path {
            get {
                return ResourceManager.GetString("BookmarkItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkList_Add_ToolTip {
            get {
                return ResourceManager.GetString("BookmarkList.Add.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sync bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkList_MoreMenu_SyncBookshelf {
            get {
                return ResourceManager.GetString("BookmarkList.MoreMenu.SyncBookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_FolderOrder {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.FolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_Items {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current bookmark folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_Path {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookmarkPanelAccessor_Style {
            get {
                return ResourceManager.GetString("BookmarkPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_BookReadOrder {
            get {
                return ResourceManager.GetString("BookMementoFilter.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split horizontally long page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The first page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape page is regarded as 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookMementoFilter.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_Page {
            get {
                return ResourceManager.GetString("BookMementoFilter.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Size Mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_PageMode {
            get {
                return ResourceManager.GetString("BookMementoFilter.PageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Order of pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookMementoFilter_SortMode {
            get {
                return ResourceManager.GetString("BookMementoFilter.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookPageCollectMode_All {
            get {
                return ResourceManager.GetString("BookPageCollectMode.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookPageCollectMode_Image {
            get {
                return ResourceManager.GetString("BookPageCollectMode.Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image files and folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookPageCollectMode_ImageAndBook {
            get {
                return ResourceManager.GetString("BookPageCollectMode.ImageAndBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_BookReadOrder {
            get {
                return ResourceManager.GetString("BookSettingConfig.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Since it searches everything under the folder to be opened, the load may be high depending on the location where it is opened. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsRecursiveFolder_Remarks {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsRecursiveFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split horizontally long page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The first page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape page is regarded as 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookSettingConfig.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_Page {
            get {
                return ResourceManager.GetString("BookSettingConfig.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Size Mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_PageMode {
            get {
                return ResourceManager.GetString("BookSettingConfig.PageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Order of pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingConfig_SortMode {
            get {
                return ResourceManager.GetString("BookSettingConfig.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @BookSettingSelectMode.Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPageSelectMode_Default {
            get {
                return ResourceManager.GetString("BookSettingPageSelectMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @BookSettingSelectMode.RestoreOrDefault に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPageSelectMode_RestoreOrDefault {
            get {
                return ResourceManager.GetString("BookSettingPageSelectMode.RestoreOrDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @BookSettingSelectMode.RestoreOrDefaultReset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPageSelectMode_RestoreOrDefaultReset {
            get {
                return ResourceManager.GetString("BookSettingPageSelectMode.RestoreOrDefaultReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.BookReadOrder&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_BookReadOrder {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.BookReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsRecursiveFolder&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsRecursiveFolder {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsRecursiveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedDividePage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedDividePage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedDividePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedSingleFirstPage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedSingleFirstPage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedSingleFirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedSingleLastPage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedSingleLastPage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedSingleLastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.IsSupportedWidePage&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_IsSupportedWidePage {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.IsSupportedWidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.Page&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_Page {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.PageMode&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_PageMode {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.PageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting policy of &quot;@BookSettingConfig.SortMode&quot; when opening a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingPolicyConfig_SortMode {
            get {
                return ResourceManager.GetString("BookSettingPolicyConfig.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Continue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_Continue {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_Default {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore, else continue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_RestoreOrContinue {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.RestoreOrContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore, else default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_RestoreOrDefault {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.RestoreOrDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore, else default, clear last page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookSettingSelectMode_RestoreOrDefaultReset {
            get {
                return ResourceManager.GetString("BookSettingSelectMode.RestoreOrDefaultReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Back (Alt+Left) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Back_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Back.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_CopyToFolderFailed {
            get {
                return ResourceManager.GetString("Bookshelf.CopyToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this place home に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Home_Menu_Set {
            get {
                return ResourceManager.GetString("Bookshelf.Home.Menu.Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to Home (Alt+Home) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Home_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Home.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Message_MoveToFolderFailed {
            get {
                return ResourceManager.GetString("Bookshelf.Message.MoveToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add this place to quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_AddQuickAccess {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.AddQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history of this place に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_ClearHistory {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.ClearHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save playlist... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_ExportPlaylist {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.ExportPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include subdirectories に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_SearchIncludeSubdirectories {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.SearchIncludeSubdirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Incremental search に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_SearchIncremental {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.SearchIncremental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search options に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_SearchOptions {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.SearchOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders at this location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_MoreMenu_Subfolder {
            get {
                return ResourceManager.GetString("Bookshelf.MoreMenu.Subfolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next (Alt+Right) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Next_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Next.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_SubFolder_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.SubFolder.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to current book place に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Sync_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Sync.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Title {
            get {
                return ResourceManager.GetString("Bookshelf.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up (Alt+Up) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bookshelf_Up_ToolTip {
            get {
                return ResourceManager.GetString("Bookshelf.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard default order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_DefaultFolderOrder {
            get {
                return ResourceManager.GetString("BookshelfConfig.DefaultFolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filename pattern to exclude from display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_ExcludePattern {
            get {
                return ResourceManager.GetString("BookshelfConfig.ExcludePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is specified with .NET regular expression. Capital letters and lower case letters are not distinguished. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_ExcludePattern_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.ExcludePattern.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Home location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_Home {
            get {
                return ResourceManager.GetString("BookshelfConfig.Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close the book when changing the location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsCloseBookWhenMove {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsCloseBookWhenMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable Folder Cruise に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsCruise {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsCruise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move the folder including the parent and child of the folder. It does not apply when the bookshelf is a search result. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsCruise_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsCruise.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Incremental search enabled に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsIncrementalSearchEnabled {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsIncrementalSearchEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Insert additional file at sort position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsInsertItem {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsInsertItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The bookshelf reflects information in real time. If this setting is ON, inserts the added file in the current sort order position. When set to OFF, it is added to the end of the list. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsInsertItem_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsInsertItem.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filter RAR split files from display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsMultipleRarFilterEnabled {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsMultipleRarFilterEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For an RAR split file called &quot;.part[number].rar&quot;, only the file with the smallest number is displayed in the list. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsMultipleRarFilterEnabled_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsMultipleRarFilterEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After deleting the viewing book, open the next book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsOpenNextBookWhenRemove {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsOpenNextBookWhenRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort without file type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsOrderWithoutFileType {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsOrderWithoutFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform a search including subfolders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsSearchIncludeSubdirectories {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsSearchIncludeSubdirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchronize Folders tree with sync button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsSyncFolderTree {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsSyncFolderTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display bookmark symbols に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleBookmarkMark {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleBookmarkMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ★ mark is displayed in the bookmarked book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleBookmarkMark_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleBookmarkMark.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display history symbol に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleHistoryMark {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleHistoryMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A check mark is displayed in the book remaining in the history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleHistoryMark_Remarks {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleHistoryMark.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show number of items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_IsVisibleItemsCount {
            get {
                return ResourceManager.GetString("BookshelfConfig.IsVisibleItemsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default order of playlists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfConfig_PlaylistFolderOrder {
            get {
                return ResourceManager.GetString("BookshelfConfig.PlaylistFolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Copy {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cop_y to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_CopyToFolder {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.CopyToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Delete {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_DeleteBookmark {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.DeleteBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_DeleteHistory {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.DeleteHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Add folders... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_DestinationFolderOption {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.DestinationFolderOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Edit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Edit {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in e_xplorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Explorer {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Add External apps... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_ExternalAppOption {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.ExternalAppOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mov_e to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_MoveToFolder {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.MoveToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to _subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Open {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_OpenBook {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.OpenBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in external _app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_OpenExternalApp {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.OpenExternalApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in _Playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_OpenInPlaylist {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.OpenInPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rena_me に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Rename {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItem_Menu_Subfolder {
            get {
                return ResourceManager.GetString("BookshelfItem.Menu.Subfolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItemAccessor {
            get {
                return ResourceManager.GetString("BookshelfItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItemAccessor_Name {
            get {
                return ResourceManager.GetString("BookshelfItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfItemAccessor_Path {
            get {
                return ResourceManager.GetString("BookshelfItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Example: Select items that starts with &quot;A&quot;
        ///nv.Bookshelf.SelectedItems = nv.Bookshelf.Items.filter(e =&gt; e.Name.startsWith(&apos;A&apos;)) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Example {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_FolderOrder {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.FolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Items {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current bookshelf path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Path {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search box text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_SearchWord {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.SearchWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BookshelfPanelAccessor_Style {
            get {
                return ResourceManager.GetString("BookshelfPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Startup error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BootErrorDialog_Title {
            get {
                return ResourceManager.GetString("BootErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Startup options に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BootOptionDialog_Title {
            get {
                return ResourceManager.GetString("BootOptionDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushSource_Color {
            get {
                return ResourceManager.GetString("BrushSource.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushSource_ImageFileName {
            get {
                return ResourceManager.GetString("BrushSource.ImageFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Brush type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushSource_Type {
            get {
                return ResourceManager.GetString("BrushSource.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enlarge and display the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageFill {
            get {
                return ResourceManager.GetString("BrushType.ImageFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image tile に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageTile {
            get {
                return ResourceManager.GetString("BrushType.ImageTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit image to window size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageUniform {
            get {
                return ResourceManager.GetString("BrushType.ImageUniform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extend the image to the full window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_ImageUniformToFill {
            get {
                return ResourceManager.GetString("BrushType.ImageUniformToFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solid color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BrushType_SolidColor {
            get {
                return ResourceManager.GetString("BrushType.SolidColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache deleted に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CacheDeletedDialog_Title {
            get {
                return ResourceManager.GetString("CacheDeletedDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deletion of thumbnail cache failed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CacheDeletedFailedDialog_Title {
            get {
                return ResourceManager.GetString("CacheDeletedFailedDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelFullScreenCommand {
            get {
                return ResourceManager.GetString("CancelFullScreenCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Turn off fullscreen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelFullScreenCommand_Remarks {
            get {
                return ResourceManager.GetString("CancelFullScreenCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel script に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelScriptCommand {
            get {
                return ResourceManager.GetString("CancelScriptCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stops a running script that has a &quot;sleep&quot; instruction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelScriptCommand_Remarks {
            get {
                return ResourceManager.GetString("CancelScriptCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is not an AppData folder, so it will not be deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CannotDeleteDataException_Message {
            get {
                return ResourceManager.GetString("CannotDeleteDataException_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryCommand {
            get {
                return ResourceManager.GetString("ClearHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("ClearHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history in place に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryInPlaceCommand {
            get {
                return ResourceManager.GetString("ClearHistoryInPlaceCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history in the current location of the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ClearHistoryInPlaceCommand_Remarks {
            get {
                return ResourceManager.GetString("ClearHistoryInPlaceCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quit application に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseApplicationCommand {
            get {
                return ResourceManager.GetString("CloseApplicationCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Quit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseApplicationCommand_Menu {
            get {
                return ResourceManager.GetString("CloseApplicationCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quit this application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseApplicationCommand_Remarks {
            get {
                return ResourceManager.GetString("CloseApplicationCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Curve に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorSelectEffectUnit_Curve {
            get {
                return ResourceManager.GetString("ColorSelectEffectUnit.Curve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorSelectEffectUnit_Hue {
            get {
                return ResourceManager.GetString("ColorSelectEffectUnit.Hue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Range に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorSelectEffectUnit_Range {
            get {
                return ResourceManager.GetString("ColorSelectEffectUnit.Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_DarkColor {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.DarkColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Desaturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_Desaturation {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.Desaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Light color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_LightColor {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.LightColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tone amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ColorToneEffectUnit_ToneAmount {
            get {
                return ResourceManager.GetString("ColorToneEffectUnit.ToneAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor {
            get {
                return ResourceManager.GetString("CommandAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute the command. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command argument. The contents vary depending on the command. It is a variable length argument. (Optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_args {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // open C:\Foo\Bar.zip
        ///nv.Command.LoadAs.Execute(&quot;C:\\Foo\\Bar.zip&quot;) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Some commands allow you to specify arguments.These can be used for the purpose of omitting the user&apos;s selection by specifying the argument in the command that normally displays the dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_Remarks {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Success or failure of command issuance. Commands may not be issued during loading. The success or failure of the command itself is not determined. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Execute_Returns {
            get {
                return ResourceManager.GetString("CommandAccessor.Execute.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display a message when executing a command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_IsShowMessage {
            get {
                return ResourceManager.GetString("CommandAccessor.IsShowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse gestures に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_MouseGesture {
            get {
                return ResourceManager.GetString("CommandAccessor.MouseGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Set &quot;↑←↓&quot; to the mouse gesture of ViewRotateLeft command
        ///nv.Command.ViewRotateLeft.MouseGesture = &quot;ULD&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_MouseGesture_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.MouseGesture.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can get and set command parameters. The settings are permanent. The properties differ for each command. For details, see the command list below. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Parameter {
            get {
                return ResourceManager.GetString("CommandAccessor.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Change the rotation amount of &quot;ViewRotateLeft&quot; command to 45 degrees
        ///nv.Command.ViewRotateLeft.Parameter.Angle = 45 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Parameter_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.Parameter.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporarily change the command parameter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Rotate counterclockwise by specifying 5 degrees
        ///nv.Command.ViewRotateLeft.Patch({&quot;Angle&quot;: 5}).Execute() に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the command parameter to be overwritten temporarily in JSON format. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch_patch {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch.patch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Returns its own command accessors as is. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_Patch_Returns {
            get {
                return ResourceManager.GetString("CommandAccessor.Patch.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcuts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_ShortCutKey {
            get {
                return ResourceManager.GetString("CommandAccessor.ShortCutKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Set &quot;Ctrl+A&quot; as shortcut for ViewRotateLeft command
        ///nv.Command.ViewRotateLeft.ShourtCutKey = &quot;Ctrl+A&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_ShortCutKey_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.ShortCutKey.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_TouchGesture {
            get {
                return ResourceManager.GetString("CommandAccessor.TouchGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Set &quot;TouchCenter&quot; for touch operation of ViewRotateLeft command
        ///nv.Command.ViewRotateLeft.TouchGesture = &quot;TouchCenter&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandAccessor_TouchGesture_Example {
            get {
                return ResourceManager.GetString("CommandAccessor.TouchGesture.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow access key に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsAccessKeyEnabled {
            get {
                return ResourceManager.GetString("CommandConfig.IsAccessKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If it is set to OFF, system operation by Alt key will be invalid and malfunction will be eliminated when used with command shortcut. However Alt+F4 is always active. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsAccessKeyEnabled_Remarks {
            get {
                return ResourceManager.GetString("CommandConfig.IsAccessKeyEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Limit tilt wheel operation to one time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsHorizontalWheelLimitedOnce {
            get {
                return ResourceManager.GetString("CommandConfig.IsHorizontalWheelLimitedOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tilt wheel Executes one command with one operation. If you are using a stepless mouse, turn it off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsHorizontalWheelLimitedOnce_Remarks {
            get {
                return ResourceManager.GetString("CommandConfig.IsHorizontalWheelLimitedOnce.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Swap movement direction of page movement command according to slider direction に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMove {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When the slider is from left to right, reverse the page moving direction. The setting of the command to work is set by &quot;@ReversibleCommandParameter.IsReverse&quot; of the command parameter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMove_Remarks {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Replace when operating wheel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMoveWheel {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMoveWheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can select correspondence only for wheel operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandConfig_IsReversePageMoveWheel_Remarks {
            get {
                return ResourceManager.GetString("CommandConfig.IsReversePageMoveWheel.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Bookmark {
            get {
                return ResourceManager.GetString("CommandGroup.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_BookMove {
            get {
                return ResourceManager.GetString("CommandGroup.BookMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_BookOrder {
            get {
                return ResourceManager.GetString("CommandGroup.BookOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Effect {
            get {
                return ResourceManager.GetString("CommandGroup.Effect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_File {
            get {
                return ResourceManager.GetString("CommandGroup.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_FilmStrip {
            get {
                return ResourceManager.GetString("CommandGroup.FilmStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_ImageScale {
            get {
                return ResourceManager.GetString("CommandGroup.ImageScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Move {
            get {
                return ResourceManager.GetString("CommandGroup.Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (none) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_None {
            get {
                return ResourceManager.GetString("CommandGroup.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Other に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Other {
            get {
                return ResourceManager.GetString("CommandGroup.Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_PageOrder {
            get {
                return ResourceManager.GetString("CommandGroup.PageOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_PageSetting {
            get {
                return ResourceManager.GetString("CommandGroup.PageSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Panel {
            get {
                return ResourceManager.GetString("CommandGroup.Panel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Playlist {
            get {
                return ResourceManager.GetString("CommandGroup.Playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Script {
            get {
                return ResourceManager.GetString("CommandGroup.Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Video {
            get {
                return ResourceManager.GetString("CommandGroup.Video", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_ViewManipulation {
            get {
                return ResourceManager.GetString("CommandGroup.ViewManipulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandGroup_Window {
            get {
                return ResourceManager.GetString("CommandGroup.Window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Provides app-specific features. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost {
            get {
                return ResourceManager.GetString("CommandHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command arguments are stored in this array. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Args {
            get {
                return ResourceManager.GetString("CommandHost.Args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current book accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Book {
            get {
                return ResourceManager.GetString("CommandHost.Book", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Bookmark {
            get {
                return ResourceManager.GetString("CommandHost.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Bookshelf {
            get {
                return ResourceManager.GetString("CommandHost.Bookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An associative array of command accessors. The commands are the same as those displayed under Options &gt; Command Settings. For details, refer to &lt;a href=&quot;#CommandList&quot;/&gt;Command list&lt;/a&gt;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Command {
            get {
                return ResourceManager.GetString("CommandHost.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Execute &quot;NextPage&quot; command
        ///nv.Command[&quot;NextPage&quot;].Execute()
        ///// As well
        ///nv.Command.NextPage.Execute() に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Command_Example {
            get {
                return ResourceManager.GetString("CommandHost.Command.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An associative array of application settings. Refers to and changes the set value. For the types of set values, refer to &lt;a href=&quot;#ConfigList&quot;&gt;Config list&lt;/a&gt;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Config {
            get {
                return ResourceManager.GetString("CommandHost.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Change the theme color to dark
        ///nv.Config.Theme.ThemeType = &quot;Dark&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Config_Example {
            get {
                return ResourceManager.GetString("CommandHost.Config.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Effect {
            get {
                return ResourceManager.GetString("CommandHost.Effect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Environment accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Environment {
            get {
                return ResourceManager.GetString("CommandHost.Environment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_History {
            get {
                return ResourceManager.GetString("CommandHost.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Information {
            get {
                return ResourceManager.GetString("CommandHost.Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Navigator {
            get {
                return ResourceManager.GetString("CommandHost.Navigator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_PageList {
            get {
                return ResourceManager.GetString("CommandHost.PageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Playlist {
            get {
                return ResourceManager.GetString("CommandHost.Playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0: OK / 1: OKCancel / 2: YesNo
        ///Button types (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_commands {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.commands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   isYes = nv.ShowDialog(&quot;Is this a pen?&quot;, &quot;I think it&apos;s a pen, really?&quot;, 2)
        ///if (isYes) {
        ///    nv.ShowDialog(&quot;Good.&quot;)
        ///} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_Example {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Message (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_message {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Returns true if positive selection (&quot;OK&quot; or &quot;Yes&quot;), false otherwise. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_Returns {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowDialog_title {
            get {
                return ResourceManager.GetString("CommandHost.ShowDialog.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the input dialog. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Input text. Null when canceled に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog_Returns {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default text (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog_text {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog.text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowInputDialog_title {
            get {
                return ResourceManager.GetString("CommandHost.ShowInputDialog.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display a message on the screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowMessage {
            get {
                return ResourceManager.GetString("CommandHost.ShowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowMessage_message {
            get {
                return ResourceManager.GetString("CommandHost.ShowMessage.message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the message as a toast. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowToast {
            get {
                return ResourceManager.GetString("CommandHost.ShowToast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_ShowToast_message {
            get {
                return ResourceManager.GetString("CommandHost.ShowToast.message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An associative array for storing values. The value saved in this object will be retained during app execution. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Values {
            get {
                return ResourceManager.GetString("CommandHost.Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Store value
        ///nv.Values[&quot;Test&quot;] = &quot;Hello!&quot;
        ///// As well
        ///nv.Values.Test = &quot;Hello!&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandHost_Values_Example {
            get {
                return ResourceManager.GetString("CommandHost.Values.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Command {
            get {
                return ResourceManager.GetString("CommandList.Header.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Description {
            get {
                return ResourceManager.GetString("CommandList.Header.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visible に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Display {
            get {
                return ResourceManager.GetString("CommandList.Header.Display", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Message display at command execution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Display_ToolTip {
            get {
                return ResourceManager.GetString("CommandList.Header.Display.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Gesture {
            get {
                return ResourceManager.GetString("CommandList.Header.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Group に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Group {
            get {
                return ResourceManager.GetString("CommandList.Header.Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Shortcut {
            get {
                return ResourceManager.GetString("CommandList.Header.Shortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_Header_Touch {
            get {
                return ResourceManager.GetString("CommandList.Header.Touch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandList_ResetButton {
            get {
                return ResourceManager.GetString("CommandList.ResetButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Clone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandListItem_Menu_Clone {
            get {
                return ResourceManager.GetString("CommandListItem.Menu.Clone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandListItem_Menu_Delete {
            get {
                return ResourceManager.GetString("CommandListItem.Menu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Edit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandListItem_Menu_Edit {
            get {
                return ResourceManager.GetString("CommandListItem.Menu.Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandListItem_Menu_Setting {
            get {
                return ResourceManager.GetString("CommandListItem.Menu.Setting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter sharing with &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandListItem_Message_ShareParameter {
            get {
                return ResourceManager.GetString("CommandListItem.Message.ShareParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameters to share with &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandParameter_Share {
            get {
                return ResourceManager.GetString("CommandParameter.Share", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There are no parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandParameterControl_Empty {
            get {
                return ResourceManager.GetString("CommandParameterControl.Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset all command settings. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandResetWindow_Message {
            get {
                return ResourceManager.GetString("CommandResetWindow.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandResetWindow_ResetType_Title {
            get {
                return ResourceManager.GetString("CommandResetWindow.ResetType.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommandResetWindow_Title {
            get {
                return ResourceManager.GetString("CommandResetWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no file that can be read in &quot;{0}&quot;. Do you also load subfolders or compressed files? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ConfirmRecursiveDialog_Message {
            get {
                return ResourceManager.GetString("ConfirmRecursiveDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you also read subfolders? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ConfirmRecursiveDialog_Title {
            get {
                return ResourceManager.GetString("ConfirmRecursiveDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlConfig_IsSelected {
            get {
                return ResourceManager.GetString("ControlConfig.IsSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ControlConfig_IsVisible {
            get {
                return ResourceManager.GetString("ControlConfig.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyErrorDialog_Title {
            get {
                return ResourceManager.GetString("CopyErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommand {
            get {
                return ResourceManager.GetString("CopyFileCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommand_Menu {
            get {
                return ResourceManager.GetString("CopyFileCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy the file to the clipboard. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommand_Remarks {
            get {
                return ResourceManager.GetString("CopyFileCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For compressed files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommandParameter_ArchivePolicy {
            get {
                return ResourceManager.GetString("CopyFileCommandParameter.ArchivePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommandParameter_MultiPagePolicy {
            get {
                return ResourceManager.GetString("CopyFileCommandParameter.MultiPagePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Text copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommandParameter_TextCopyPolicy {
            get {
                return ResourceManager.GetString("CopyFileCommandParameter.TextCopyPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If &quot;@TextCopyPolicy.OriginalPath&quot; is set, the text for temporary files will be the pathname of the original file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyFileCommandParameter_TextCopyPolicy_Remarks {
            get {
                return ResourceManager.GetString("CopyFileCommandParameter.TextCopyPolicy.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyImageCommand {
            get {
                return ResourceManager.GetString("CopyImageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyImageCommand_Menu {
            get {
                return ResourceManager.GetString("CopyImageCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy the image to the clipboard. For 2 page display, copy only the main page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyImageCommand_Remarks {
            get {
                return ResourceManager.GetString("CopyImageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CopyImageErrorDialog_Title {
            get {
                return ResourceManager.GetString("CopyImageErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy to clipboard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CriticalExceptionDialog_Copy {
            get {
                return ResourceManager.GetString("CriticalExceptionDialog.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error details: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CriticalExceptionDialog_Header {
            get {
                return ResourceManager.GetString("CriticalExceptionDialog.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Details of the error are saved in &lt;a href=&quot;{0}&quot;&gt;{0}&lt;/a&gt; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CriticalExceptionDialog_LogPath {
            get {
                return ResourceManager.GetString("CriticalExceptionDialog.LogPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An error occurred. Quit the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CriticalExceptionDialog_Message {
            get {
                return ResourceManager.GetString("CriticalExceptionDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView - Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CriticalExceptionDialog_Title {
            get {
                return ResourceManager.GetString("CriticalExceptionDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_Color {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_Image {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_ImageSelect {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.ImageSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select an image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomBackgroundControl_ImageSelect_Remarks {
            get {
                return ResourceManager.GetString("CustomBackgroundControl.ImageSelect.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Half view aspect ratio に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_HalfView {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.HalfView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Free に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_None {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep the original aspect ratio に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_Origin {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.Origin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   1:1 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_Ratio_1_1 {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.Ratio_1_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   16:9 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_Ratio_16_9 {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.Ratio_16_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2:3 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_Ratio_2_3 {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.Ratio_2_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   4:3 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_Ratio_4_3 {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.Ratio_4_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   8:9 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_Ratio_8_9 {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.Ratio_8_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View aspect ratio に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSizeAspectRatio_View {
            get {
                return ResourceManager.GetString("CustomSizeAspectRatio.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   User data deleted. Quit NeeView. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteApplicationDataCompleteDialog_Message {
            get {
                return ResourceManager.GetString("DeleteApplicationDataCompleteDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It has been deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteApplicationDataCompleteDialog_Title {
            get {
                return ResourceManager.GetString("DeleteApplicationDataCompleteDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete user data. Are you sure?
        ///
        ///The following data will be deleted
        ///- Setting file
        ///- History file
        ///- Bookmark file
        ///- Cache file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteApplicationDataDialog_Message {
            get {
                return ResourceManager.GetString("DeleteApplicationDataDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete user data. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteApplicationDataDialog_Title {
            get {
                return ResourceManager.GetString("DeleteApplicationDataDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It can not be deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteApplicationDataErrorDialog_Title {
            get {
                return ResourceManager.GetString("DeleteApplicationDataErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteBookCommand {
            get {
                return ResourceManager.GetString("DeleteBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteBookCommand_Menu {
            get {
                return ResourceManager.GetString("DeleteBookCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete the currently viewed folder or compressed file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteBookCommand_Remarks {
            get {
                return ResourceManager.GetString("DeleteBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteFileCommand {
            get {
                return ResourceManager.GetString("DeleteFileCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteFileCommand_Menu {
            get {
                return ResourceManager.GetString("DeleteFileCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete the file. It can not be deleted for compressed files. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DeleteFileCommand_Remarks {
            get {
                return ResourceManager.GetString("DeleteFileCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Destination folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DestinationFolderDialog_Title {
            get {
                return ResourceManager.GetString("DestinationFolderDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DestinationFolderEditDialog_Path_Remarks {
            get {
                return ResourceManager.GetString("DestinationFolderEditDialog.Path.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DestinationFolderEditDialog_Title {
            get {
                return ResourceManager.GetString("DestinationFolderEditDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This operation can not be changed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionLockedDialog_Title {
            get {
                return ResourceManager.GetString("DragActionLockedDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset all drag operations. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionResetDialog_Message {
            get {
                return ResourceManager.GetString("DragActionResetDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset the drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionResetDialog_Title {
            get {
                return ResourceManager.GetString("DragActionResetDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag action settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionTable_Elements {
            get {
                return ResourceManager.GetString("DragActionTable.Elements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Angle {
            get {
                return ResourceManager.GetString("DragActionType.Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotation (horizontal slide) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_AngleSlider {
            get {
                return ResourceManager.GetString("DragActionType.AngleSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_FlipHorizontal {
            get {
                return ResourceManager.GetString("DragActionType.FlipHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_FlipVertical {
            get {
                return ResourceManager.GetString("DragActionType.FlipVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Gesture {
            get {
                return ResourceManager.GetString("DragActionType.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select area to enlarge に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_MarqueeZoom {
            get {
                return ResourceManager.GetString("DragActionType.MarqueeZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Move {
            get {
                return ResourceManager.GetString("DragActionType.Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move (scale dependent) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_MoveScale {
            get {
                return ResourceManager.GetString("DragActionType.MoveScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_None {
            get {
                return ResourceManager.GetString("DragActionType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scaling に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_Scale {
            get {
                return ResourceManager.GetString("DragActionType.Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scaling (horizontal slide) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_ScaleSlider {
            get {
                return ResourceManager.GetString("DragActionType.ScaleSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scaling (horizontal slide, centered) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_ScaleSliderCentered {
            get {
                return ResourceManager.GetString("DragActionType.ScaleSliderCentered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragActionType_WindowMove {
            get {
                return ResourceManager.GetString("DragActionType.WindowMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cursor position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragControlCenter_Cursor {
            get {
                return ResourceManager.GetString("DragControlCenter.Cursor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragControlCenter_Target {
            get {
                return ResourceManager.GetString("DragControlCenter.Target", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DragControlCenter_View {
            get {
                return ResourceManager.GetString("DragControlCenter.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Remarks {
            get {
                return ResourceManager.GetString("EditCommandWindow.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_General {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Gesture {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Parameter {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Shortcut {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Shortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Tab_Touch {
            get {
                return ResourceManager.GetString("EditCommandWindow.Tab.Touch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Title {
            get {
                return ResourceManager.GetString("EditCommandWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display a message when executing a command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditCommandWindow_Visible {
            get {
                return ResourceManager.GetString("EditCommandWindow.Visible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_CustomSize {
            get {
                return ResourceManager.GetString("Effect.CustomSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_Effect {
            get {
                return ResourceManager.GetString("Effect.Effect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_EffectType {
            get {
                return ResourceManager.GetString("Effect.EffectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_Grid {
            get {
                return ResourceManager.GetString("Effect.Grid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_KeepDot {
            get {
                return ResourceManager.GetString("Effect.KeepDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_ResizeFilter {
            get {
                return ResourceManager.GetString("Effect.ResizeFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Interpolation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_ResizeInterpolation {
            get {
                return ResourceManager.GetString("Effect.ResizeInterpolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_ResizeReset {
            get {
                return ResourceManager.GetString("Effect.ResizeReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unsharp mask に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_ResizeUnsharp {
            get {
                return ResourceManager.GetString("Effect.ResizeUnsharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_Title {
            get {
                return ResourceManager.GetString("Effect.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Trim に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Effect_Trim {
            get {
                return ResourceManager.GetString("Effect.Trim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectPanelAccessor {
            get {
                return ResourceManager.GetString("EffectPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Bloom {
            get {
                return ResourceManager.GetString("EffectType.Bloom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blur に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Blur {
            get {
                return ResourceManager.GetString("EffectType.Blur", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color select に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_ColorSelect {
            get {
                return ResourceManager.GetString("EffectType.ColorSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color tone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_ColorTone {
            get {
                return ResourceManager.GetString("EffectType.ColorTone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Embossed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Embossed {
            get {
                return ResourceManager.GetString("EffectType.Embossed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HSV に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Hsv {
            get {
                return ResourceManager.GetString("EffectType.Hsv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Level に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Level {
            get {
                return ResourceManager.GetString("EffectType.Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Magnify に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Magnify {
            get {
                return ResourceManager.GetString("EffectType.Magnify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Monochrome に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Monochrome {
            get {
                return ResourceManager.GetString("EffectType.Monochrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_None {
            get {
                return ResourceManager.GetString("EffectType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pixelate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Pixelate {
            get {
                return ResourceManager.GetString("EffectType.Pixelate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ripple に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Ripple {
            get {
                return ResourceManager.GetString("EffectType.Ripple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sharpen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Sharpen {
            get {
                return ResourceManager.GetString("EffectType.Sharpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Swirl に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EffectType_Swirl {
            get {
                return ResourceManager.GetString("EffectType.Swirl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EmbossedEffectUnit_Amount {
            get {
                return ResourceManager.GetString("EmbossedEffectUnit.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EmbossedEffectUnit_Color {
            get {
                return ResourceManager.GetString("EmbossedEffectUnit.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EmbossedEffectUnit_Height {
            get {
                return ResourceManager.GetString("EmbossedEffectUnit.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Environment accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnvironmentAccessor {
            get {
                return ResourceManager.GetString("EnvironmentAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView executable file path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnvironmentAccessor_NeeViewPath {
            get {
                return ResourceManager.GetString("EnvironmentAccessor.NeeViewPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting file path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EnvironmentAccessor_UserSettingFilePath {
            get {
                return ResourceManager.GetString("EnvironmentAccessor.UserSettingFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifContrast_Hard {
            get {
                return ResourceManager.GetString("ExifContrast.Hard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifContrast_Normal {
            get {
                return ResourceManager.GetString("ExifContrast.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Soft に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifContrast_Soft {
            get {
                return ResourceManager.GetString("ExifContrast.Soft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Action program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_ActionProgram {
            get {
                return ResourceManager.GetString("ExifExposureProgram.ActionProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Aperture priority に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_AperturePriority {
            get {
                return ResourceManager.GetString("ExifExposureProgram.AperturePriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Creative program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_CreativeProgram {
            get {
                return ResourceManager.GetString("ExifExposureProgram.CreativeProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_LandscapeMode {
            get {
                return ResourceManager.GetString("ExifExposureProgram.LandscapeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manual に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_Manual {
            get {
                return ResourceManager.GetString("ExifExposureProgram.Manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normal program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_NormalProgram {
            get {
                return ResourceManager.GetString("ExifExposureProgram.NormalProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Not defined に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_NotDefined {
            get {
                return ResourceManager.GetString("ExifExposureProgram.NotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Portrait mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_PortraitMode {
            get {
                return ResourceManager.GetString("ExifExposureProgram.PortraitMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shutter priority に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifExposureProgram_ShutterPriority {
            get {
                return ResourceManager.GetString("ExifExposureProgram.ShutterPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash did not fire に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashDidNotFire {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashDidNotFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash did not fire, auto mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashDidNotFire_AutoMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashDidNotFire_AutoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash did not fire, compulsory flash mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashDidNotFire_CompulsoryFlashMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashDidNotFire_CompulsoryFlashMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, auto mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_AutoMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_AutoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, auto mode, red-eye reduction mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_AutoMode_RedEyeReductionMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_AutoMode_RedEyeReductionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, auto mode, return light detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_AutoMode_ReturnLightDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_AutoMode_ReturnLightDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, auto mode, return light detected, red-eye reduction mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_AutoMode_ReturnLightDetected_RedEyeReductionMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_AutoMode_ReturnLightDetected_RedEyeReductionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, auto mode, return light not detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_AutoMode_ReturnLightNotDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_AutoMode_ReturnLightNotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, auto mode, return light not detected, red-eye reduction mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_AutoMode_ReturnLightNotDetected_RedEyeReductionMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_AutoMode_ReturnLightNotDetected_RedEyeReductionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, compulsory flash mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_CompulsoryFlashMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_CompulsoryFlashMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, compulsory flash mode, red-eye reduction mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_CompulsoryFlashMode_RedEyeReductionMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_CompulsoryFlashMode_RedEyeReductionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, compulsory flash mode, red-eye reduction mode, return light detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_CompulsoryFlashMode_RedEyeReductionMode_ReturnLightDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_CompulsoryFlashMode_RedEyeReductionMode_ReturnLightDetec" +
                        "ted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_CompulsoryFlashMode_RedEyeReductionMode_ReturnLightNotDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_CompulsoryFlashMode_RedEyeReductionMode_ReturnLightNotDe" +
                        "tected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, compulsory flash mode, return light detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_CompulsoryFlashMode_ReturnLightDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_CompulsoryFlashMode_ReturnLightDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, compulsory flash mode, return light not detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_CompulsoryFlashMode_ReturnLightNotDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_CompulsoryFlashMode_ReturnLightNotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, red-eye reduction mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_RedEyeReductionMode {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_RedEyeReductionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, red-eye reduction mode, return light detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_RedEyeReductionMode_ReturnLightDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_RedEyeReductionMode_ReturnLightDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash fired, red-eye reduction mode, return light not detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_FlashFired_RedEyeReductionMode_ReturnLightNotDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.FlashFired_RedEyeReductionMode_ReturnLightNotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No flash function に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_NoFlashFunction {
            get {
                return ResourceManager.GetString("ExifFlashMode.NoFlashFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Strobe return light detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_StrobeReturnLightDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.StrobeReturnLightDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Strobe return light not detected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifFlashMode_StrobeReturnLightNotDetected {
            get {
                return ResourceManager.GetString("ExifFlashMode.StrobeReturnLightNotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cloudy weather に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_CloudyWeather {
            get {
                return ResourceManager.GetString("ExifLightSource.CloudyWeather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cool white fluorescent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_CoolWhiteFluorescent {
            get {
                return ResourceManager.GetString("ExifLightSource.CoolWhiteFluorescent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   D50 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_D50 {
            get {
                return ResourceManager.GetString("ExifLightSource.D50", resourceCulture);
            }
        }
        
        /// <summary>
        ///   D55 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_D55 {
            get {
                return ResourceManager.GetString("ExifLightSource.D55", resourceCulture);
            }
        }
        
        /// <summary>
        ///   D65 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_D65 {
            get {
                return ResourceManager.GetString("ExifLightSource.D65", resourceCulture);
            }
        }
        
        /// <summary>
        ///   D75 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_D75 {
            get {
                return ResourceManager.GetString("ExifLightSource.D75", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Daylight に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_Daylight {
            get {
                return ResourceManager.GetString("ExifLightSource.Daylight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Daylight fluorescent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_DaylightFluorescent {
            get {
                return ResourceManager.GetString("ExifLightSource.DaylightFluorescent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Day white fluorescent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_DayWhiteFluorescent {
            get {
                return ResourceManager.GetString("ExifLightSource.DayWhiteFluorescent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fine weather に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_FineWeather {
            get {
                return ResourceManager.GetString("ExifLightSource.FineWeather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_Flash {
            get {
                return ResourceManager.GetString("ExifLightSource.Flash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fluorescent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_Fluorescent {
            get {
                return ResourceManager.GetString("ExifLightSource.Fluorescent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ISO studio tungsten に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_ISOStudioTungsten {
            get {
                return ResourceManager.GetString("ExifLightSource.ISOStudioTungsten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Other light source に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_OtherLightSource {
            get {
                return ResourceManager.GetString("ExifLightSource.OtherLightSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shade に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_Shade {
            get {
                return ResourceManager.GetString("ExifLightSource.Shade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard light A に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_StandardLightA {
            get {
                return ResourceManager.GetString("ExifLightSource.StandardLightA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard light B に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_StandardLightB {
            get {
                return ResourceManager.GetString("ExifLightSource.StandardLightB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard light C に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_StandardLightC {
            get {
                return ResourceManager.GetString("ExifLightSource.StandardLightC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tungsten に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_Tungsten {
            get {
                return ResourceManager.GetString("ExifLightSource.Tungsten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unknown に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_Unknown {
            get {
                return ResourceManager.GetString("ExifLightSource.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White fluorescent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifLightSource_WhiteFluorescent {
            get {
                return ResourceManager.GetString("ExifLightSource.WhiteFluorescent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Average に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_Average {
            get {
                return ResourceManager.GetString("ExifMeteringMode.Average", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center weighted average に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_CenterWeightedAverage {
            get {
                return ResourceManager.GetString("ExifMeteringMode.CenterWeightedAverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Multi spot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_MultiSpot {
            get {
                return ResourceManager.GetString("ExifMeteringMode.MultiSpot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Other に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_Other {
            get {
                return ResourceManager.GetString("ExifMeteringMode.Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Partial に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_Partial {
            get {
                return ResourceManager.GetString("ExifMeteringMode.Partial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pattern に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_Pattern {
            get {
                return ResourceManager.GetString("ExifMeteringMode.Pattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Spot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_Spot {
            get {
                return ResourceManager.GetString("ExifMeteringMode.Spot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unknown に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifMeteringMode_Unknown {
            get {
                return ResourceManager.GetString("ExifMeteringMode.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mirror horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_MirrorHorizontal {
            get {
                return ResourceManager.GetString("ExifOrientation.MirrorHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mirror horizontal, rotate270 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_MirrorHorizontal_Rotate270 {
            get {
                return ResourceManager.GetString("ExifOrientation.MirrorHorizontal_Rotate270", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mirror horizontal, rotate90 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_MirrorHorizontal_Rotate90 {
            get {
                return ResourceManager.GetString("ExifOrientation.MirrorHorizontal_Rotate90", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mirror vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_MirrorVertical {
            get {
                return ResourceManager.GetString("ExifOrientation.MirrorVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_Normal {
            get {
                return ResourceManager.GetString("ExifOrientation.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate180 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_Rotate180 {
            get {
                return ResourceManager.GetString("ExifOrientation.Rotate180", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate270 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_Rotate270 {
            get {
                return ResourceManager.GetString("ExifOrientation.Rotate270", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate90 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifOrientation_Rotate90 {
            get {
                return ResourceManager.GetString("ExifOrientation.Rotate90", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black is zero に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_BlackIsZero {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.BlackIsZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CFA に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_CFA {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.CFA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CIE L*a*b* に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_CIELab {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.CIELab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CMYK に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_CMYK {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.CMYK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ICC L*a*b* に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_ICCLab {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.ICCLab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ITU L*a*b* に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_ITULab {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.ITULab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Linear raw に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_LinearRaw {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.LinearRaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   LogLuv に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_LogLuv {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.LogLuv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Palette color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_PaletteColor {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.PaletteColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pixar LogL に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_PixarLogL {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.PixarLogL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RGB に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_RGB {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.RGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transparency mask に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_TransparencyMask {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.TransparencyMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White is zero に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_WhiteIsZero {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.WhiteIsZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   YCbCr に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifPhotometricInterpretation_YCbCr {
            get {
                return ResourceManager.GetString("ExifPhotometricInterpretation.YCbCr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HighSaturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifSaturation_HighSaturation {
            get {
                return ResourceManager.GetString("ExifSaturation.HighSaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   LowSaturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifSaturation_LowSaturation {
            get {
                return ResourceManager.GetString("ExifSaturation.LowSaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifSaturation_Normal {
            get {
                return ResourceManager.GetString("ExifSaturation.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifSharpness_Hard {
            get {
                return ResourceManager.GetString("ExifSharpness.Hard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifSharpness_Normal {
            get {
                return ResourceManager.GetString("ExifSharpness.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Soft に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifSharpness_Soft {
            get {
                return ResourceManager.GetString("ExifSharpness.Soft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifWhiteBalance_AutoWhiteBalance {
            get {
                return ResourceManager.GetString("ExifWhiteBalance.AutoWhiteBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manual に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExifWhiteBalance_ManualWhiteBalance {
            get {
                return ResourceManager.GetString("ExifWhiteBalance.ManualWhiteBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Register in the Explorer context menu. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExplorerContextMenu_IsEnabled {
            get {
                return ResourceManager.GetString("ExplorerContextMenu.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add &quot;Open in NeeView&quot; to the Explorer context menu. This feature uses the registry. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExplorerContextMenu_IsEnabled_Remarks {
            get {
                return ResourceManager.GetString("ExplorerContextMenu.IsEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in Nee&amp;View に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExplorerContextMenu_OpenInNeeView {
            get {
                return ResourceManager.GetString("ExplorerContextMenu.OpenInNeeView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportBackupCommand {
            get {
                return ResourceManager.GetString("ExportBackupCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export settings... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportBackupCommand_Menu {
            get {
                return ResourceManager.GetString("ExportBackupCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Create backups of settings, history, bookmarks. The thumbnail cache is not backed up. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportBackupCommand_Remarks {
            get {
                return ResourceManager.GetString("ExportBackupCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Backup file path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportBackupCommandParameter_FileName {
            get {
                return ResourceManager.GetString("ExportBackupCommandParameter.FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export all settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportDialog_Title {
            get {
                return ResourceManager.GetString("ExportDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportErrorDialog_Title {
            get {
                return ResourceManager.GetString("ExportErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &quot;{0}&quot; saved. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImage_Message_Success {
            get {
                return ResourceManager.GetString("ExportImage.Message.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save as に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommand {
            get {
                return ResourceManager.GetString("ExportImageAsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Save as... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommand_Menu {
            get {
                return ResourceManager.GetString("ExportImageAsCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save the image to a file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommand_Remarks {
            get {
                return ResourceManager.GetString("ExportImageAsCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default output folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_ExportFolder {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.ExportFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output folder at startup. During startup, it follows the changed storage location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_ExportFolder_Remarks {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.ExportFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_QualityLevel {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.QualityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used only when conversion is required. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageAsCommandParameter_QualityLevel_Remarks {
            get {
                return ResourceManager.GetString("ExportImageAsCommandParameter.QualityLevel.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommand {
            get {
                return ResourceManager.GetString("ExportImageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Save に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommand_Menu {
            get {
                return ResourceManager.GetString("ExportImageCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save the image to a file. The storage folder is specified by a command parameter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommand_Remarks {
            get {
                return ResourceManager.GetString("ExportImageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_ExportFolder {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.ExportFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output file format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_FileFormat {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.FileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Used when &quot;@ExportImageCommandParameter.Mode&quot; is &quot;@ExportImageMode.View&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_FileFormat_Remarks {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.FileFormat.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output file name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_FileNameMode {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.FileNameMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_HasBackground {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.HasBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output image type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_Mode {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_QualityLevel {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.QualityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used only when conversion is required. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageCommandParameter_QualityLevel_Remarks {
            get {
                return ResourceManager.GetString("ExportImageCommandParameter.QualityLevel.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book name + page number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFileNameMode_BookPageNumber {
            get {
                return ResourceManager.GetString("ExportImageFileNameMode.BookPageNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFileNameMode_Deault {
            get {
                return ResourceManager.GetString("ExportImageFileNameMode.Deault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original file name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFileNameMode_Original {
            get {
                return ResourceManager.GetString("ExportImageFileNameMode.Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JPEG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFormat_Jpeg {
            get {
                return ResourceManager.GetString("ExportImageFormat.Jpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PNG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageFormat_Png {
            get {
                return ResourceManager.GetString("ExportImageFormat.Png", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save as original file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageMode_Original {
            get {
                return ResourceManager.GetString("ExportImageMode.Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageMode_View {
            get {
                return ResourceManager.GetString("ExportImageMode.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default destination folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_Folder {
            get {
                return ResourceManager.GetString("ExportImageWindow.Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_InclideBackground {
            get {
                return ResourceManager.GetString("ExportImageWindow.InclideBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output image type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_Mode {
            get {
                return ResourceManager.GetString("ExportImageWindow.Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save as... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_SaveAs {
            get {
                return ResourceManager.GetString("ExportImageWindow.SaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportImageWindow_Title {
            get {
                return ResourceManager.GetString("ExportImageWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to save playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExportPlaylistErrorDialog_Title {
            get {
                return ResourceManager.GetString("ExportPlaylistErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External apps に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalAppDialog_Title {
            get {
                return ResourceManager.GetString("ExternalAppDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalAppEditDialog_Title {
            get {
                return ResourceManager.GetString("ExternalAppEditDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connect to the net with a web browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalProcess_ConfirmBrowserDialog_Message {
            get {
                return ResourceManager.GetString("ExternalProcess.ConfirmBrowserDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a web browser. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalProcess_ConfirmBrowserDialog_Title {
            get {
                return ResourceManager.GetString("ExternalProcess.ConfirmBrowserDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalProgramType_Normal {
            get {
                return ResourceManager.GetString("ExternalProgramType.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Protocol に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExternalProgramType_Protocol {
            get {
                return ResourceManager.GetString("ExternalProgramType.Protocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to save bookmark file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FailedToSaveDataDialog_Bookmark_Message {
            get {
                return ResourceManager.GetString("FailedToSaveDataDialog.Bookmark.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to save history file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FailedToSaveDataDialog_History_Message {
            get {
                return ResourceManager.GetString("FailedToSaveDataDialog.History.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to save setting file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FailedToSaveDataDialog_Setting_Message {
            get {
                return ResourceManager.GetString("FailedToSaveDataDialog.Setting.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to save data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FailedToSaveDataDialog_Title {
            get {
                return ResourceManager.GetString("FailedToSaveDataDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileDeleteBookDialog_Title {
            get {
                return ResourceManager.GetString("FileDeleteBookDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to delete this {0} ? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileDeleteDialog_Message {
            get {
                return ResourceManager.GetString("FileDeleteDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileDeleteDialog_Title {
            get {
                return ResourceManager.GetString("FileDeleteDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete failed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileDeleteErrorDialog_Title {
            get {
                return ResourceManager.GetString("FileDeleteErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to delete these {0} items? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileDeleteMultiDialog_Message {
            get {
                return ResourceManager.GetString("FileDeleteMultiDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Note: It will be completely deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileDeleteMultiDialog_Message_Completely {
            get {
                return ResourceManager.GetString("FileDeleteMultiDialog.Message.Completely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileDeletePageDialog_Title {
            get {
                return ResourceManager.GetString("FileDeletePageDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please enter the folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_Directory_Message {
            get {
                return ResourceManager.GetString("FileNameBox.Directory.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please enter the path of the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_File_Message {
            get {
                return ResourceManager.GetString("FileNameBox.File.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_SelectDirectory {
            get {
                return ResourceManager.GetString("FileNameBox.SelectDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNameBox_SelectFile {
            get {
                return ResourceManager.GetString("FileNameBox.SelectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File not found &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileNotFoundException_Message {
            get {
                return ResourceManager.GetString("FileNotFoundException.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &quot;{0}&quot; already exists.
        ///Would you like to rename it to &quot;{1}&quot; ? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameConfrictDialog_Message {
            get {
                return ResourceManager.GetString("FileRenameConfrictDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A file with the same name exists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameConfrictDialog_Title {
            get {
                return ResourceManager.GetString("FileRenameConfrictDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Can not rename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameErrorDialog_Title {
            get {
                return ResourceManager.GetString("FileRenameErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Changing the extension may make it impossible to use it.
        ///Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameExtensionDialog_Message {
            get {
                return ResourceManager.GetString("FileRenameExtensionDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change the extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameExtensionDialog_Title {
            get {
                return ResourceManager.GetString("FileRenameExtensionDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to change the name. Would you like to try again? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameFailedDialog_Message {
            get {
                return ResourceManager.GetString("FileRenameFailedDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rename failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameFailedDialog_Title {
            get {
                return ResourceManager.GetString("FileRenameFailedDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file name contains characters that can not be used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameInvalidDialog_Message {
            get {
                return ResourceManager.GetString("FileRenameInvalidDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified device name is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameWrongDeviceDialog_Message {
            get {
                return ResourceManager.GetString("FileRenameWrongDeviceDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified file name is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileRenameWrongDialog_Message {
            get {
                return ResourceManager.GetString("FileRenameWrongDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page thumbnail size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_ImageWidth {
            get {
                return ResourceManager.GetString("FilmStripConfig.ImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsEnabled {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsHideFilmStrip {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsHideFilmStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch scroll termination bound on filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsManipulationBoundaryFeedbackEnabled {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsManipulationBoundaryFeedbackEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll so that the selected item appears in the center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsSelectedCenter {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsSelectedCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display page number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsVisibleNumber {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsVisibleNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show filmstrip background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsVisiblePlate {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsVisiblePlate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shows the background of the filmstrip when &quot;@FilmStripConfig.IsHideFilmStrip&quot; is enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsVisiblePlate_Remarks {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsVisiblePlate.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display playlisted mark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilmStripConfig_IsVisiblePlaylistMark {
            get {
                return ResourceManager.GetString("FilmStripConfig.IsVisiblePlaylistMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FirstPageCommand {
            get {
                return ResourceManager.GetString("FirstPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the first page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FirstPageCommand_Remarks {
            get {
                return ResourceManager.GetString("FirstPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display bookmark list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusBookmarkListCommand {
            get {
                return ResourceManager.GetString("FocusBookmarkListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusBookmarkListCommand_Menu {
            get {
                return ResourceManager.GetString("FocusBookmarkListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display bookmark folder of the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusBookmarkListCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusBookmarkListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focus search box に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusFolderSearchBoxCommand {
            get {
                return ResourceManager.GetString("FocusFolderSearchBoxCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search box に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusFolderSearchBoxCommand_Menu {
            get {
                return ResourceManager.GetString("FocusFolderSearchBoxCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focus search box. The bookshelf is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusFolderSearchBoxCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusFolderSearchBoxCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focus on main view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommand {
            get {
                return ResourceManager.GetString("FocusMainViewCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommand_Menu {
            get {
                return ResourceManager.GetString("FocusMainViewCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move focus to the main view. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusMainViewCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close all panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusMainViewCommandParameter_NeedClosePanels {
            get {
                return ResourceManager.GetString("FocusMainViewCommandParameter.NeedClosePanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch next NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusNextAppCommand {
            get {
                return ResourceManager.GetString("FocusNextAppCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch next NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusNextAppCommand_Menu {
            get {
                return ResourceManager.GetString("FocusNextAppCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch to the next NeeView when multiple are started. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusNextAppCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusNextAppCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch prev NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusPrevAppCommand {
            get {
                return ResourceManager.GetString("FocusPrevAppCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch prev NeeView に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusPrevAppCommand_Menu {
            get {
                return ResourceManager.GetString("FocusPrevAppCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch to the previous NeeView when multiple are started. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FocusPrevAppCommand_Remarks {
            get {
                return ResourceManager.GetString("FocusPrevAppCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder tree layout に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderListConfig_FolderTreeLayout {
            get {
                return ResourceManager.GetString("FolderListConfig.FolderTreeLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display folder tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderListConfig_IsFolderTreeVisible {
            get {
                return ResourceManager.GetString("FolderListConfig.IsFolderTreeVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderListConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("FolderListConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder {
            get {
                return ResourceManager.GetString("FolderOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_EntryTime {
            get {
                return ResourceManager.GetString("FolderOrder.EntryTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_EntryTimeDescending {
            get {
                return ResourceManager.GetString("FolderOrder.EntryTimeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileName {
            get {
                return ResourceManager.GetString("FolderOrder.FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileNameDescending {
            get {
                return ResourceManager.GetString("FolderOrder.FileNameDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileType {
            get {
                return ResourceManager.GetString("FolderOrder.FileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_FileTypeDescending {
            get {
                return ResourceManager.GetString("FolderOrder.FileTypeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_Path {
            get {
                return ResourceManager.GetString("FolderOrder.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_PathDescending {
            get {
                return ResourceManager.GetString("FolderOrder.PathDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_Random {
            get {
                return ResourceManager.GetString("FolderOrder.Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_Size {
            get {
                return ResourceManager.GetString("FolderOrder.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_SizeDescending {
            get {
                return ResourceManager.GetString("FolderOrder.SizeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_TimeStamp {
            get {
                return ResourceManager.GetString("FolderOrder.TimeStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderOrder_TimeStampDescending {
            get {
                return ResourceManager.GetString("FolderOrder.TimeStampDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_AddBookmark {
            get {
                return ResourceManager.GetString("FolderTree.Menu.AddBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add current place to quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_AddCurrentQuickAccess {
            get {
                return ResourceManager.GetString("FolderTree.Menu.AddCurrentQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add to quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_AddQuickAccess {
            get {
                return ResourceManager.GetString("FolderTree.Menu.AddQuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_Delete {
            get {
                return ResourceManager.GetString("FolderTree.Menu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove invalid bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_DeleteInvalidBookmark {
            get {
                return ResourceManager.GetString("FolderTree.Menu.DeleteInvalidBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in explorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_Explorer {
            get {
                return ResourceManager.GetString("FolderTree.Menu.Explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New _folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_NewFolder {
            get {
                return ResourceManager.GetString("FolderTree.Menu.NewFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   P_roperty に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_Property {
            get {
                return ResourceManager.GetString("FolderTree.Menu.Property", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_RefreshFolder {
            get {
                return ResourceManager.GetString("FolderTree.Menu.RefreshFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rena_me に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTree_Menu_Rename {
            get {
                return ResourceManager.GetString("FolderTree.Menu.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Place to the left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeLayout_Left {
            get {
                return ResourceManager.GetString("FolderTreeLayout.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Place to the top に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderTreeLayout_Top {
            get {
                return ResourceManager.GetString("FolderTreeLayout.Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder tree font scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FontsConfig_FolderTreeFontScale {
            get {
                return ResourceManager.GetString("FontsConfig.FolderTreeFontScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FontsConfig_FontName {
            get {
                return ResourceManager.GetString("FontsConfig.FontName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FontsConfig_FontScale {
            get {
                return ResourceManager.GetString("FontsConfig.FontScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable ClearType に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FontsConfig_IsClearTypeEnabled {
            get {
                return ResourceManager.GetString("FontsConfig.IsClearTypeEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Menu font scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FontsConfig_MenuFontScale {
            get {
                return ResourceManager.GetString("FontsConfig.MenuFontScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item font scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FontsConfig_PanelFontScale {
            get {
                return ResourceManager.GetString("FontsConfig.PanelFontScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Commands to which no operation is assigned can be used by setting with &quot;Edit commands&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandList_Message {
            get {
                return ResourceManager.GetString("HelpCommandList.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView Command List に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandList_Title {
            get {
                return ResourceManager.GetString("HelpCommandList.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandListCommand {
            get {
                return ResourceManager.GetString("HelpCommandListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandListCommand_Menu {
            get {
                return ResourceManager.GetString("HelpCommandListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Displays help of all commands in the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpCommandListCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpCommandListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main menu help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpMainMenuCommand {
            get {
                return ResourceManager.GetString("HelpMainMenuCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main menu help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpMainMenuCommand_Menu {
            get {
                return ResourceManager.GetString("HelpMainMenuCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the main menu help on the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpMainMenuCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpMainMenuCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpScriptCommand {
            get {
                return ResourceManager.GetString("HelpScriptCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpScriptCommand_Menu {
            get {
                return ResourceManager.GetString("HelpScriptCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Displays the script manual in the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpScriptCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpScriptCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search options help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpSearchOptionCommand {
            get {
                return ResourceManager.GetString("HelpSearchOptionCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search options help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpSearchOptionCommand_Menu {
            get {
                return ResourceManager.GetString("HelpSearchOptionCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the search options help on the browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HelpSearchOptionCommand_Remarks {
            get {
                return ResourceManager.GetString("HelpSearchOptionCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} items deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string History_DeleteItemsMessage {
            get {
                return ResourceManager.GetString("History.DeleteItemsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string History_MoreMenu_DeleteAll {
            get {
                return ResourceManager.GetString("History.MoreMenu.DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove invalid history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string History_MoreMenu_DeleteInvalid {
            get {
                return ResourceManager.GetString("History.MoreMenu.DeleteInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current folder only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string History_MoreMenu_IsCurrentFolder {
            get {
                return ResourceManager.GetString("History.MoreMenu.IsCurrentFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string History_Title {
            get {
                return ResourceManager.GetString("History.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of page operations to start history registration に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_HistoryEntryPageCount {
            get {
                return ResourceManager.GetString("HistoryConfig.HistoryEntryPageCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The history is recorded when the page is moved more than the set number of times or the last page is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_HistoryEntryPageCount_Remarks {
            get {
                return ResourceManager.GetString("HistoryConfig.HistoryEntryPageCount.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History file location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_HistoryFilePath {
            get {
                return ResourceManager.GetString("HistoryConfig.HistoryFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically delete invalid history at startup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsAutoCleanupEnabled {
            get {
                return ResourceManager.GetString("HistoryConfig.IsAutoCleanupEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current folder only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsCurrentFolder {
            get {
                return ResourceManager.GetString("HistoryConfig.IsCurrentFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shows the history of only the folders of the currently open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsCurrentFolder_Remarks {
            get {
                return ResourceManager.GetString("HistoryConfig.IsCurrentFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Even if you open a book from history, it updates the last browsing date に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsForceUpdateHistory {
            get {
                return ResourceManager.GetString("HistoryConfig.IsForceUpdateHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save recursive compressed file in history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsInnerArchiveHistoryEnabled {
            get {
                return ResourceManager.GetString("HistoryConfig.IsInnerArchiveHistoryEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save folder state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsKeepFolderStatus {
            get {
                return ResourceManager.GetString("HistoryConfig.IsKeepFolderStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save search history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsKeepSearchHistory {
            get {
                return ResourceManager.GetString("HistoryConfig.IsKeepSearchHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save history file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsSaveHistory {
            get {
                return ResourceManager.GetString("HistoryConfig.IsSaveHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save UNC path in history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsUncHistoryEnabled {
            get {
                return ResourceManager.GetString("HistoryConfig.IsUncHistoryEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save the path on the network like &quot;\\computer\~&quot; in the history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_IsUncHistoryEnabled_Remarks {
            get {
                return ResourceManager.GetString("HistoryConfig.IsUncHistoryEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_LimitSize {
            get {
                return ResourceManager.GetString("HistoryConfig.LimitSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Retention period に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_LimitSpan {
            get {
                return ResourceManager.GetString("HistoryConfig.LimitSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("HistoryConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all history. Is it OK? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryDeleteAllDialog_Message {
            get {
                return ResourceManager.GetString("HistoryDeleteAllDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryDeleteAllDialog_Title {
            get {
                return ResourceManager.GetString("HistoryDeleteAllDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deleted history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryDeletedDialog_Title {
            get {
                return ResourceManager.GetString("HistoryDeletedDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Remove history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItem_Menu_Delete {
            get {
                return ResourceManager.GetString("HistoryItem.Menu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItem_Menu_OpenBook {
            get {
                return ResourceManager.GetString("HistoryItem.Menu.OpenBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor {
            get {
                return ResourceManager.GetString("HistoryItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last access time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor_LastAccessTime {
            get {
                return ResourceManager.GetString("HistoryItemAccessor.LastAccessTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor_Name {
            get {
                return ResourceManager.GetString("HistoryItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryItemAccessor_Path {
            get {
                return ResourceManager.GetString("HistoryItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor_Items {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item stye に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HistoryPanelAccessor_Style {
            get {
                return ResourceManager.GetString("HistoryPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignment_Center {
            get {
                return ResourceManager.GetString("HorizontalAlignment.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignment_Left {
            get {
                return ResourceManager.GetString("HorizontalAlignment.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignment_Right {
            get {
                return ResourceManager.GetString("HorizontalAlignment.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HsvEffectUnit_Hue {
            get {
                return ResourceManager.GetString("HsvEffectUnit.Hue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Saturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HsvEffectUnit_Saturation {
            get {
                return ResourceManager.GetString("HsvEffectUnit.Saturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Brightness に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HsvEffectUnit_Value {
            get {
                return ResourceManager.GetString("HsvEffectUnit.Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Could not get link. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HyperLinkErrorDialog_Title {
            get {
                return ResourceManager.GetString("HyperLinkErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Applicability rate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_ApplicabilityRate {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.ApplicabilityRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Aspect ratio に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_AspectRatio {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.AspectRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_Height {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Align long side に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_IsAlignLongSide {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.IsAlignLongSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Swap the vertical and horizontal as needed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_IsAlignLongSide_Remarks {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.IsAlignLongSide.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable custom image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lock aspect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_IsUniformed {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.IsUniformed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_Size {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageCustomSizeConfig_Width {
            get {
                return ResourceManager.GetString("ImageCustomSizeConfig.Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageDotKeepConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageDotKeepConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale threshold for &quot;@ImageDotKeepConfig.IsEnabled&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageDotKeepConfig_Threshold {
            get {
                return ResourceManager.GetString("ImageDotKeepConfig.Threshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It will be applied when it becomes larger than the set magnification. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageDotKeepConfig_Threshold_Remarks {
            get {
                return ResourceManager.GetString("ImageDotKeepConfig.Threshold.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image effect type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_EffectType {
            get {
                return ResourceManager.GetString("ImageEffectConfig.EffectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable image effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageEffectConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform color setting with HSV に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_IsHsvMode {
            get {
                return ResourceManager.GetString("ImageEffectConfig.IsHsvMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the color parameter with HSV (Hue, Saturation, Brightness). When set to OFF, it becomes the setting with RGB. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageEffectConfig_IsHsvMode_Remarks {
            get {
                return ResourceManager.GetString("ImageEffectConfig.IsHsvMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This image can not be output. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageExportErrorDialog_Message {
            get {
                return ResourceManager.GetString("ImageExportErrorDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File save failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageExportErrorDialog_Title {
            get {
                return ResourceManager.GetString("ImageExportErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_Color {
            get {
                return ResourceManager.GetString("ImageGridConfig.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Column に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_DivX {
            get {
                return ResourceManager.GetString("ImageGridConfig.DivX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Row に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_DivY {
            get {
                return ResourceManager.GetString("ImageGridConfig.DivY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageGridConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Square に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageGridConfig_IsSquare {
            get {
                return ResourceManager.GetString("ImageGridConfig.IsSquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageLoadFailedException_Message {
            get {
                return ResourceManager.GetString("ImageLoadFailedException.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageResizeFilterConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageResizeFilterConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable unsharp mask when resizing に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageResizeFilterConfig_IsUnsharpMaskEnabled {
            get {
                return ResourceManager.GetString("ImageResizeFilterConfig.IsUnsharpMaskEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize interpolation method に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageResizeFilterConfig_ResizeInterpolation {
            get {
                return ResourceManager.GetString("ImageResizeFilterConfig.ResizeInterpolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A file whose extension is unknown is regarded as an image file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAllFileSupported {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAllFileSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This function works when &quot;@SystemConfig.BookPageCollectMode&quot; is &quot;@BookPageCollectMode.All&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAllFileSupported_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAllFileSupported.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play animated GIF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAnimatedGifEnabled {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAnimatedGifEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Perform animated GIF playback. Memory consumption problems may occur with long GIFs. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAnimatedGifEnabled_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAnimatedGifEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply image resolution information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAspectRatioEnabled {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAspectRatioEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display according to the dpi and aspect ratio set in the image file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_IsAspectRatioEnabled_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.IsAspectRatioEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image file extensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("ImageStandardConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use WIC information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_UseWicInformation {
            get {
                return ResourceManager.GetString("ImageStandardConfig.UseWicInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Obtains the image file extension from WIC. If off, only the default extension is available. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStandardConfig_UseWicInformation_Remarks {
            get {
                return ResourceManager.GetString("ImageStandardConfig.UseWicInformation.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable SVG file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageSvgConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageSvgConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open an SVG file as a page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageSvgConfig_IsEnabled_Remarks {
            get {
                return ResourceManager.GetString("ImageSvgConfig.IsEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SVG file extensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageSvgConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("ImageSvgConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bottom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Bottom {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable trim に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ImageTrimConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Left {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Right {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Top に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageTrimConfig_Top {
            get {
                return ResourceManager.GetString("ImageTrimConfig.Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportAction_Import {
            get {
                return ResourceManager.GetString("ImportAction.Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Skip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportAction_Skip {
            get {
                return ResourceManager.GetString("ImportAction.Skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Undefined に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportAction_Undefined {
            get {
                return ResourceManager.GetString("ImportAction.Undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommand {
            get {
                return ResourceManager.GetString("ImportBackupCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import settings... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommand_Menu {
            get {
                return ResourceManager.GetString("ImportBackupCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select the restored item from the backup file and restore it. If all parameters are defined, the dialog will not be displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommand_Remarks {
            get {
                return ResourceManager.GetString("ImportBackupCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommandParameter_Bookmark {
            get {
                return ResourceManager.GetString("ImportBackupCommandParameter.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Backup file path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommandParameter_FileName {
            get {
                return ResourceManager.GetString("ImportBackupCommandParameter.FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommandParameter_History {
            get {
                return ResourceManager.GetString("ImportBackupCommandParameter.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommandParameter_Playlists {
            get {
                return ResourceManager.GetString("ImportBackupCommandParameter.Playlists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommandParameter_Scripts {
            get {
                return ResourceManager.GetString("ImportBackupCommandParameter.Scripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom themes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommandParameter_Themes {
            get {
                return ResourceManager.GetString("ImportBackupCommandParameter.Themes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportBackupCommandParameter_UserSetting {
            get {
                return ResourceManager.GetString("ImportBackupCommandParameter.UserSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Bookmark {
            get {
                return ResourceManager.GetString("ImportControl.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_History {
            get {
                return ResourceManager.GetString("ImportControl.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Pagemark {
            get {
                return ResourceManager.GetString("ImportControl.Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} playlists に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Playlist {
            get {
                return ResourceManager.GetString("ImportControl.Playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Script {
            get {
                return ResourceManager.GetString("ImportControl.Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Setting {
            get {
                return ResourceManager.GetString("ImportControl.Setting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} custom themes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportControl_Theme {
            get {
                return ResourceManager.GetString("ImportControl.Theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import all settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportDialog_Title {
            get {
                return ResourceManager.GetString("ImportDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportErrorDialog_Title {
            get {
                return ResourceManager.GetString("ImportErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select the item to be imported に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImportSelectDialog_Title {
            get {
                return ResourceManager.GetString("ImportSelectDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Inconsistency of page data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InconsistencyException_Message {
            get {
                return ResourceManager.GetString("InconsistencyException.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   yyyy-MM-dd dddd H:mm に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Information_DateFormat {
            get {
                return ResourceManager.GetString("Information.DateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Information_Menu_Copy {
            get {
                return ResourceManager.GetString("Information.Menu.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Information_OpenFolder {
            get {
                return ResourceManager.GetString("Information.OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open map に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Information_OpenMap {
            get {
                return ResourceManager.GetString("Information.OpenMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Information_Title {
            get {
                return ResourceManager.GetString("Information.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date time format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_DateTimeFormat {
            get {
                return ResourceManager.GetString("InformationConfig.DateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies the .NET custom datetime format string. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_DateTimeFormat_Remarks {
            get {
                return ResourceManager.GetString("InformationConfig.DateTimeFormat.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View advanced photo section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleAdvancedPhoto {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleAdvancedPhoto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View camera section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleCamera {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View description section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleDescription {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View extras section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleExtras {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleExtras", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View file section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleFile {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View GPS section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleGps {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleGps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View image section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleImage {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View origin section に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_IsVisibleOrigin {
            get {
                return ResourceManager.GetString("InformationConfig.IsVisibleOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Map program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_MapProgramFormat {
            get {
                return ResourceManager.GetString("InformationConfig.MapProgramFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   $Lat: Latitude, $LatDeg: Latitude(DEG), $Lon: Longitude, $LonDeg: Longitude(DEG) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationConfig_MapProgramFormat_Remarks {
            get {
                return ResourceManager.GetString("InformationConfig.MapProgramFormat.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced photo に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_AdvancedPhoto {
            get {
                return ResourceManager.GetString("InformationGroup.AdvancedPhoto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Camera に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_Camera {
            get {
                return ResourceManager.GetString("InformationGroup.Camera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_Description {
            get {
                return ResourceManager.GetString("InformationGroup.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extras に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_Extras {
            get {
                return ResourceManager.GetString("InformationGroup.Extras", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_File {
            get {
                return ResourceManager.GetString("InformationGroup.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   GPS に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_Gps {
            get {
                return ResourceManager.GetString("InformationGroup.Gps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_Image {
            get {
                return ResourceManager.GetString("InformationGroup.Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Origin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationGroup_Origin {
            get {
                return ResourceManager.GetString("InformationGroup.Origin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Applicatoin name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_ApplicatoinName {
            get {
                return ResourceManager.GetString("InformationKey.ApplicatoinName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Archive path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_ArchivePath {
            get {
                return ResourceManager.GetString("InformationKey.ArchivePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Archiver に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Archiver {
            get {
                return ResourceManager.GetString("InformationKey.Archiver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Author に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Author {
            get {
                return ResourceManager.GetString("InformationKey.Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bit depth に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_BitDepth {
            get {
                return ResourceManager.GetString("InformationKey.BitDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Brightness に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Brightness {
            get {
                return ResourceManager.GetString("InformationKey.Brightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Camera maker に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_CameraMaker {
            get {
                return ResourceManager.GetString("InformationKey.CameraMaker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Camera model に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_CameraModel {
            get {
                return ResourceManager.GetString("InformationKey.CameraModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Camera serial number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_CameraSerialNumber {
            get {
                return ResourceManager.GetString("InformationKey.CameraSerialNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Comments に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Comments {
            get {
                return ResourceManager.GetString("InformationKey.Comments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Contrast に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Contrast {
            get {
                return ResourceManager.GetString("InformationKey.Contrast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copyright に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Copyright {
            get {
                return ResourceManager.GetString("InformationKey.Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Creation time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_CreationTime {
            get {
                return ResourceManager.GetString("InformationKey.CreationTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date acquired に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_DateAcquired {
            get {
                return ResourceManager.GetString("InformationKey.DateAcquired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date taken に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_DateTaken {
            get {
                return ResourceManager.GetString("InformationKey.DateTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Decoder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Decoder {
            get {
                return ResourceManager.GetString("InformationKey.Decoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Digital zoom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_DigitalZoom {
            get {
                return ResourceManager.GetString("InformationKey.DigitalZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dimensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Dimensions {
            get {
                return ResourceManager.GetString("InformationKey.Dimensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   EXIF version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_EXIFVersion {
            get {
                return ResourceManager.GetString("InformationKey.EXIFVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exposure bias に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_ExposureBias {
            get {
                return ResourceManager.GetString("InformationKey.ExposureBias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exposure program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_ExposureProgram {
            get {
                return ResourceManager.GetString("InformationKey.ExposureProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exposure time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_ExposureTime {
            get {
                return ResourceManager.GetString("InformationKey.ExposureTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extras に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_ExtraValue {
            get {
                return ResourceManager.GetString("InformationKey.ExtraValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FileName {
            get {
                return ResourceManager.GetString("InformationKey.FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FilePath {
            get {
                return ResourceManager.GetString("InformationKey.FilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FileSize {
            get {
                return ResourceManager.GetString("InformationKey.FileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash energy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FlashEnergy {
            get {
                return ResourceManager.GetString("InformationKey.FlashEnergy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash maker に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FlashMaker {
            get {
                return ResourceManager.GetString("InformationKey.FlashMaker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FlashMode {
            get {
                return ResourceManager.GetString("InformationKey.FlashMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flash model に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FlashModel {
            get {
                return ResourceManager.GetString("InformationKey.FlashModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FNumber に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FNumber {
            get {
                return ResourceManager.GetString("InformationKey.FNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focal length に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FocalLength {
            get {
                return ResourceManager.GetString("InformationKey.FocalLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Focal length in 35mm film に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_FocalLengthIn35mmFilm {
            get {
                return ResourceManager.GetString("InformationKey.FocalLengthIn35mmFilm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Altitude に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_GPSAltitude {
            get {
                return ResourceManager.GetString("InformationKey.GPSAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Latitude に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_GPSLatitude {
            get {
                return ResourceManager.GetString("InformationKey.GPSLatitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Longitude に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_GPSLongitude {
            get {
                return ResourceManager.GetString("InformationKey.GPSLongitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Height {
            get {
                return ResourceManager.GetString("InformationKey.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Horizontal resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_HorizontalResolution {
            get {
                return ResourceManager.GetString("InformationKey.HorizontalResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ISO speed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_ISOSpeed {
            get {
                return ResourceManager.GetString("InformationKey.ISOSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last write time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_LastWriteTime {
            get {
                return ResourceManager.GetString("InformationKey.LastWriteTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lens maker に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_LensMaker {
            get {
                return ResourceManager.GetString("InformationKey.LensMaker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lens model に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_LensModel {
            get {
                return ResourceManager.GetString("InformationKey.LensModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Light source に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_LightSource {
            get {
                return ResourceManager.GetString("InformationKey.LightSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Max aperture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_MaxAperture {
            get {
                return ResourceManager.GetString("InformationKey.MaxAperture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Metering mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_MeteringMode {
            get {
                return ResourceManager.GetString("InformationKey.MeteringMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Orientation {
            get {
                return ResourceManager.GetString("InformationKey.Orientation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Photometric interpretation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_PhotometricInterpretation {
            get {
                return ResourceManager.GetString("InformationKey.PhotometricInterpretation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Rating {
            get {
                return ResourceManager.GetString("InformationKey.Rating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Saturation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Saturation {
            get {
                return ResourceManager.GetString("InformationKey.Saturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sharpness に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Sharpness {
            get {
                return ResourceManager.GetString("InformationKey.Sharpness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Subject に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Subject {
            get {
                return ResourceManager.GetString("InformationKey.Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Subject distance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_SubjectDistance {
            get {
                return ResourceManager.GetString("InformationKey.SubjectDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tags に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Tags {
            get {
                return ResourceManager.GetString("InformationKey.Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Title {
            get {
                return ResourceManager.GetString("InformationKey.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vertical resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_VerticalResolution {
            get {
                return ResourceManager.GetString("InformationKey.VerticalResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White balance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_WhiteBalance {
            get {
                return ResourceManager.GetString("InformationKey.WhiteBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationKey_Width {
            get {
                return ResourceManager.GetString("InformationKey.Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InformationPanelAccessor {
            get {
                return ResourceManager.GetString("InformationPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Conflict resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_ButtonConflict {
            get {
                return ResourceManager.GetString("InputGestureControl.ButtonConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse input here に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_InputMouse {
            get {
                return ResourceManager.GetString("InputGestureControl.InputMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Key input here に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_InputShortcut {
            get {
                return ResourceManager.GetString("InputGestureControl.InputShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse input に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_LabelMouse {
            get {
                return ResourceManager.GetString("InputGestureControl.LabelMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut key に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_LabelShortcut {
            get {
                return ResourceManager.GetString("InputGestureControl.LabelShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputGestureControl_Title {
            get {
                return ResourceManager.GetString("InputGestureControl.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeA {
            get {
                return ResourceManager.GetString("InputSceme.TypeA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   By clicking the mouse, &quot;@PrevPageCommand&quot; &quot;@NextPageCommand&quot;.
        ///In the wheel operation, &quot;@PrevScrollPageCommand&quot; &quot;@NextScrollPageCommand&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeA_Remarks {
            get {
                return ResourceManager.GetString("InputSceme.TypeA.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize page feed by wheel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeB {
            get {
                return ResourceManager.GetString("InputSceme.TypeB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In the wheel operation, &quot;@PrevPageCommand&quot; &quot;@NextPageCommand&quot;.
        ///By right-click, &quot;@OpenContextMenuCommand&quot;.
        ///Left click is undefined. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeB_Remarks {
            get {
                return ResourceManager.GetString("InputSceme.TypeB.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize page feed by click に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeC {
            get {
                return ResourceManager.GetString("InputSceme.TypeC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   By clicking the mouse, &quot;@PrevPageCommand&quot; &quot;@NextPageCommand&quot;.
        ///In the wheel operation, &quot;@ViewScrollUpCommand&quot; &quot;@ViewScrollDownCommand&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputSceme_TypeC_Remarks {
            get {
                return ResourceManager.GetString("InputSceme.TypeC.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify the area to touch.
        ///If Center is not assigned to a command, the judgment of the area (L1, L2, R1, R2) below it is applied.
        ///Please substitute gesture for flick operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputTouchControl_Remarks {
            get {
                return ResourceManager.GetString("InputTouchControl.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Here, touch input に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InputTouchControl_TouchInput {
            get {
                return ResourceManager.GetString("InputTouchControl.TouchInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load and execute the script. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Load and run Sample.nvjs
        ///include(&quot;Sample.nvjs&quot;) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile_Example {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script path. Relative paths are relative to the current script location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile_path {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile.path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script execution result に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_ExecureFile_Returns {
            get {
                return ResourceManager.GetString("JavascriptEngine.ExecureFile.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print a message to the console. It only works when you run the script from the console. For script testing. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Log {
            get {
                return ResourceManager.GetString("JavascriptEngine.Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Log_log {
            get {
                return ResourceManager.GetString("JavascriptEngine.Log.log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Suspends the script for the specified amount of time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Sleep {
            get {
                return ResourceManager.GetString("JavascriptEngine.Sleep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pause time (milliseconds) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_Sleep_millisecond {
            get {
                return ResourceManager.GetString("JavascriptEngine.Sleep.millisecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run the external app. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_SystemCall {
            get {
                return ResourceManager.GetString("JavascriptEngine.SystemCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   App arguments (optional) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_SystemCall_args {
            get {
                return ResourceManager.GetString("JavascriptEngine.SystemCall.args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Executable path. If you specify a URL or file path, the associated app will be executed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JavascriptEngine_SystemCall_filename {
            get {
                return ResourceManager.GetString("JavascriptEngine.SystemCall.filename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jump page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpPageCommand {
            get {
                return ResourceManager.GetString("JumpPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   number: int|Page number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpPageCommand_Execute_Remarks {
            get {
                return ResourceManager.GetString("JumpPageCommand.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enter the page number and move. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpPageCommand_Remarks {
            get {
                return ResourceManager.GetString("JumpPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Random page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpRandomPageCommand {
            get {
                return ResourceManager.GetString("JumpRandomPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jump to a random page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JumpRandomPageCommand_Remarks {
            get {
                return ResourceManager.GetString("JumpRandomPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   English に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Language_English {
            get {
                return ResourceManager.GetString("Language.English", resourceCulture);
            }
        }
        
        /// <summary>
        ///   日本語 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Language_Japanese {
            get {
                return ResourceManager.GetString("Language.Japanese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LastPageCommand {
            get {
                return ResourceManager.GetString("LastPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the last page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LastPageCommand_Remarks {
            get {
                return ResourceManager.GetString("LastPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanel_Menu_Close {
            get {
                return ResourceManager.GetString("LayoutPanel.Menu.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Doc_king に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanel_Menu_Docking {
            get {
                return ResourceManager.GetString("LayoutPanel.Menu.Docking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanel_Menu_Floating {
            get {
                return ResourceManager.GetString("LayoutPanel.Menu.Floating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_Close {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel is floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_IsFloating {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.IsFloating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel is selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_IsSelected {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.IsSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel is visible に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_IsVisible {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_Open {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open panel in docking mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_OpenDock {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.OpenDock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open panel in floating mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LayoutPanelAccessor_OpenFloat {
            get {
                return ResourceManager.GetString("LayoutPanelAccessor.OpenFloat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Black {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Center {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Max に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Maximum {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Maximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Min に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_Minimum {
            get {
                return ResourceManager.GetString("LevelEffectUnit.Minimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LevelEffectUnit_White {
            get {
                return ResourceManager.GetString("LevelEffectUnit.White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Line に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LineBreakStopMode_Line {
            get {
                return ResourceManager.GetString("LineBreakStopMode.Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LineBreakStopMode_Page {
            get {
                return ResourceManager.GetString("LineBreakStopMode.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand {
            get {
                return ResourceManager.GetString("LoadAsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   path: string|File or folder path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand_Execute_Remarks {
            get {
                return ResourceManager.GetString("LoadAsCommand.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand_Menu {
            get {
                return ResourceManager.GetString("LoadAsCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select and open the compressed file or image file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadAsCommand_Remarks {
            get {
                return ResourceManager.GetString("LoadAsCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to read {0}.
        ///{1} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadFailedException_Message {
            get {
                return ResourceManager.GetString("LoadFailedException.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadingPage_ViewNone {
            get {
                return ResourceManager.GetString("LoadingPage.ViewNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image of previous page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadingPage_ViewPreImage {
            get {
                return ResourceManager.GetString("LoadingPage.ViewPreImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail of previous page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadingPage_ViewPreThumbnail {
            get {
                return ResourceManager.GetString("LoadingPage.ViewPreThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonDownMode_Loupe {
            get {
                return ResourceManager.GetString("LongButtonDownMode.Loupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonDownMode_None {
            get {
                return ResourceManager.GetString("LongButtonDownMode.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Repeat input に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonDownMode_Repeat {
            get {
                return ResourceManager.GetString("LongButtonDownMode.Repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All buttons に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonMask_All {
            get {
                return ResourceManager.GetString("LongButtonMask.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonMask_Left {
            get {
                return ResourceManager.GetString("LongButtonMask.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongButtonMask_Right {
            get {
                return ResourceManager.GetString("LongButtonMask.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe standard magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_DefaultScale {
            get {
                return ResourceManager.GetString("LoupeConfig.DefaultScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the Esc key to release the loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsEscapeKeyEnabled {
            get {
                return ResourceManager.GetString("LoupeConfig.IsEscapeKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the cursor position at the start of the loupe to the center of the screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsLoupeCenter {
            get {
                return ResourceManager.GetString("LoupeConfig.IsLoupeCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Release the loupe after moving the page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsResetByPageChanged {
            get {
                return ResourceManager.GetString("LoupeConfig.IsResetByPageChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start loupe at standard magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsResetByRestart {
            get {
                return ResourceManager.GetString("LoupeConfig.IsResetByRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When turned off, it retains the magnification of the last use of the loupe. The standard magnification can be set arbitrarily. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsResetByRestart_Remarks {
            get {
                return ResourceManager.GetString("LoupeConfig.IsResetByRestart.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the magnification of loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsVisibleLoupeInfo {
            get {
                return ResourceManager.GetString("LoupeConfig.IsVisibleLoupeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When using the loupe, the magnification is displayed in the upper right. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsVisibleLoupeInfo_Remarks {
            get {
                return ResourceManager.GetString("LoupeConfig.IsVisibleLoupeInfo.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change the loupe magnification by operating the wheel when using the loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsWheelScalingEnabled {
            get {
                return ResourceManager.GetString("LoupeConfig.IsWheelScalingEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Commands to which wheel operation is assigned are invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_IsWheelScalingEnabled_Remarks {
            get {
                return ResourceManager.GetString("LoupeConfig.IsWheelScalingEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe maximum magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_MaximumScale {
            get {
                return ResourceManager.GetString("LoupeConfig.MaximumScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe minimum magnification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_MinimumScale {
            get {
                return ResourceManager.GetString("LoupeConfig.MinimumScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe magnification change unit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_ScaleStep {
            get {
                return ResourceManager.GetString("LoupeConfig.ScaleStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe Speed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeConfig_Speed {
            get {
                return ResourceManager.GetString("LoupeConfig.Speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOffCommand {
            get {
                return ResourceManager.GetString("LoupeOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Release the loupe mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOffCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeOffCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOnCommand {
            get {
                return ResourceManager.GetString("LoupeOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the loupe mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeOnCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeOnCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe zoom out に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleDownCommand {
            get {
                return ResourceManager.GetString("LoupeScaleDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the loupe magnification. It functions only when using a loupe. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleDownCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeScaleDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe zoom in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleUpCommand {
            get {
                return ResourceManager.GetString("LoupeScaleUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expands the magnifying power of the loupe. It functions only when using a loupe. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoupeScaleUpCommand_Remarks {
            get {
                return ResourceManager.GetString("LoupeScaleUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_Amount {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_Center {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Inner radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_InnerRadius {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.InnerRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Outer radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MagnifyEffectUnit_OuterRadius {
            get {
                return ResourceManager.GetString("MagnifyEffectUnit.OuterRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainViewConfig_IsFloating {
            get {
                return ResourceManager.GetString("MainViewConfig.IsFloating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide MainView window title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainViewConfig_IsHideTitleBar {
            get {
                return ResourceManager.GetString("MainViewConfig.IsHideTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView window is topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainViewConfig_IsTopmost {
            get {
                return ResourceManager.GetString("MainViewConfig.IsTopmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide title bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainViewWindow_Menu_AutoHideTitleBar {
            get {
                return ResourceManager.GetString("MainViewWindow.Menu.AutoHideTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mute video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_IsMuted {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.IsMuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video repeat に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_IsRepeat {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.IsRepeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play start delay (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_MediaStartDelaySeconds {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.MediaStartDelaySeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If 0 is specified, the contents may flicker. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_MediaStartDelaySeconds_Remarks {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.MediaStartDelaySeconds.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change time in page movement (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_PageSeconds {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.PageSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Probably what you can play with Windows Media Player is playable. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_SupportFileTypes_Remarks {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.SupportFileTypes.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video volume に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MediaArchiveConfig_Volume {
            get {
                return ResourceManager.GetString("MediaArchiveConfig.Volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System manages memory に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MemoryControl_IsAutoGC {
            get {
                return ResourceManager.GetString("MemoryControl.IsAutoGC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When it is OFF, memory is released every time page is switched に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MemoryControl_IsAutoGC_Remarks {
            get {
                return ResourceManager.GetString("MemoryControl.IsAutoGC.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsAddressBarEnabled {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsAddressBarEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the hamburger menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsHamburgerMenu {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsHamburgerMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Instead of the menu bar, it displays an icon that brings together the menus. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsHamburgerMenu_Remarks {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsHamburgerMenu.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide menu automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsHideMenu {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsHideMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the menu when it is auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsHideMenuInAutoHideMode {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsHideMenuInAutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Menu visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuBarConfig_IsVisible {
            get {
                return ResourceManager.GetString("MenuBarConfig.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_Command {
            get {
                return ResourceManager.GetString("MenuElementType.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Submenu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_Group {
            get {
                return ResourceManager.GetString("MenuElementType.Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recent books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_History {
            get {
                return ResourceManager.GetString("MenuElementType.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_None {
            get {
                return ResourceManager.GetString("MenuElementType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Separator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuElementType_Separator {
            get {
                return ResourceManager.GetString("MenuElementType.Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_Bookmark {
            get {
                return ResourceManager.GetString("MenuTree.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Debug に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_Debug {
            get {
                return ResourceManager.GetString("MenuTree.Debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_File {
            get {
                return ResourceManager.GetString("MenuTree.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_Help {
            get {
                return ResourceManager.GetString("MenuTree.Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open from the list of recent books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_History {
            get {
                return ResourceManager.GetString("MenuTree.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_Image {
            get {
                return ResourceManager.GetString("MenuTree.Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Jump に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_Jump {
            get {
                return ResourceManager.GetString("MenuTree.Jump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Option に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_Option {
            get {
                return ResourceManager.GetString("MenuTree.Option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_Page {
            get {
                return ResourceManager.GetString("MenuTree.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _View に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MenuTree_View {
            get {
                return ResourceManager.GetString("MenuTree.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consolidate folders into {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MergeFolderDialog_Message {
            get {
                return ResourceManager.GetString("MergeFolderDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to merge folders? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MergeFolderDialog_Title {
            get {
                return ResourceManager.GetString("MergeFolderDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MonochromeEffectUnit_Color {
            get {
                return ResourceManager.GetString("MonochromeEffectUnit.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move distance to redisplay (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_CursorHideReleaseDistance {
            get {
                return ResourceManager.GetString("MouseConfig.CursorHideReleaseDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_CursorHideTime {
            get {
                return ResourceManager.GetString("MouseConfig.CursorHideTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse gesture stroke (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_GestureMinimumDistance {
            get {
                return ResourceManager.GetString("MouseConfig.GestureMinimumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   By moving this distance, it is judged as a gesture stroke. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_GestureMinimumDistance_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.GestureMinimumDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hover scroll time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_HoverScrollDuration {
            get {
                return ResourceManager.GetString("MouseConfig.HoverScrollDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The longer the time, the smoother the scroll. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_HoverScrollDuration_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.HoverScrollDuration.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide the cursor with no mouse operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsCursorHideEnabled {
            get {
                return ResourceManager.GetString("MouseConfig.IsCursorHideEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide the cursor if the mouse is not operated for the set time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsCursorHideEnabled_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.IsCursorHideEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Redisplay with mouse button operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsCursorHideReleaseAction {
            get {
                return ResourceManager.GetString("MouseConfig.IsCursorHideReleaseAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use mouse drag に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsDragEnabled {
            get {
                return ResourceManager.GetString("MouseConfig.IsDragEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use mouse gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsGestureEnabled {
            get {
                return ResourceManager.GetString("MouseConfig.IsGestureEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hover scroll mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_IsHoverScroll {
            get {
                return ResourceManager.GetString("MouseConfig.IsHoverScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonDownMode {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonDownMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press decision time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonDownTime {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonDownTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is time to be judged to be long pressed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonDownTime_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonDownTime.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonMask {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Repeat interval (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonRepeatTime {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonRepeatTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Repeat time with repeat input. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_LongButtonRepeatTime_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.LongButtonRepeatTime.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag starting distance (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_MinimumDragDistance {
            get {
                return ResourceManager.GetString("MouseConfig.MinimumDragDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First moving distance to become a drag or gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseConfig_MinimumDragDistance_Remarks {
            get {
                return ResourceManager.GetString("MouseConfig.MinimumDragDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragList_Header_Command {
            get {
                return ResourceManager.GetString("MouseDragList.Header.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragList_Header_Drag {
            get {
                return ResourceManager.GetString("MouseDragList.Header.Drag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragList_Reset {
            get {
                return ResourceManager.GetString("MouseDragList.Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse input here に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Input {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_New {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Old に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Old {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse button input in frame.
        ///You can not use right button drag because it is reserved with mouse gesture. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Remarks {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseDragSettingWindow_Title {
            get {
                return ResourceManager.GetString("MouseDragSettingWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Here gesture input
        ///(Hold down the right button while dragging) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_InputGesture {
            get {
                return ResourceManager.GetString("MouseGestureControl.InputGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_New {
            get {
                return ResourceManager.GetString("MouseGestureControl.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Old に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_Old {
            get {
                return ResourceManager.GetString("MouseGestureControl.Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enter a mouse gesture within a frame.
        ///Mouse gesture is a drag operation while holding down the right mouse button.
        ///A left click can be registered as the last gesture key. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MouseGestureControl_Remarks {
            get {
                return ResourceManager.GetString("MouseGestureControl.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include the first and last pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MovePlaylsitItemInBookCommandParameter_IsIncludeTerminal {
            get {
                return ResourceManager.GetString("MovePlaylsitItemInBookCommandParameter.IsIncludeTerminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MovePlaylsitItemInBookCommandParameter_IsLoop {
            get {
                return ResourceManager.GetString("MovePlaylsitItemInBookCommandParameter.IsLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of moved pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveSizePageCommandParameter_Size {
            get {
                return ResourceManager.GetString("MoveSizePageCommandParameter.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to child に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToChildBookCommand {
            get {
                return ResourceManager.GetString("MoveToChildBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When the page is a book, open that book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToChildBookCommand_Remarks {
            get {
                return ResourceManager.GetString("MoveToChildBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to parent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToParentBookCommand {
            get {
                return ResourceManager.GetString("MoveToParentBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the upper hierarchy as a book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MoveToParentBookCommand_Remarks {
            get {
                return ResourceManager.GetString("MoveToParentBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run all pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultiPagePolicy_All {
            get {
                return ResourceManager.GetString("MultiPagePolicy.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run all pages (Left to right) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultiPagePolicy_AllLeftToRight {
            get {
                return ResourceManager.GetString("MultiPagePolicy.AllLeftToRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute only one page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultiPagePolicy_Once {
            get {
                return ResourceManager.GetString("MultiPagePolicy.Once", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run both pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultiPagePolicy_Twice {
            get {
                return ResourceManager.GetString("MultiPagePolicy.Twice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_Angle {
            get {
                return ResourceManager.GetString("Navigator.Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_Flip {
            get {
                return ResourceManager.GetString("Navigator.Flip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_FlipHorizontal {
            get {
                return ResourceManager.GetString("Navigator.FlipHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_FlipVertical {
            get {
                return ResourceManager.GetString("Navigator.FlipVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_IsKeepAngle {
            get {
                return ResourceManager.GetString("Navigator.IsKeepAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep angle when changing books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_IsKeepAngleBooks {
            get {
                return ResourceManager.GetString("Navigator.IsKeepAngleBooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep flip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_IsKeepFlip {
            get {
                return ResourceManager.GetString("Navigator.IsKeepFlip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep flip when changing books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_IsKeepFlipBooks {
            get {
                return ResourceManager.GetString("Navigator.IsKeepFlipBooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_IsKeepScale {
            get {
                return ResourceManager.GetString("Navigator.IsKeepScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep scale when changing books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_IsKeepScaleBooks {
            get {
                return ResourceManager.GetString("Navigator.IsKeepScaleBooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_MoreMenu_IsVisibleThumbnail {
            get {
                return ResourceManager.GetString("Navigator.MoreMenu.IsVisibleThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_RotateLeft {
            get {
                return ResourceManager.GetString("Navigator.RotateLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_RotateRerset {
            get {
                return ResourceManager.GetString("Navigator.RotateRerset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_RotateRight {
            get {
                return ResourceManager.GetString("Navigator.RotateRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply stretch to rotate button に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_RotateStretch {
            get {
                return ResourceManager.GetString("Navigator.RotateStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_Scale {
            get {
                return ResourceManager.GetString("Navigator.Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_ScaleDown {
            get {
                return ResourceManager.GetString("Navigator.ScaleDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_ScaleReset {
            get {
                return ResourceManager.GetString("Navigator.ScaleReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_ScaleUp {
            get {
                return ResourceManager.GetString("Navigator.ScaleUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_Stretch {
            get {
                return ResourceManager.GetString("Navigator.Stretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_StretchAllowScaleDown {
            get {
                return ResourceManager.GetString("Navigator.StretchAllowScaleDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_StretchAllowScaleUp {
            get {
                return ResourceManager.GetString("Navigator.StretchAllowScaleUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_StretchScale {
            get {
                return ResourceManager.GetString("Navigator.StretchScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Navigator_Title {
            get {
                return ResourceManager.GetString("Navigator.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigatorConfig_IsVisibleThumbnail {
            get {
                return ResourceManager.GetString("NavigatorConfig.IsVisibleThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail area height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigatorConfig_ThumbnailHeight {
            get {
                return ResourceManager.GetString("NavigatorConfig.ThumbnailHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NavigatorPanelAccessor {
            get {
                return ResourceManager.GetString("NavigatorPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookCommand {
            get {
                return ResourceManager.GetString("NextBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the next book on the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookCommand_Remarks {
            get {
                return ResourceManager.GetString("NextBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookHistoryCommand {
            get {
                return ResourceManager.GetString("NextBookHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a next open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextBookHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("NextBookHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextFolderPageCommand {
            get {
                return ResourceManager.GetString("NextFolderPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the first page of the next folder of the book. Valid only in name order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextFolderPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextFolderPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryCommand {
            get {
                return ResourceManager.GetString("NextHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the following new history book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("NextHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go next view page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryPageCommand {
            get {
                return ResourceManager.GetString("NextHistoryPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to next view page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextHistoryPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextHistoryPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next One に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextOnePageCommand {
            get {
                return ResourceManager.GetString("NextOnePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only one page will move in the next direction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextOnePageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextOnePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPageCommand {
            get {
                return ResourceManager.GetString("NextPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to next page direction. If it is 2 page display, it moves by 2 pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next playlist item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPlaylistItemCommand {
            get {
                return ResourceManager.GetString("NextPlaylistItemCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to the next page mark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPlaylistItemCommand_Remarks {
            get {
                return ResourceManager.GetString("NextPlaylistItemCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next playlist item in book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPlaylistItemInBookCommand {
            get {
                return ResourceManager.GetString("NextPlaylistItemInBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the next page mark in the current book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextPlaylistItemInBookCommand_Remarks {
            get {
                return ResourceManager.GetString("NextPlaylistItemInBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll + Next に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextScrollPageCommand {
            get {
                return ResourceManager.GetString("NextScrollPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Scrolls the image in the next direction. If it is not possible to scroll, it will move to the next page. When using a loupe, only move pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextScrollPageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextScrollPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next num に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextSizePageCommand {
            get {
                return ResourceManager.GetString("NextSizePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the next direction by the set number of pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NextSizePageCommand_Remarks {
            get {
                return ResourceManager.GetString("NextSizePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (none) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoneCommand {
            get {
                return ResourceManager.GetString("NoneCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No next book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_BookNextFailed {
            get {
                return ResourceManager.GetString("Notice.BookNextFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looped. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_BookOperationPageLoop {
            get {
                return ResourceManager.GetString("Notice.BookOperationPageLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No previous book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_BookPrevFailed {
            get {
                return ResourceManager.GetString("Notice.BookPrevFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder not found. ({0})
        ///Reset the cache location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_CacheErrorDirectoryNotFound {
            get {
                return ResourceManager.GetString("Notice.CacheErrorDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_CacheErrorTitle {
            get {
                return ResourceManager.GetString("Notice.CacheErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_CannotDisplay {
            get {
                return ResourceManager.GetString("Notice.CannotDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cannot open {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_CannotOpen {
            get {
                return ResourceManager.GetString("Notice.CannotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is a bookmark folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_CannotOpenBookmarkFolder {
            get {
                return ResourceManager.GetString("Notice.CannotOpenBookmarkFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Conflicting with {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_Conflict {
            get {
                return ResourceManager.GetString("Notice.Conflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &quot;{0}&quot; conflicts with {1} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_ConflictWith {
            get {
                return ResourceManager.GetString("Notice.ConflictWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load content に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_ContentFailed {
            get {
                return ResourceManager.GetString("Notice.ContentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dropped content に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_DropContent {
            get {
                return ResourceManager.GetString("Notice.DropContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_FirstFolderPage {
            get {
                return ResourceManager.GetString("Notice.FirstFolderPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_FirstPage {
            get {
                return ResourceManager.GetString("Notice.FirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no playlist item before the current page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_FirstPlaylistItem {
            get {
                return ResourceManager.GetString("Notice.FirstPlaylistItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_FlipHorizontal {
            get {
                return ResourceManager.GetString("Notice.FlipHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_FlipVertical {
            get {
                return ResourceManager.GetString("Notice.FlipVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In order to display the HEIF image it is necessary to install the additional codec &quot;HEIF Image Extensions&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_HeifHelp {
            get {
                return ResourceManager.GetString("Notice.HeifHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is the latest history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_HistoryLastest {
            get {
                return ResourceManager.GetString("Notice.HistoryLastest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no history older than this に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_HistoryTerminal {
            get {
                return ResourceManager.GetString("Notice.HistoryTerminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image decoding failed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_ImageDecodeFailed {
            get {
                return ResourceManager.GetString("Notice.ImageDecodeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The following characters can not be used in the file name:
        ///\ / : * ? &quot; &lt; &gt; | に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_InvalidFileNameChars {
            get {
                return ResourceManager.GetString("Notice.InvalidFileNameChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The following characters can not be used:
        ///\ / : * ? &quot; &lt; &gt; | に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_InvalidSeparatorChars {
            get {
                return ResourceManager.GetString("Notice.InvalidSeparatorChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page number ({0} - {1}) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_JumpPageLabel {
            get {
                return ResourceManager.GetString("Notice.JumpPageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LastFolderPage {
            get {
                return ResourceManager.GetString("Notice.LastFolderPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LastPage {
            get {
                return ResourceManager.GetString("Notice.LastPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no playlist item after the current page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LastPlaylistItem {
            get {
                return ResourceManager.GetString("Notice.LastPlaylistItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load bookmark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadBookmarkFailed {
            get {
                return ResourceManager.GetString("Notice.LoadBookmarkFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadBookmarkFailedTitle {
            get {
                return ResourceManager.GetString("Notice.LoadBookmarkFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load history. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadHistoryFailed {
            get {
                return ResourceManager.GetString("Notice.LoadHistoryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadHistoryFailedTitle {
            get {
                return ResourceManager.GetString("Notice.LoadHistoryFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (Loading...) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadingTitle {
            get {
                return ResourceManager.GetString("Notice.LoadingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load pagemark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadPagemarkFailed {
            get {
                return ResourceManager.GetString("Notice.LoadPagemarkFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadPagemarkFailedTitle {
            get {
                return ResourceManager.GetString("Notice.LoadPagemarkFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load settings. Use the default settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadSettingFailed {
            get {
                return ResourceManager.GetString("Notice.LoadSettingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Continue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadSettingFailedButtonContinue {
            get {
                return ResourceManager.GetString("Notice.LoadSettingFailedButtonContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quit app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadSettingFailedButtonQuit {
            get {
                return ResourceManager.GetString("Notice.LoadSettingFailedButtonQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_LoadSettingFailedTitle {
            get {
                return ResourceManager.GetString("Notice.LoadSettingFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_NoFiles {
            get {
                return ResourceManager.GetString("Notice.NoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} has no pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_NoPages {
            get {
                return ResourceManager.GetString("Notice.NoPages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Not supported file type: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_NotSupportedFileType {
            get {
                return ResourceManager.GetString("Notice.NotSupportedFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to output the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_OutputFailed {
            get {
                return ResourceManager.GetString("Notice.OutputFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_PlayFailed {
            get {
                return ResourceManager.GetString("Notice.PlayFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No next playlist item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_PlaylistItemNextFailed {
            get {
                return ResourceManager.GetString("Notice.PlaylistItemNextFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No previous playlist item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_PlaylistItemPrevFailed {
            get {
                return ResourceManager.GetString("Notice.PlaylistItemPrevFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} playlist items removed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_RemoveUnlinkedPlaylistItem {
            get {
                return ResourceManager.GetString("Notice.RemoveUnlinkedPlaylistItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Illegal date-time format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_SearchKeywordDateTimeError {
            get {
                return ResourceManager.GetString("Notice.SearchKeywordDateTimeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Illegal option: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_SearchKeywordOptionError {
            get {
                return ResourceManager.GetString("Notice.SearchKeywordOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder not found. ({0})
        ///Reset the temporary location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_TemporaryErrorDirectoryNotFound {
            get {
                return ResourceManager.GetString("Notice.TemporaryErrorDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Notice_TemporaryErrorTitle {
            get {
                return ResourceManager.GetString("Notice.TemporaryErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show open book name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_BookNameShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.BookNameShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show command execution message に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_CommandShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.CommandShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show gesture status に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_GestureShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.GestureShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The image reading processing in progress mark is displayed on the upper left of the screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsBusyMarkEnabled {
            get {
                return ResourceManager.GetString("NoticeConfig.IsBusyMarkEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show message when there are no pages in the book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsEmptyMessageEnabled {
            get {
                return ResourceManager.GetString("NoticeConfig.IsEmptyMessageEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the scale display of the view operation the original image size standard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsOriginalScaleShowMessage {
            get {
                return ResourceManager.GetString("NoticeConfig.IsOriginalScaleShowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In case of 2 page display, we refer to the page with the younger number. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_IsOriginalScaleShowMessage_Remarks {
            get {
                return ResourceManager.GetString("NoticeConfig.IsOriginalScaleShowMessage.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_NoticeShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.NoticeShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show Now Loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_NowLoadingShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.NowLoadingShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sbow status change by drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NoticeConfig_ViewTransformShowMessageStyle {
            get {
                return ResourceManager.GetString("NoticeConfig.ViewTransformShowMessageStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The combination of {0} key and modifier key is not supported in {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotSupportedKeyException_Message {
            get {
                return ResourceManager.GetString("NotSupportedKeyException.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is not a ZIP file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotZipException_Message {
            get {
                return ResourceManager.GetString("NotZipException.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Diagonal scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NScrollType_Diagonal {
            get {
                return ResourceManager.GetString("NScrollType.Diagonal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   N-type scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NScrollType_NType {
            get {
                return ResourceManager.GetString("NScrollType.NType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Z-type scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NScrollType_ZType {
            get {
                return ResourceManager.GetString("NScrollType.ZType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app execution failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenApplicationErrorDialog_Title {
            get {
                return ResourceManager.GetString("OpenApplicationErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open script console に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenConsoleCommand {
            get {
                return ResourceManager.GetString("OpenConsoleCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open script _console... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenConsoleCommand_Menu {
            get {
                return ResourceManager.GetString("OpenConsoleCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the script console. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenConsoleCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenConsoleCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open context menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenContextMenuCommand {
            get {
                return ResourceManager.GetString("OpenContextMenuCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the context menu. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenContextMenuCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenContextMenuCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in explorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExplorerCommand {
            get {
                return ResourceManager.GetString("OpenExplorerCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the file of the page you are viewing in Explorer. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExplorerCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenExplorerCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommand {
            get {
                return ResourceManager.GetString("OpenExternalAppCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the displayed image with an external application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenExternalAppCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file policy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_ArchivePolicy {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.ArchivePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Program に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Command {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If not specified, launch the application associated with the extension. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Command_Remarks {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Command.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_MultiPagePolicy {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.MultiPagePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Parameter {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   $File will be replaced with the file path. $Uri is replaced with the URI escaped file path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_Parameter_Remarks {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.Parameter.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Working directory に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenExternalAppCommandParameter_WorkingDirectory {
            get {
                return ResourceManager.GetString("OpenExternalAppCommandParameter.WorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open settings window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenOptionsWindowCommand {
            get {
                return ResourceManager.GetString("OpenOptionsWindowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Settings... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenOptionsWindowCommand_Menu {
            get {
                return ResourceManager.GetString("OpenOptionsWindowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the settings window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenOptionsWindowCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenOptionsWindowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open scripts folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenScriptsFolderCommand {
            get {
                return ResourceManager.GetString("OpenScriptsFolderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the scripts folder with Explorer. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenScriptsFolderCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenScriptsFolderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder is not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenScriptsFolderErrorDialog_FolderIsNotSet {
            get {
                return ResourceManager.GetString("OpenScriptsFolderErrorDialog.FolderIsNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cannot open scripts folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenScriptsFolderErrorDialog_Title {
            get {
                return ResourceManager.GetString("OpenScriptsFolderErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open setting folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenSettingFilesFolderCommand {
            get {
                return ResourceManager.GetString("OpenSettingFilesFolderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open the folder where the configuration file setting file is saved. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenSettingFilesFolderCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenSettingFilesFolderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The location of the setting file can not be opened with the store application に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenSettingFolderErrorDialog_Message {
            get {
                return ResourceManager.GetString("OpenSettingFolderErrorDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This command can not be used に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenSettingFolderErrorDialog_Title {
            get {
                return ResourceManager.GetString("OpenSettingFolderErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display version information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenVersionWindowCommand {
            get {
                return ResourceManager.GetString("OpenVersionWindowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _About... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenVersionWindowCommand_Menu {
            get {
                return ResourceManager.GetString("OpenVersionWindowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display version information. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenVersionWindowCommand_Remarks {
            get {
                return ResourceManager.GetString("OpenVersionWindowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An argument is required for {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionArgumentException_Empty {
            get {
                return ResourceManager.GetString("OptionArgumentException.Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can not use {1} as an argument to {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionArgumentException_Failed {
            get {
                return ResourceManager.GetString("OptionArgumentException.Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specified configuration file does not exist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionArgumentException_FileNotFound {
            get {
                return ResourceManager.GetString("OptionArgumentException.FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is an unsupported argument type. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionArgumentException_NotSupportType {
            get {
                return ResourceManager.GetString("OptionArgumentException.NotSupportType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is an unknown option. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OptionArgumentException_Unknown {
            get {
                return ResourceManager.GetString("OptionArgumentException.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor {
            get {
                return ResourceManager.GetString("PageAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // Display the first page name with toast
        ///nv.ShowToast(nv.Book.Pages[0].Path) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_Example {
            get {
                return ResourceManager.GetString("PageAccessor.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last write time of the file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_LastWriteTime {
            get {
                return ResourceManager.GetString("PageAccessor.LastWriteTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_Path {
            get {
                return ResourceManager.GetString("PageAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File size (Byte) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageAccessor_Size {
            get {
                return ResourceManager.GetString("PageAccessor.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select in dialog に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_Dialog {
            get {
                return ResourceManager.GetString("PageEndAction.Dialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_Loop {
            get {
                return ResourceManager.GetString("PageEndAction.Loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to next book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_NextBook {
            get {
                return ResourceManager.GetString("PageEndAction.NextBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndAction_None {
            get {
                return ResourceManager.GetString("PageEndAction.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select an action. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndDialog_Message {
            get {
                return ResourceManager.GetString("PageEndDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   End of page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageEndDialog_Title {
            get {
                return ResourceManager.GetString("PageEndDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageFrameOrientation_Horizontal {
            get {
                return ResourceManager.GetString("PageFrameOrientation.Horizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageFrameOrientation_Vertical {
            get {
                return ResourceManager.GetString("PageFrameOrientation.Vertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Back (Alt+Left) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Back_ToolTip {
            get {
                return ResourceManager.GetString("PageList.Back.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_CopyToFolderFailed {
            get {
                return ResourceManager.GetString("PageList.CopyToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Message_MoveToFolderFailed {
            get {
                return ResourceManager.GetString("PageList.Message.MoveToFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Next (Alt+Right) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Next_ToolTip {
            get {
                return ResourceManager.GetString("PageList.Next.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Title {
            get {
                return ResourceManager.GetString("PageList.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up (Alt+Up) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageList_Up_ToolTip {
            get {
                return ResourceManager.GetString("PageList.Up.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page name display format of PageList に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListConfig_Format {
            get {
                return ResourceManager.GetString("PageListConfig.Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("PageListConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add to _playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_AddToPlaylist {
            get {
                return ResourceManager.GetString("PageListItem.Menu.AddToPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_Copy {
            get {
                return ResourceManager.GetString("PageListItem.Menu.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cop_y to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_CopyToFolder {
            get {
                return ResourceManager.GetString("PageListItem.Menu.CopyToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_Delete {
            get {
                return ResourceManager.GetString("PageListItem.Menu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in e_xplorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_Explorer {
            get {
                return ResourceManager.GetString("PageListItem.Menu.Explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mov_e to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_MoveToFolder {
            get {
                return ResourceManager.GetString("PageListItem.Menu.MoveToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_Open {
            get {
                return ResourceManager.GetString("PageListItem.Menu.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_OpenBook {
            get {
                return ResourceManager.GetString("PageListItem.Menu.OpenBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rena_me に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListItem_Menu_Rename {
            get {
                return ResourceManager.GetString("PageListItem.Menu.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor {
            get {
                return ResourceManager.GetString("PageListPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Format {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Items {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current book path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Path {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page sort mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_SortMode {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.SortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item stye に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageListPanelAccessor_Style {
            get {
                return ResourceManager.GetString("PageListPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panorama に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageMode_Panorama {
            get {
                return ResourceManager.GetString("PageMode.Panorama", resourceCulture);
            }
        }
        
        /// <summary>
        ///   One page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageMode_SinglePage {
            get {
                return ResourceManager.GetString("PageMode.SinglePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageMode_WidePage {
            get {
                return ResourceManager.GetString("PageMode.WidePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name format in PageList に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat {
            get {
                return ResourceManager.GetString("PageNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat_NameOnly {
            get {
                return ResourceManager.GetString("PageNameFormat.NameOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Raw に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat_Raw {
            get {
                return ResourceManager.GetString("PageNameFormat.Raw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Smart に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageNameFormat_Smart {
            get {
                return ResourceManager.GetString("PageNameFormat.Smart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageOperation_Landscape {
            get {
                return ResourceManager.GetString("PageOperation.Landscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Portrait に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageOperation_Portrait {
            get {
                return ResourceManager.GetString("PageOperation.Portrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page read order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageReadOrder {
            get {
                return ResourceManager.GetString("PageReadOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left to right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageReadOrder_LeftToRight {
            get {
                return ResourceManager.GetString("PageReadOrder.LeftToRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right to left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageReadOrder_RightToLeft {
            get {
                return ResourceManager.GetString("PageReadOrder.RightToLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page sort mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode {
            get {
                return ResourceManager.GetString("PageSortMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_Entry {
            get {
                return ResourceManager.GetString("PageSortMode.Entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_EntryDescending {
            get {
                return ResourceManager.GetString("PageSortMode.EntryDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_FileName {
            get {
                return ResourceManager.GetString("PageSortMode.FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_FileNameDescending {
            get {
                return ResourceManager.GetString("PageSortMode.FileNameDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_Random {
            get {
                return ResourceManager.GetString("PageSortMode.Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_Size {
            get {
                return ResourceManager.GetString("PageSortMode.Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_SizeDescending {
            get {
                return ResourceManager.GetString("PageSortMode.SizeDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_TimeStamp {
            get {
                return ResourceManager.GetString("PageSortMode.TimeStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageSortMode_TimeStampDescending {
            get {
                return ResourceManager.GetString("PageSortMode.TimeStampDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_None {
            get {
                return ResourceManager.GetString("PageStretchMode.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_Uniform {
            get {
                return ResourceManager.GetString("PageStretchMode.Uniform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extend it to fill the window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToFill {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit width to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToHorizontal {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit the area size to the window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToSize {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit height to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageStretchMode_UniformToVertical {
            get {
                return ResourceManager.GetString("PageStretchMode.UniformToVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font size of page title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageTitleConfig_FontSize {
            get {
                return ResourceManager.GetString("PageTitleConfig.FontSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show page title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageTitleConfig_IsEnabled {
            get {
                return ResourceManager.GetString("PageTitleConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Appears when the cursor is over a slider or filmstrip. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageTitleConfig_IsEnabled_Remarks {
            get {
                return ResourceManager.GetString("PageTitleConfig.IsEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 1 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageTitleConfig_PageTitleFormat1 {
            get {
                return ResourceManager.GetString("PageTitleConfig.PageTitleFormat1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageTitleConfig_PageTitleFormat2 {
            get {
                return ResourceManager.GetString("PageTitleConfig.PageTitleFormat2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageTitleConfig_PageTitleFormatMedia {
            get {
                return ResourceManager.GetString("PageTitleConfig.PageTitleFormatMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save page view recods に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageViewRecorderConfig_IsSavePageViewRecord {
            get {
                return ResourceManager.GetString("PageViewRecorderConfig.IsSavePageViewRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view recording path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageViewRecorderConfig_PageViewRecordFilePath {
            get {
                return ResourceManager.GetString("PageViewRecorderConfig.PageViewRecordFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Could not write Page view record に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PageViewRecordWriteError_Message {
            get {
                return ResourceManager.GetString("PageViewRecordWriteError.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_Banner {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.Banner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book shape に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_BookShape {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.BookShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_Original {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Square に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemImageShape_Square {
            get {
                return ResourceManager.GetString("PanelListItemImageShape.Square", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shape of Icon に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_ImageShape {
            get {
                return ResourceManager.GetString("PanelListItemProfile.ImageShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_ImageWidth {
            get {
                return ResourceManager.GetString("PanelListItemProfile.ImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The width of the icon image. The aspect ratio depends on the shape of the icon. If the thumbnail image resolution is exceeded, the image will be grainy. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_ImageWidth_Remarks {
            get {
                return ResourceManager.GetString("PanelListItemProfile.ImageWidth.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon popup に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsImagePopupEnabled {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsImagePopupEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When placing the cursor on the icon, a large image will be displayed in the popup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsImagePopupEnabled_Remarks {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsImagePopupEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsTextVisible {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsTextVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wrap name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_IsTextWrapped {
            get {
                return ResourceManager.GetString("PanelListItemProfile.IsTextWrapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Supplemental text opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemProfile_NoteOpacity {
            get {
                return ResourceManager.GetString("PanelListItemProfile.NoteOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemStyle {
            get {
                return ResourceManager.GetString("PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemStyle_Banner {
            get {
                return ResourceManager.GetString("PanelListItemStyle.Banner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Content に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemStyle_Content {
            get {
                return ResourceManager.GetString("PanelListItemStyle.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemStyle_Normal {
            get {
                return ResourceManager.GetString("PanelListItemStyle.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelListItemStyle_Thumbnail {
            get {
                return ResourceManager.GetString("PanelListItemStyle.Thumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Format path display of supplemental text に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsDecoratePlace {
            get {
                return ResourceManager.GetString("PanelsConfig.IsDecoratePlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Format as &quot;AAA (C:\BBB\CCC)&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsDecoratePlace_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.IsDecoratePlace.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide side panels automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsHidePanel {
            get {
                return ResourceManager.GetString("PanelsConfig.IsHidePanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the side panel when it is auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsHidePanelInAutoHideMode {
            get {
                return ResourceManager.GetString("PanelsConfig.IsHidePanelInAutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The left and right key input of the side panel is valid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsLeftRightKeyEnabled {
            get {
                return ResourceManager.GetString("PanelsConfig.IsLeftRightKeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Activate left / right key operation on the side panel. In the bookshelf, move the folder hierarchically. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsLeftRightKeyEnabled_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.IsLeftRightKeyEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Limit panel width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsLimitPanelWidth {
            get {
                return ResourceManager.GetString("PanelsConfig.IsLimitPanelWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Limit the width of the panel to fit in the window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsLimitPanelWidth_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.IsLimitPanelWidth.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch scroll termination bound on side panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsManipulationBoundaryFeedbackEnabled {
            get {
                return ResourceManager.GetString("PanelsConfig.IsManipulationBoundaryFeedbackEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_IsSideBarEnabled {
            get {
                return ResourceManager.GetString("PanelsConfig.IsSideBarEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse wheel scroll speed rate in thumbnail view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_MouseWheelSpeedRate {
            get {
                return ResourceManager.GetString("PanelsConfig.MouseWheelSpeedRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_Opacity {
            get {
                return ResourceManager.GetString("PanelsConfig.Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is effective in auto-hide mode. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_Opacity_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.Opacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Double click to open book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_OpenWithDoubleClick {
            get {
                return ResourceManager.GetString("PanelsConfig.OpenWithDoubleClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effective on bookshelf, bookmark panel, and history panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PanelsConfig_OpenWithDoubleClick_Remarks {
            get {
                return ResourceManager.GetString("PanelsConfig.OpenWithDoubleClick.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Paste に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PasteCommand {
            get {
                return ResourceManager.GetString("PasteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Paste に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PasteCommand_Menu {
            get {
                return ResourceManager.GetString("PasteCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Paste clipboard files and images. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PasteCommand_Remarks {
            get {
                return ResourceManager.GetString("PasteCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF page standard size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_RenderSize {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.RenderSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normally we will render according to the display size, but the lower limit will be this standard size. If it becomes smaller, it is reduced and displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_RenderSize_Remarks {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.RenderSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PdfArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("PdfArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book cache memory size (MB) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_CacheMemorySize {
            get {
                return ResourceManager.GetString("PerformanceConfig.CacheMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Once the page has been read, it is stored in memory to speed up redisplay. This value is a guideline, and memory may be used beyond this value. Note that too large a value can make the system unstable. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_CacheMemorySize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.CacheMemorySize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load image size limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLimitSourceSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLimitSourceSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the imported image with &quot;@PerformanceConfig.MaximumSize&quot; as the upper limit. It is setting for speed and memory saving. When this restriction is applied, &quot;*&quot; will be displayed in the size field of the information if it is the loaded image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLimitSourceSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLimitSourceSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the current page until the next page loads に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLoadingPageVisible {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLoadingPageVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can save memory by turning it off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsLoadingPageVisible_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsLoadingPageVisible.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   In the case of a solid compressed file, expand it in memory in advance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsPreExtractToMemory {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsPreExtractToMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It speeds up by expanding not in temporary files but in memory. The memory consumed is secured separately from the book cache memory. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_IsPreExtractToMemory_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.IsPreExtractToMemory.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of threads used for image loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_JobWorkerSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.JobWorkerSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The recommended value is 2 to 4 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_JobWorkerSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.JobWorkerSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximum image size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_MaximumSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.MaximumSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the maximum image size enlarged by the resize filter. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_MaximumSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.MaximumSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximum solid compressed file extraction size to be extracted in advance (MB) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreExtractSolidSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreExtractSolidSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed files exceeding this extraction size will not be pre-extracted. Set 0 to prohibit all pre-extraction.
        ///The Susie archive does not determine this size, but only pre-extraction in the plug-in settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreExtractSolidSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreExtractSolidSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Read ahead page size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreLoadSize {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreLoadSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Read ahead within the cache memory size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PerformanceConfig_PreLoadSize_Remarks {
            get {
                return ResourceManager.GetString("PerformanceConfig.PreLoadSize.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image file extensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PictureProfile_SupportFileTypes {
            get {
                return ResourceManager.GetString("PictureProfile.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pixelation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PixelateEffectUnit_Pixelation {
            get {
                return ResourceManager.GetString("PixelateEffectUnit.Pixelation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete playlist file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_DeleteDialog_Title {
            get {
                return ResourceManager.GetString("Playlist.DeleteDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} items deleted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_DeleteItemsMessage {
            get {
                return ResourceManager.GetString("Playlist.DeleteItemsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_ErrorDialog_Title {
            get {
                return ResourceManager.GetString("Playlist.ErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load the playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_FailedToLoad {
            get {
                return ResourceManager.GetString("Playlist.FailedToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to save the playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_FailedToSave {
            get {
                return ResourceManager.GetString("Playlist.FailedToSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_FirstIn {
            get {
                return ResourceManager.GetString("Playlist.FirstIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_LastIn {
            get {
                return ResourceManager.GetString("Playlist.LastIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current book only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_CurrentBook {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.CurrentBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_Delete {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove invalid items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_DeleteInvalid {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.DeleteInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Group by に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_GroupBy {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.GroupBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _New に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_New {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_Open {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open as a book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_OpenAsBook {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.OpenAsBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rena_me に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_Rename {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort by path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_MoreMenu_Sort {
            get {
                return ResourceManager.GetString("Playlist.MoreMenu.Sort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Playlist_Title {
            get {
                return ResourceManager.GetString("Playlist.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_CurrentPlaylist {
            get {
                return ResourceManager.GetString("PlaylistConfig.CurrentPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show only open book pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_IsCurrentBookFilterEnabled {
            get {
                return ResourceManager.GetString("PlaylistConfig.IsCurrentBookFilterEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add to the top of the list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_IsFirstIn {
            get {
                return ResourceManager.GetString("PlaylistConfig.IsFirstIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the insertion position for additional commands. If it is turned off, it will be added at the end. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_IsFirstIn_Remarks {
            get {
                return ResourceManager.GetString("PlaylistConfig.IsFirstIn.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Group and display by folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_IsGroupBy {
            get {
                return ResourceManager.GetString("PlaylistConfig.IsGroupBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_PanelListItemStyle {
            get {
                return ResourceManager.GetString("PlaylistConfig.PanelListItemStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist file storage location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_PlaylistFolder {
            get {
                return ResourceManager.GetString("PlaylistConfig.PlaylistFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist files in this folder are managed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistConfig_PlaylistFolder_Remarks {
            get {
                return ResourceManager.GetString("PlaylistConfig.PlaylistFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder is not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistErrorDialog_FolderIsNotSet {
            get {
                return ResourceManager.GetString("PlaylistErrorDialog.FolderIsNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_Copy {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cop_y to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_CopyToFolder {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.CopyToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_Delete {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open in e_xplorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_Explorer {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.Explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to another playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_MoveToAnother {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.MoveToAnother", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mov_e to folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_MoveToFolder {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.MoveToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_Open {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rena_me に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItem_Menu_Rename {
            get {
                return ResourceManager.GetString("PlaylistItem.Menu.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist item accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItemAccessor {
            get {
                return ResourceManager.GetString("PlaylistItemAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItemAccessor_Name {
            get {
                return ResourceManager.GetString("PlaylistItemAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path corresponding to the item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistItemAccessor_Path {
            get {
                return ResourceManager.GetString("PlaylistItemAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist panel accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistPanelAccessor {
            get {
                return ResourceManager.GetString("PlaylistPanelAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistPanelAccessor_Items {
            get {
                return ResourceManager.GetString("PlaylistPanelAccessor.Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current playlist name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistPanelAccessor_Name {
            get {
                return ResourceManager.GetString("PlaylistPanelAccessor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current playlist path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistPanelAccessor_Path {
            get {
                return ResourceManager.GetString("PlaylistPanelAccessor.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Selected items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistPanelAccessor_SelectedItems {
            get {
                return ResourceManager.GetString("PlaylistPanelAccessor.SelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlaylistPanelAccessor_Style {
            get {
                return ResourceManager.GetString("PlaylistPanelAccessor.Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookCommand {
            get {
                return ResourceManager.GetString("PrevBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the previous book on the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go back に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookHistoryCommand {
            get {
                return ResourceManager.GetString("PrevBookHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a previously open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevBookHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevBookHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevFolderPageCommand {
            get {
                return ResourceManager.GetString("PrevFolderPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the first page of the previous folder of the book. Valid only in name order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevFolderPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevFolderPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryCommand {
            get {
                return ResourceManager.GetString("PrevHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the previous old history book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go back view page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryPageCommand {
            get {
                return ResourceManager.GetString("PrevHistoryPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to previously view page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevHistoryPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevHistoryPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev One に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevOnePageCommand {
            get {
                return ResourceManager.GetString("PrevOnePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move forward one page only. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevOnePageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevOnePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPageCommand {
            get {
                return ResourceManager.GetString("PrevPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the front of the page. If it is 2 page display, it moves by 2 pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev playlist item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPlaylistItemCommand {
            get {
                return ResourceManager.GetString("PrevPlaylistItemCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to the previous page mark. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPlaylistItemCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevPlaylistItemCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev playlist item in book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPlaylistItemInBookCommand {
            get {
                return ResourceManager.GetString("PrevPlaylistItemInBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move to the previous page mark in the current book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevPlaylistItemInBookCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevPlaylistItemInBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll + Prev に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevScrollPageCommand {
            get {
                return ResourceManager.GetString("PrevScrollPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll the image forward in the page. If it is not possible to scroll, it will move to the previous page. When using a loupe, only move pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevScrollPageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevScrollPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prev num に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevSizePageCommand {
            get {
                return ResourceManager.GetString("PrevSizePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It moves forward by the set number of pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrevSizePageCommand_Remarks {
            get {
                return ResourceManager.GetString("PrevSizePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintCommand {
            get {
                return ResourceManager.GetString("PrintCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Print... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintCommand_Menu {
            get {
                return ResourceManager.GetString("PrintCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintCommand_Remarks {
            get {
                return ResourceManager.GetString("PrintCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_RawImage {
            get {
                return ResourceManager.GetString("PrintMode.RawImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_View {
            get {
                return ResourceManager.GetString("PrintMode.View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View with paper size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_ViewFill {
            get {
                return ResourceManager.GetString("PrintMode.ViewFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View all に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintMode_ViewStretch {
            get {
                return ResourceManager.GetString("PrintMode.ViewStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Background {
            get {
                return ResourceManager.GetString("PrintWindow.Background", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_ButtonPrint {
            get {
                return ResourceManager.GetString("PrintWindow.ButtonPrint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Column に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Column {
            get {
                return ResourceManager.GetString("PrintWindow.Column", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Content に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Content {
            get {
                return ResourceManager.GetString("PrintWindow.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Horizontal alignment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Horizontal {
            get {
                return ResourceManager.GetString("PrintWindow.Horizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_KeepDot {
            get {
                return ResourceManager.GetString("PrintWindow.KeepDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Margin (mm) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Margin {
            get {
                return ResourceManager.GetString("PrintWindow.Margin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Orientation {
            get {
                return ResourceManager.GetString("PrintWindow.Orientation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Printer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Printer {
            get {
                return ResourceManager.GetString("PrintWindow.Printer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Row に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Row {
            get {
                return ResourceManager.GetString("PrintWindow.Row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of sheets に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Sheets {
            get {
                return ResourceManager.GetString("PrintWindow.Sheets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Print に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Title {
            get {
                return ResourceManager.GetString("PrintWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vertical alignment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PrintWindow_Vertival {
            get {
                return ResourceManager.GetString("PrintWindow.Vertival", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_Bookmark {
            get {
                return ResourceManager.GetString("QueryScheme.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PC に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_File {
            get {
                return ResourceManager.GetString("QueryScheme.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_QuickAccess {
            get {
                return ResourceManager.GetString("QueryScheme.QuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QueryScheme_Root {
            get {
                return ResourceManager.GetString("QueryScheme.Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quick access property に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QuickAccessPropertyDialog_Title {
            get {
                return ResourceManager.GetString("QuickAccessPropertyDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary folders can not be added to quick access. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string QuickAccessTempError_Message {
            get {
                return ResourceManager.GetString("QuickAccessTempError.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Random Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RandomBookCommand {
            get {
                return ResourceManager.GetString("RandomBookCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load the random book on the bookshelf. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RandomBookCommand_Remarks {
            get {
                return ResourceManager.GetString("RandomBookCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReLoadCommand {
            get {
                return ResourceManager.GetString("ReLoadCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload the book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReLoadCommand_Remarks {
            get {
                return ResourceManager.GetString("ReLoadCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReloadSettingCommand {
            get {
                return ResourceManager.GetString("ReloadSettingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reload the settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReloadSettingCommand_Remarks {
            get {
                return ResourceManager.GetString("ReloadSettingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete invalid history items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RemoveUnlinkedHistoryCommand {
            get {
                return ResourceManager.GetString("RemoveUnlinkedHistoryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history items that do not exist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RemoveUnlinkedHistoryCommand_Remarks {
            get {
                return ResourceManager.GetString("RemoveUnlinkedHistoryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please select only one command to execute with &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ResolveConflictDialog_Message {
            get {
                return ResourceManager.GetString("ResolveConflictDialog.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Conflict resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ResolveConflictDialog_Title {
            get {
                return ResourceManager.GetString("ResolveConflictDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable operation swap by slider direction に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReversibleCommandParameter_IsReverse {
            get {
                return ResourceManager.GetString("ReversibleCommandParameter.IsReverse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allows the operation replacement by changing the slider direction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReversibleCommandParameter_IsReverse_Remarks {
            get {
                return ResourceManager.GetString("ReversibleCommandParameter.IsReverse.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Center {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Frequency に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Frequency {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Frequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Magnitude に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Magnitude {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Magnitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Phase に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RippleEffectUnit_Phase {
            get {
                return ResourceManager.GetString("RippleEffectUnit.Phase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SaveSettingCommand {
            get {
                return ResourceManager.GetString("SaveSettingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Performs saving the current settings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SaveSettingCommand_Remarks {
            get {
                return ResourceManager.GetString("SaveSettingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptCommand {
            get {
                return ResourceManager.GetString("ScriptCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptCommand_Remarks {
            get {
                return ResourceManager.GetString("ScriptCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command arguments に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptCommandParameter_Argument {
            get {
                return ResourceManager.GetString("ScriptCommandParameter.Argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is stored in the script &quot;nv.Args&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptCommandParameter_Argument_Remarks {
            get {
                return ResourceManager.GetString("ScriptCommandParameter.Argument.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Obsolete member access error level に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_ErrorLevel {
            get {
                return ResourceManager.GetString("ScriptConfig.ErrorLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is a debug setting. Select the error handling of member access that can no longer be used due to version upgrade. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_ErrorLevel_Remarks {
            get {
                return ResourceManager.GetString("ScriptConfig.ErrorLevel.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_IsScriptFolderEnabled {
            get {
                return ResourceManager.GetString("ScriptConfig.IsScriptFolderEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scripts folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_ScriptFolder {
            get {
                return ResourceManager.GetString("ScriptConfig.ScriptFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the scripts in this folder. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptConfig_ScriptFolder_Remarks {
            get {
                return ResourceManager.GetString("ScriptConfig.ScriptFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open script console に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorDialog_OpenConsole {
            get {
                return ResourceManager.GetString("ScriptErrorDialog.OpenConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorDialog_Title_Error {
            get {
                return ResourceManager.GetString("ScriptErrorDialog.Title.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script info に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorDialog_Title_Info {
            get {
                return ResourceManager.GetString("ScriptErrorDialog.Title.Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script warning に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorDialog_Title_Warning {
            get {
                return ResourceManager.GetString("ScriptErrorDialog.Title.Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lv3: Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorLevel_Error {
            get {
                return ResourceManager.GetString("ScriptErrorLevel.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notify as an error. Make a toast notification.
        ///The script will stop. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorLevel_Error_Remarks {
            get {
                return ResourceManager.GetString("ScriptErrorLevel.Error.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lv1: Info に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorLevel_Info {
            get {
                return ResourceManager.GetString("ScriptErrorLevel.Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notify as information. Notify the script console only.
        ///The script will continue.
        ///Obsolete member access returns the default value for the type. It can be null, and its subsequent behavior is not guaranteed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorLevel_Info_Remarks {
            get {
                return ResourceManager.GetString("ScriptErrorLevel.Info.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lv2: Warning に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorLevel_Warning {
            get {
                return ResourceManager.GetString("ScriptErrorLevel.Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notify as a warning. Make a toast notification.
        ///The script will continue.
        ///Obsolete member access returns the default value for the type. It can be null, and its subsequent behavior is not guaranteed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorLevel_Warning_Remarks {
            get {
                return ResourceManager.GetString("ScriptErrorLevel.Warning.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use {0} instead. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorMessage_Alternative {
            get {
                return ResourceManager.GetString("ScriptErrorMessage.Alternative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is obsolete. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptErrorMessage_Obsolete {
            get {
                return ResourceManager.GetString("ScriptErrorMessage.Obsolete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scrpit. Executes when the book is opened. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptOnBookLoadedCommand_Remarks {
            get {
                return ResourceManager.GetString("ScriptOnBookLoadedCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scrpit. Executes when the view pages is changed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptOnPageChangedCommand_Remarks {
            get {
                return ResourceManager.GetString("ScriptOnPageChangedCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script reference に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptReference {
            get {
                return ResourceManager.GetString("ScriptReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This section explains how to use NeeView-specific commands. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScriptReference_Summary {
            get {
                return ResourceManager.GetString("ScriptReference.Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll end margin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_EndMargin {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.EndMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the scroll distance is less than this, line movement is prioritized. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_EndMargin_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.EndMargin.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   N-type scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_IsNScroll {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.IsNScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If vertically scrollable, scroll vertically as well. If you can scroll vertically and horizontally, scroll to draw N characters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_IsNScroll_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.IsNScroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Line break stop mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_LineBreakStopMode {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.LineBreakStopMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Line by line or page by page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_LineBreakStopMode_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.LineBreakStopMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Line break stop (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_LineBreakStopTime {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.LineBreakStopTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the waiting time to prevent a line break immediately. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_LineBreakStopTime_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.LineBreakStopTime.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount of movement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_Scroll {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.Scroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The ratio to the screen to scroll in one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_Scroll_Remarks {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.Scroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_ScrollDuration {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.ScrollDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ScrollPageCommandParameter_ScrollType {
            get {
                return ResourceManager.GetString("ScrollPageCommandParameter.ScrollType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sensitivity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SensitiveDragActionParameter_Sensitivity {
            get {
                return ResourceManager.GetString("SensitiveDragActionParameter.Sensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image colored background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundAutoCommand {
            get {
                return ResourceManager.GetString("SetBackgroundAutoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the background color from the image. Specifically, the color of the upper left pixel of the image is used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundAutoCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundAutoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundBlackCommand {
            get {
                return ResourceManager.GetString("SetBackgroundBlackCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background black. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundBlackCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundBlackCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckCommand {
            get {
                return ResourceManager.GetString("SetBackgroundCheckCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background a white checkered pattern. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundCheckCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black checkered background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckDarkCommand {
            get {
                return ResourceManager.GetString("SetBackgroundCheckDarkCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background a black checkered pattern. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCheckDarkCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundCheckDarkCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCustomCommand {
            get {
                return ResourceManager.GetString("SetBackgroundCustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background a custom background. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundCustomCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundCustomCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundWhiteCommand {
            get {
                return ResourceManager.GetString("SetBackgroundWhiteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the background white. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBackgroundWhiteCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBackgroundWhiteCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book EntryTime Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by entry time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book EntryTime Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by entry time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByEntryTimeDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByEntryTimeDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Name Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Name Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileNameDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileNameDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book FileType Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by file type. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book FileType Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by file type. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByFileTypeDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByFileTypeDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Path Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByPathACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by full path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByPathACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Path Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByPathDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by full path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByPathDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByPathDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByRandomCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByRandomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books randomly. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByRandomCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByRandomCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Size Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeACommand {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Size Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderBySizeDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderBySizeDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Date Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampACommand {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampACommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in ascending order by date. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampACommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampACommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Date Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampDCommand {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampDCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of books in descending order by darte. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookOrderByTimeStampDCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookOrderByTimeStampDCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left to right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderLeftCommand {
            get {
                return ResourceManager.GetString("SetBookReadOrderLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left forward from left to right. The younger page turns to the left when 2 page is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookReadOrderLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right to left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderRightCommand {
            get {
                return ResourceManager.GetString("SetBookReadOrderRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left forward from left to right. The young page turns to the right when 2 page is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetBookReadOrderRightCommand_Remarks {
            get {
                return ResourceManager.GetString("SetBookReadOrderRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset page setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetDefaultPageSettingCommand {
            get {
                return ResourceManager.GetString("SetDefaultPageSettingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore the default page setting. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetDefaultPageSettingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetDefaultPageSettingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetFullScreenCommand {
            get {
                return ResourceManager.GetString("SetFullScreenCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make it full screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetFullScreenCommand_Remarks {
            get {
                return ResourceManager.GetString("SetFullScreenCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   One page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeOneCommand {
            get {
                return ResourceManager.GetString("SetPageModeOneCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make it 1 page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeOneCommand_Remarks {
            get {
                return ResourceManager.GetString("SetPageModeOneCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeTwoCommand {
            get {
                return ResourceManager.GetString("SetPageModeTwoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It makes 2 page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetPageModeTwoCommand_Remarks {
            get {
                return ResourceManager.GetString("SetPageModeTwoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeEntryCommand {
            get {
                return ResourceManager.GetString("SetSortModeEntryCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of pages in ascending order by entry. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeEntryCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeEntryCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeEntryDescendingCommand {
            get {
                return ResourceManager.GetString("SetSortModeEntryDescendingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of pages in descending order by entry. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeEntryDescendingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeEntryDescendingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameCommand {
            get {
                return ResourceManager.GetString("SetSortModeFileNameCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of the pages in ascending order by filename. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeFileNameCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameDescendingCommand {
            get {
                return ResourceManager.GetString("SetSortModeFileNameDescendingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of the pages in descending order by file name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeFileNameDescendingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeFileNameDescendingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeRandomCommand {
            get {
                return ResourceManager.GetString("SetSortModeRandomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle the order of pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeRandomCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeRandomCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeCommand {
            get {
                return ResourceManager.GetString("SetSortModeSizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of pages in ascending order by file size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeSizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeDescendingCommand {
            get {
                return ResourceManager.GetString("SetSortModeSizeDescendingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set the order of pages in descending order by file size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeSizeDescendingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeSizeDescendingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date Ascending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampCommand {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of pages by file date ascending order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date Descending に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampDescendingCommand {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampDescendingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sort the order of pages by file date descending order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetSortModeTimeStampDescendingCommand_Remarks {
            get {
                return ResourceManager.GetString("SetSortModeTimeStampDescendingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window if large に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeInsideCommand {
            get {
                return ResourceManager.GetString("SetStretchModeInsideCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the image to fit in the window and display it. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeInsideCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeInsideCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeNoneCommand {
            get {
                return ResourceManager.GetString("SetStretchModeNoneCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the image as it is. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeNoneCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeNoneCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window if small に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeOutsideCommand {
            get {
                return ResourceManager.GetString("SetStretchModeOutsideCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The image is enlarged as much as possible so that it fits in the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeOutsideCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeOutsideCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales the image to fit the window size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extend to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToFillCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToFillCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale up or down to fit the window size either vertically or horizontally. The image will be larger than the window size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToFillCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToFillCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit width to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToHorizontalCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToHorizontalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales to fit the width of the image to the width of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToHorizontalCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToHorizontalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit to window area size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToSizeCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToSizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales the image so that it is equal to the area size of ​​the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToSizeCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToSizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit height to window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToVerticalCommand {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToVerticalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scales to fit the height of the image to the height of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SetStretchModeUniformToVerticalCommand_Remarks {
            get {
                return ResourceManager.GetString("SetStretchModeUniformToVerticalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete all data... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingItem_Remove {
            get {
                return ResourceManager.GetString("SettingItem.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete the user data and exit the application. It is used when you want to completely delete history etc. before uninstallation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingItem_Remove_Remarks {
            get {
                return ResourceManager.GetString("SettingItem.Remove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File types に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive {
            get {
                return ResourceManager.GetString("SettingPage.Archive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_Media {
            get {
                return ResourceManager.GetString("SettingPage.Archive.Media", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_MediaAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Archive.MediaAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_MediaFeature {
            get {
                return ResourceManager.GetString("SettingPage.Archive.MediaFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_Pdf {
            get {
                return ResourceManager.GetString("SettingPage.Archive.Pdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_PdfAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Archive.PdfAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PDF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_PdfFeature {
            get {
                return ResourceManager.GetString("SettingPage.Archive.PdfFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_rSevenZip {
            get {
                return ResourceManager.GetString("SettingPage.Archive.rSevenZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_rSevenZipAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Archive.rSevenZipAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_rSevenZipFeature {
            get {
                return ResourceManager.GetString("SettingPage.Archive.rSevenZipFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ZIP に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_Zip {
            get {
                return ResourceManager.GetString("SettingPage.Archive.Zip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_ZipAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Archive.ZipAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard archive に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Archive_ZipFeature {
            get {
                return ResourceManager.GetString("SettingPage.Archive.ZipFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book {
            get {
                return ResourceManager.GetString("SettingPage.Book", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_General {
            get {
                return ResourceManager.GetString("SettingPage.Book.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_Move {
            get {
                return ResourceManager.GetString("SettingPage.Book.Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_MoveBook {
            get {
                return ResourceManager.GetString("SettingPage.Book.MoveBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_MovePage {
            get {
                return ResourceManager.GetString("SettingPage.Book.MovePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_PageSetting {
            get {
                return ResourceManager.GetString("SettingPage.Book.PageSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The left item is the default value, and the right item is the behavior when the book is opened. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_PageSetting_Remarks {
            get {
                return ResourceManager.GetString("SettingPage.Book.PageSetting.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_SubFolder {
            get {
                return ResourceManager.GetString("SettingPage.Book.SubFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic determination of subfolder loading に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_SubFolderAuto {
            get {
                return ResourceManager.GetString("SettingPage.Book.SubFolderAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Confirm loading of subfolder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_SubFolderConfirm {
            get {
                return ResourceManager.GetString("SettingPage.Book.SubFolderConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_Visual {
            get {
                return ResourceManager.GetString("SettingPage.Book.Visual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Book_VisualVisual {
            get {
                return ResourceManager.GetString("SettingPage.Book.VisualVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Bookshelf {
            get {
                return ResourceManager.GetString("SettingPage.Bookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Bookshelf_Advance {
            get {
                return ResourceManager.GetString("SettingPage.Bookshelf.Advance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Bookshelf_General {
            get {
                return ResourceManager.GetString("SettingPage.Bookshelf.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Bookshelf_Tree {
            get {
                return ResourceManager.GetString("SettingPage.Bookshelf.Tree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Bookshelf_Visual {
            get {
                return ResourceManager.GetString("SettingPage.Bookshelf.Visual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Command {
            get {
                return ResourceManager.GetString("SettingPage.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Command_General {
            get {
                return ResourceManager.GetString("SettingPage.Command.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Command_GeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Command.GeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit commands に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Command_Main {
            get {
                return ResourceManager.GetString("SettingPage.Command.Main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scripts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Command_Scipt {
            get {
                return ResourceManager.GetString("SettingPage.Command.Scipt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Context menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_ContextMenu {
            get {
                return ResourceManager.GetString("SettingPage.ContextMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit context menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_ContextMenu_Edit {
            get {
                return ResourceManager.GetString("SettingPage.ContextMenu.Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Effect {
            get {
                return ResourceManager.GetString("SettingPage.Effect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Effect_Advance {
            get {
                return ResourceManager.GetString("SettingPage.Effect.Advance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Effect_Visual {
            get {
                return ResourceManager.GetString("SettingPage.Effect.Visual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image formats に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_FileTypes {
            get {
                return ResourceManager.GetString("SettingPage.FileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SVG に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_FileTypes_Svg {
            get {
                return ResourceManager.GetString("SettingPage.FileTypes.Svg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Filmstrip {
            get {
                return ResourceManager.GetString("SettingPage.Filmstrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fonts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Fonts {
            get {
                return ResourceManager.GetString("SettingPage.Fonts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General {
            get {
                return ResourceManager.GetString("SettingPage.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_Boot {
            get {
                return ResourceManager.GetString("SettingPage.General.Boot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * This setting will be reflected after closing the setting screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_Boot_Remarks {
            get {
                return ResourceManager.GetString("SettingPage.General.Boot.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_BootBoot {
            get {
                return ResourceManager.GetString("SettingPage.General.BootBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_BootBootDetail {
            get {
                return ResourceManager.GetString("SettingPage.General.BootBootDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * This setting will be reflected after closing the setting screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_BootBootDetailTips {
            get {
                return ResourceManager.GetString("SettingPage.General.BootBootDetailTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Environment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_Detail {
            get {
                return ResourceManager.GetString("SettingPage.General.Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_DetailDetail {
            get {
                return ResourceManager.GetString("SettingPage.General.DetailDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Explorer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_DetailExplorer {
            get {
                return ResourceManager.GetString("SettingPage.General.DetailExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_DetailLanguage {
            get {
                return ResourceManager.GetString("SettingPage.General.DetailLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_Location {
            get {
                return ResourceManager.GetString("SettingPage.General.Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_LocationTypes {
            get {
                return ResourceManager.GetString("SettingPage.General.LocationTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_SaveData {
            get {
                return ResourceManager.GetString("SettingPage.General.SaveData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_SaveDataRemove {
            get {
                return ResourceManager.GetString("SettingPage.General.SaveDataRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save data に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_SaveDataTypes {
            get {
                return ResourceManager.GetString("SettingPage.General.SaveDataTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * The file location will be applied the next time you start up. Please use export, import to take over data. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_General_SaveDataTypes_Remarks {
            get {
                return ResourceManager.GetString("SettingPage.General.SaveDataTypes.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History {
            get {
                return ResourceManager.GetString("SettingPage.History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_General {
            get {
                return ResourceManager.GetString("SettingPage.History.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_GeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPage.History.GeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_GeneralBookshelf {
            get {
                return ResourceManager.GetString("SettingPage.History.GeneralBookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_GeneralDelete {
            get {
                return ResourceManager.GetString("SettingPage.History.GeneralDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_GeneralDeleteButton {
            get {
                return ResourceManager.GetString("SettingPage.History.GeneralDeleteButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_GeneralGeneral {
            get {
                return ResourceManager.GetString("SettingPage.History.GeneralGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of records saved limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_GeneralLimit {
            get {
                return ResourceManager.GetString("SettingPage.History.GeneralLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sets the maximum number of history saved in the history file. The history during application operation is not limited. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_GeneralLimit_Remarks {
            get {
                return ResourceManager.GetString("SettingPage.History.GeneralLimit.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_PageView {
            get {
                return ResourceManager.GetString("SettingPage.History.PageView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page view recording に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_History_PageViewRecord {
            get {
                return ResourceManager.GetString("SettingPage.History.PageViewRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Information {
            get {
                return ResourceManager.GetString("SettingPage.Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Information_Visual {
            get {
                return ResourceManager.GetString("SettingPage.Information.Visual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_General {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_GeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.GeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_GeneralViewOperation {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.GeneralViewOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hover scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_HoverScroll {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.HoverScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_Loupe {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.Loupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_LoupeAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.LoupeAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_LoupeGeneral {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.LoupeGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_Mouse {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.Mouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse drag に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_MouseDrag {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.MouseDrag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse long press に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_MouseHold {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.MouseHold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide cursor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_MouseVisibility {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.MouseVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_Touch {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.Touch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_TouchAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.TouchAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Manipurate_TouchGeneral {
            get {
                return ResourceManager.GetString("SettingPage.Manipurate.TouchGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Memory &amp; Performance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_MemoryAndPerformance {
            get {
                return ResourceManager.GetString("SettingPage.MemoryAndPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notification に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Notify {
            get {
                return ResourceManager.GetString("SettingPage.Notify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notification display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Notify_Display {
            get {
                return ResourceManager.GetString("SettingPage.Notify.Display", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_PageTitle {
            get {
                return ResourceManager.GetString("SettingPage.PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel list item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_PanelItems {
            get {
                return ResourceManager.GetString("SettingPage.PanelItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List item font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_PanelItems_Font {
            get {
                return ResourceManager.GetString("SettingPage.PanelItems.Font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner style of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_PanelItems_StyleBanner {
            get {
                return ResourceManager.GetString("SettingPage.PanelItems.StyleBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Content style of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_PanelItems_StyleContent {
            get {
                return ResourceManager.GetString("SettingPage.PanelItems.StyleContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail style of list items に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_PanelItems_StyleThumbnail {
            get {
                return ResourceManager.GetString("SettingPage.PanelItems.StyleThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Panels {
            get {
                return ResourceManager.GetString("SettingPage.Panels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Panels_AutoHide {
            get {
                return ResourceManager.GetString("SettingPage.Panels.AutoHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Panels_AutoHideMode {
            get {
                return ResourceManager.GetString("SettingPage.Panels.AutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window state to apply auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Panels_AutoHideMode_WindowState {
            get {
                return ResourceManager.GetString("SettingPage.Panels.AutoHideMode.WindowState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Panels_SidePanels {
            get {
                return ResourceManager.GetString("SettingPage.Panels.SidePanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Script {
            get {
                return ResourceManager.GetString("SettingPage.Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open script folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Script_OpenScriptFolder {
            get {
                return ResourceManager.GetString("SettingPage.Script.OpenScriptFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search results に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_SearchResult {
            get {
                return ResourceManager.GetString("SettingPage.SearchResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search results not found に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_SearchResult_NotFound {
            get {
                return ResourceManager.GetString("SettingPage.SearchResult.NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Slider {
            get {
                return ResourceManager.GetString("SettingPage.Slider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Slideshow {
            get {
                return ResourceManager.GetString("SettingPage.Slideshow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Susie に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie {
            get {
                return ResourceManager.GetString("SettingPage.Susie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Archive plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie_ArchivePlugin {
            get {
                return ResourceManager.GetString("SettingPage.Susie.ArchivePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General Susie に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie_General {
            get {
                return ResourceManager.GetString("SettingPage.Susie.General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie_GeneralAdvance {
            get {
                return ResourceManager.GetString("SettingPage.Susie.GeneralAdvance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Susie plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie_GeneralGeneral {
            get {
                return ResourceManager.GetString("SettingPage.Susie.GeneralGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It supports Susie plug-in (.spi). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie_GeneralGeneral_Remarks {
            get {
                return ResourceManager.GetString("SettingPage.Susie.GeneralGeneral.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Priority に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie_GeneralPriority {
            get {
                return ResourceManager.GetString("SettingPage.Susie.GeneralPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image plug-in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Susie_ImagePlugin {
            get {
                return ResourceManager.GetString("SettingPage.Susie.ImagePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Thumbnail {
            get {
                return ResourceManager.GetString("SettingPage.Thumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail image settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Thumbnail_Advance {
            get {
                return ResourceManager.GetString("SettingPage.Thumbnail.Advance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Thumbnail_Cache {
            get {
                return ResourceManager.GetString("SettingPage.Thumbnail.Cache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Thumbnail_CacheClear {
            get {
                return ResourceManager.GetString("SettingPage.Thumbnail.CacheClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Thumbnail_CacheClearButton {
            get {
                return ResourceManager.GetString("SettingPage.Thumbnail.CacheClearButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After changing the thumbnail image settings, you need to clear the cache. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Thumbnail_CacheClearTips {
            get {
                return ResourceManager.GetString("SettingPage.Thumbnail.CacheClearTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Window {
            get {
                return ResourceManager.GetString("SettingPage.Window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window advanced setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Window_Advance {
            get {
                return ResourceManager.GetString("SettingPage.Window.Advance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Window_Background {
            get {
                return ResourceManager.GetString("SettingPage.Window.Background", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Window_Theme {
            get {
                return ResourceManager.GetString("SettingPage.Window.Theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open custom theme folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_Window_Theme_OpenCustomThemeFolder {
            get {
                return ResourceManager.GetString("SettingPage.Window.Theme.OpenCustomThemeFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_WindowTitle {
            get {
                return ResourceManager.GetString("SettingPage.WindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   $Book .. Name of the book
        ///$Page[LR] .. Current page number
        ///$PageMax .. Maximum page number
        ///$ViewScale .. Scale by view operation (%)
        ///$FullName[LR] .. File name including path
        ///$Name[LR] .. File name
        ///$Size[LR] .. File size (e.g. 100×100)
        ///$SizeEx[LR] .. File size + number of pixel bits (e.g. 100×100×24)
        ///$Scale[LR] .. Image scale (%)
        ///
        ///&quot;◯◯◯[LR]&quot; indicates that the variable name changes for 1 page or 2 pages.
        ///For example, $Name is for 1 page, $NameL is for 2 pages left, $NameR is for 2 pages right.
        ///$Name is the m [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_WindowTitle_Note {
            get {
                return ResourceManager.GetString("SettingPage.WindowTitle.Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Format Description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingPage_WindowTitle_Note_Title {
            get {
                return ResourceManager.GetString("SettingPage.WindowTitle.Note.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use compressed file expansion with 7-Zip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location of 7z.dll (64 bit) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X64DllPath {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X64DllPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this if you want to use another 7z.dll. To reflect, you need to reopen the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X64DllPath_Remarks {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X64DllPath.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location of 7z.dll (32bit) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X86DllPath {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X86DllPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set this if you want to use another 7z.dll. To reflect, you need to reopen the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SevenZipArchiveConfig_X86DllPath_Remarks {
            get {
                return ResourceManager.GetString("SevenZipArchiveConfig.X86DllPath.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SharpenEffectUnit_Amount {
            get {
                return ResourceManager.GetString("SharpenEffectUnit.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SharpenEffectUnit_Height {
            get {
                return ResourceManager.GetString("SharpenEffectUnit.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowHiddenPanelsCommand {
            get {
                return ResourceManager.GetString("ShowHiddenPanelsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowHiddenPanelsCommand_Menu {
            get {
                return ResourceManager.GetString("ShowHiddenPanelsCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The panel which is hidden automatically is displayed once. It will be canceled by some operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowHiddenPanelsCommand_Remarks {
            get {
                return ResourceManager.GetString("ShowHiddenPanelsCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowMessageStyle_None {
            get {
                return ResourceManager.GetString("ShowMessageStyle.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Visible に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowMessageStyle_Normal {
            get {
                return ResourceManager.GetString("ShowMessageStyle.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tiny に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShowMessageStyle_Tiny {
            get {
                return ResourceManager.GetString("ShowMessageStyle.Tiny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_Color {
            get {
                return ResourceManager.GetString("SliderConfig.Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsEnabled {
            get {
                return ResourceManager.GetString("SliderConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide slider automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsHidePageSlider {
            get {
                return ResourceManager.GetString("SliderConfig.IsHidePageSlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the slider when it is auto-hide mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsHidePageSliderInAutoHideMode {
            get {
                return ResourceManager.GetString("SliderConfig.IsHidePageSliderInAutoHideMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Real time change with slider applies only to film strip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsSliderLinkedFilmStrip {
            get {
                return ResourceManager.GetString("SliderConfig.IsSliderLinkedFilmStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch pages when decided. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsSliderLinkedFilmStrip_Remarks {
            get {
                return ResourceManager.GetString("SliderConfig.IsSliderLinkedFilmStrip.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchronize the amount of change to the number of displayed pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsSyncPageMode {
            get {
                return ResourceManager.GetString("SliderConfig.IsSyncPageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsVisible {
            get {
                return ResourceManager.GetString("SliderConfig.IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display playlisted mark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_IsVisiblePlaylistMark {
            get {
                return ResourceManager.GetString("SliderConfig.IsVisiblePlaylistMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_Opacity {
            get {
                return ResourceManager.GetString("SliderConfig.Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is applied when &quot;@SliderConfig.IsHidePageSlider&quot; is enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_Opacity_Remarks {
            get {
                return ResourceManager.GetString("SliderConfig.Opacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider Direction に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_SliderDirection {
            get {
                return ResourceManager.GetString("SliderConfig.SliderDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page number display position に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_SliderIndexLayout {
            get {
                return ResourceManager.GetString("SliderConfig.SliderIndexLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider thickness (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderConfig_Thickness {
            get {
                return ResourceManager.GetString("SliderConfig.Thickness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left to right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderDirection_LeftToRight {
            get {
                return ResourceManager.GetString("SliderDirection.LeftToRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right to left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderDirection_RightToLeft {
            get {
                return ResourceManager.GetString("SliderDirection.RightToLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Depends on the book orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderDirection_SyncBookReadDirection {
            get {
                return ResourceManager.GetString("SliderDirection.SyncBookReadDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderIndexLayout_Left {
            get {
                return ResourceManager.GetString("SliderIndexLayout.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderIndexLayout_None {
            get {
                return ResourceManager.GetString("SliderIndexLayout.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SliderIndexLayout_Right {
            get {
                return ResourceManager.GetString("SliderIndexLayout.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset display interval with mouse move に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsCancelSlideByMouseMove {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsCancelSlideByMouseMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to OFF, it will only be reset by clear action such as clicking. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsCancelSlideByMouseMove_Remarks {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsCancelSlideByMouseMove.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop play に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsSlideShowByLoop {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsSlideShowByLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After playing to the last page, it will return to the first page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_IsSlideShowByLoop_Remarks {
            get {
                return ResourceManager.GetString("SlideShowConfig.IsSlideShowByLoop.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display interval (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SlideShowConfig_SlideShowInterval {
            get {
                return ResourceManager.GetString("SlideShowConfig.SlideShowInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start playing slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsAutoPlaySlideShow {
            get {
                return ResourceManager.GetString("StartUpConfig.IsAutoPlaySlideShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow multiple activations に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsMultiBootEnabled {
            get {
                return ResourceManager.GetString("StartUpConfig.IsMultiBootEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore an open book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsOpenLastBook {
            get {
                return ResourceManager.GetString("StartUpConfig.IsOpenLastBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore bookshelf location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsOpenLastFolder {
            get {
                return ResourceManager.GetString("StartUpConfig.IsOpenLastFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The location of the bookshelf if you do not open the book at startup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsOpenLastFolder_Remarks {
            get {
                return ResourceManager.GetString("StartUpConfig.IsOpenLastFolder.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore full screen state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreFullScreen {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore the second window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreSecondWindowPlacement {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreSecondWindowPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Also restore window coordinates when duplicates are activated. When set to OFF, it is displayed in the initial coordinates. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreSecondWindowPlacement_Remarks {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreSecondWindowPlacement.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore window coordinates に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsRestoreWindowPlacement {
            get {
                return ResourceManager.GetString("StartUpConfig.IsRestoreWindowPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Splash screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartUpConfig_IsSplashScreenEnabled {
            get {
                return ResourceManager.GetString("StartUpConfig.IsSplashScreenEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switching to original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchModeCommandParameter_IsToggle {
            get {
                return ResourceManager.GetString("StretchModeCommandParameter.IsToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the stretch mode is already specified, it will be the original size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchModeCommandParameter_IsToggle_Remarks {
            get {
                return ResourceManager.GetString("StretchModeCommandParameter.IsToggle.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchWindowCommand {
            get {
                return ResourceManager.GetString("StretchWindowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchWindowCommand_Menu {
            get {
                return ResourceManager.GetString("StretchWindowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fit the window to the MainView content size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StretchWindowCommand_Remarks {
            get {
                return ResourceManager.GetString("StretchWindowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the Susie plugin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_IsEnabled {
            get {
                return ResourceManager.GetString("SusieConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize Susie plugin in compressed file expansion に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_IsFirstOrderSusieArchive {
            get {
                return ResourceManager.GetString("SusieConfig.IsFirstOrderSusieArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prioritize Susie plugin in image display に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_IsFirstOrderSusieImage {
            get {
                return ResourceManager.GetString("SusieConfig.IsFirstOrderSusieImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Plugin folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConfig_SusiePluginPath {
            get {
                return ResourceManager.GetString("SusieConfig.SusiePluginPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection to Susie failed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieConnectError_Message {
            get {
                return ResourceManager.GetString("SusieConnectError.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load image at Susie. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusieLoadFailedException_Message {
            get {
                return ResourceManager.GetString("SusieLoadFailedException.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_Config {
            get {
                return ResourceManager.GetString("SusiePluginList.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_Down {
            get {
                return ResourceManager.GetString("SusiePluginList.Down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All On / Off に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_SwitchAll {
            get {
                return ResourceManager.GetString("SusiePluginList.SwitchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginList_Up {
            get {
                return ResourceManager.GetString("SusiePluginList.Up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   About this plugin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginWindow_About {
            get {
                return ResourceManager.GetString("SusiePluginWindow.About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache plugin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginWindow_IsCacheEnabled {
            get {
                return ResourceManager.GetString("SusiePluginWindow.IsCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginWindow_IsEnabled {
            get {
                return ResourceManager.GetString("SusiePluginWindow.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pre extract に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SusiePluginWindow_IsPreExtract {
            get {
                return ResourceManager.GetString("SusiePluginWindow.IsPreExtract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SwirlEffectUnit_Center {
            get {
                return ResourceManager.GetString("SwirlEffectUnit.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Twist amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SwirlEffectUnit_TwistAmount {
            get {
                return ResourceManager.GetString("SwirlEffectUnit.TwistAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file handling に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_ArchiveRecursiveMode {
            get {
                return ResourceManager.GetString("SystemConfig.ArchiveRecursiveMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extended range when opening compressed file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_ArchiveRecursiveMode_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.ArchiveRecursiveMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File type to be page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_BookPageCollectMode {
            get {
                return ResourceManager.GetString("SystemConfig.BookPageCollectMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you make a folder a page, you can open the folder from that page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_BookPageCollectMode_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.BookPageCollectMode.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Destination folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_DestinationFodlerCollection {
            get {
                return ResourceManager.GetString("SystemConfig.DestinationFodlerCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Download folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_DownloadPath {
            get {
                return ResourceManager.GetString("SystemConfig.DownloadPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is a storage place of the image dropped by the browser etc. If not specified, temporary folder is used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_DownloadPath_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.DownloadPath.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   External applications に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_ExternalAppCollection {
            get {
                return ResourceManager.GetString("SystemConfig.ExternalAppCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsFileWriteAccessEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsFileWriteAccessEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You will be able to delete and rename files. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsFileWriteAccessEnabled_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsFileWriteAccessEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show hidden files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsHiddenFileVisibled {
            get {
                return ResourceManager.GetString("SystemConfig.IsHiddenFileVisibled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dot-by-dot display of image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsIgnoreImageDpi {
            get {
                return ResourceManager.GetString("SystemConfig.IsIgnoreImageDpi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When displaying at the original size, it matches the pixels of the display independently of the display scale of the display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsIgnoreImageDpi_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsIgnoreImageDpi.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable IME outside the text box に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsInputMethodEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsInputMethodEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * It is applied from the next startup. Always valid for text boxes. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsInputMethodEnabled_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsInputMethodEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use natural sort に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNaturalSortEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsNaturalSortEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Makes sorting by name, such as numbers separated by periods, kanji numbers, etc. more natural. When off, same as Explorer. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNaturalSortEnabled_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsNaturalSortEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow network access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNetworkEnabled {
            get {
                return ResourceManager.GetString("SystemConfig.IsNetworkEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When turned off, the version update confirmation from the &quot;@VersionWindow.Title&quot; dialog is stopped and a confirmation dialog is displayed before connecting to the Internet with a web browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsNetworkEnabled_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsNetworkEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the start position of the file selection dialog in &quot;@LoadAsCommand&quot; the location of the currently opened book に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsOpenbookAtCurrentPlace {
            get {
                return ResourceManager.GetString("SystemConfig.IsOpenbookAtCurrentPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show confirmation dialog when deleting files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsRemoveConfirmed {
            get {
                return ResourceManager.GetString("SystemConfig.IsRemoveConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show confirmation dialog when deleting files that don&apos;t fit in the Recycle Bin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsRemoveWantNukeWarning {
            get {
                return ResourceManager.GetString("SystemConfig.IsRemoveWantNukeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make a backup of the setting file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSettingBackup {
            get {
                return ResourceManager.GetString("SystemConfig.IsSettingBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make a backup of the configuration file and load it instead if the normal configuration file can not be read. The file name is &quot;UserSetting.json.bak&quot;. The update timing is when you close the options window and when you exit the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSettingBackup_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsSettingBackup.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchronize settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSyncUserSetting {
            get {
                return ResourceManager.GetString("SystemConfig.IsSyncUserSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When multi-booting, all NeeView settings are updated when closing the options window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_IsSyncUserSetting_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.IsSyncUserSetting.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_Language {
            get {
                return ResourceManager.GetString("SystemConfig.Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * It is applied from the next startup. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_Language_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.Language.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Temporary location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_TemporaryDirectory {
            get {
                return ResourceManager.GetString("SystemConfig.TemporaryDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is used for pre-extraction and recursive compression files. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_TemporaryDirectory_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.TemporaryDirectory.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Text editor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_TextEditor {
            get {
                return ResourceManager.GetString("SystemConfig.TextEditor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If not set, use Notepad. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_TextEditor_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.TextEditor.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Web browser に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_WebBrowser {
            get {
                return ResourceManager.GetString("SystemConfig.WebBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If not set, use default web browser. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SystemConfig_WebBrowser_Remarks {
            get {
                return ResourceManager.GetString("SystemConfig.WebBrowser.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy file path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TextCopyPolicy_CopyFilePath {
            get {
                return ResourceManager.GetString("TextCopyPolicy.CopyFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TextCopyPolicy_None {
            get {
                return ResourceManager.GetString("TextCopyPolicy.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Original path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TextCopyPolicy_OriginalPath {
            get {
                return ResourceManager.GetString("TextCopyPolicy.OriginalPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom theme folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeConfig_CustomThemeFolder {
            get {
                return ResourceManager.GetString("ThemeConfig.CustomThemeFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeConfig_ThemeType {
            get {
                return ResourceManager.GetString("ThemeConfig.ThemeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder is not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeErrorDialog_FolderIsNotSet {
            get {
                return ResourceManager.GetString("ThemeErrorDialog.FolderIsNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeErrorDialog_Title {
            get {
                return ResourceManager.GetString("ThemeErrorDialog.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeType_Custom {
            get {
                return ResourceManager.GetString("ThemeType.Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeType_Dark {
            get {
                return ResourceManager.GetString("ThemeType.Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark monochrome に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeType_DarkMonochrome {
            get {
                return ResourceManager.GetString("ThemeType.DarkMonochrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   High contrast に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeType_HighContrast {
            get {
                return ResourceManager.GetString("ThemeType.HighContrast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Light に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeType_Light {
            get {
                return ResourceManager.GetString("ThemeType.Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Light monochrome に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeType_LightMonochrome {
            get {
                return ResourceManager.GetString("ThemeType.LightMonochrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Follow Windows settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeType_System {
            get {
                return ResourceManager.GetString("ThemeType.System", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache retention period に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_CacheLimitSpan {
            get {
                return ResourceManager.GetString("ThumbnailConfig.CacheLimitSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail image format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Format {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PNG is high quality, but the data size is larger than JPEG. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Format_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Format.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail image resolution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ImageWidth {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ImageWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The higher the value, the higher the resolution but the larger the data size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ImageWidth_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ImageWidth.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use thumbnail cache に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_IsCacheEnabled {
            get {
                return ResourceManager.GetString("ThumbnailConfig.IsCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cache the book thumbnail. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_IsCacheEnabled_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.IsCacheEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Create a video thumbnail に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_IsVideoThumbnailEnabled {
            get {
                return ResourceManager.GetString("ThumbnailConfig.IsVideoThumbnailEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail quality に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Quality {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Quality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quality when the thumbnail image format is JPEG. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_Quality_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.Quality.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book Thumbnail Capacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailBookCapacity {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailBookCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of book thumbnails held in memory. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailBookCapacity_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailBookCapacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail cache file location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailCacheFilePath {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailCacheFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page Thumbnail Capacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailPageCapacity {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailPageCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of page thumbnails held in memory. When the book is closed everything is destroyed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThumbnailConfig_ThumbnailPageCapacity_Remarks {
            get {
                return ResourceManager.GetString("ThumbnailConfig.ThumbnailPageCapacity.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBackgroundCommand {
            get {
                return ResourceManager.GetString("ToggleBackgroundCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the background sequentially. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBackgroundCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBackgroundCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Removed bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_Off {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Added bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_On {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookmark for currently open book. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookmarkCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBookmarkCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch book order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookOrderCommand {
            get {
                return ResourceManager.GetString("ToggleBookOrderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the order of books in order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookOrderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBookOrderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Book orientation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookReadOrderCommand {
            get {
                return ResourceManager.GetString("ToggleBookReadOrderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle right and left open. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleBookReadOrderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleBookReadOrderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   switch: bool|ON/OFF. Toggle if omitted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCommand_Execute_Remarks {
            get {
                return ResourceManager.GetString("ToggleCommand.Execute.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle custom size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom size OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_Off {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_On {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggles enabling / disabling of size specification applied to original size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleCustomSizeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleCustomSizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand {
            get {
                return ResourceManager.GetString("ToggleEffectCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleEffectCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_Off {
            get {
                return ResourceManager.GetString("ToggleEffectCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_On {
            get {
                return ResourceManager.GetString("ToggleEffectCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle effect on / off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleEffectCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleEffectCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateCommand {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic rotation is applied regardless of the aspect ratio of the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateOffCommand {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleForceAutoRotateOnCommand {
            get {
                return ResourceManager.GetString("ToggleForceAutoRotateOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_Off {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_On {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the full screen state. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleFullScreenCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleFullScreenCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand {
            get {
                return ResourceManager.GetString("ToggleGridCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleGridCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_Off {
            get {
                return ResourceManager.GetString("ToggleGridCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Grid に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_On {
            get {
                return ResourceManager.GetString("ToggleGridCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of grid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleGridCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleGridCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide menu OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_On {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide the menu. It is displayed by moving the cursor to the upper end of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideMenuCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHideMenuCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide slider OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_On {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide the slider. It is displayed by moving the cursor to the lower end of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePageSliderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHidePageSliderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide panels OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide panels に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_On {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically hide the left and right panels. It is displayed by moving the cursor to the left and right edges of the window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHidePanelCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHidePanelCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide filmstrip OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto hide filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_On {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display the film strip only when using the slider. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHideThumbnailListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHideThumbnailListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle hover scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHoverScrollCommand {
            get {
                return ResourceManager.GetString("ToggleHoverScrollCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hover scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHoverScrollCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleHoverScrollCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hover scroll OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHoverScrollCommand_Off {
            get {
                return ResourceManager.GetString("ToggleHoverScrollCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hover scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHoverScrollCommand_On {
            get {
                return ResourceManager.GetString("ToggleHoverScrollCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scrolls according to the position of the cursor. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleHoverScrollCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleHoverScrollCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateCommand {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto left rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When displaying the page, left rotate the portrait image 90 degrees. If the window is portrait, rotate horizontally long image by 90 degrees. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle auto right rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When displaying the page, right rotate the portrait image 90 degrees. If the window is portrait, rotate horizontally long image by 90 degrees. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsAutoRotateRightCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsAutoRotateRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Turn the loupe on or off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsLoupeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsLoupeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Load subfolders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When loading images from folders, subfolders or compressed files are also loaded at the same time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsRecursiveFolderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsRecursiveFolderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split wide page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split wide page OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Split wide page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When one page is displayed, divide the landscape page into pages. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedDividePageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedDividePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page alone OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Even on 2 page display, the first page is displayed as 1 page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleFirstPageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleFirstPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page alone OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Last page alone に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Even on 2 page display, the last page is displayed on 1 page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedSingleLastPageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedSingleLastPageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wide is two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wide is two page OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand_Off {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wide is two page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand_On {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When two pages are displayed, the horizontally long image is regarded as two pages and is displayed independently. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleIsSupportedWidePageCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleIsSupportedWidePageCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle MainView window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView docking に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand_Off {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MainView floating に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand_On {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make the MainView a window. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMainViewFloatingCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleMainViewFloatingCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play/Stop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMediaPlayCommand {
            get {
                return ResourceManager.GetString("ToggleMediaPlayCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle between playing and stopping the movie. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleMediaPlayCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleMediaPlayCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_Off {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep dot に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_On {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When set to ON, it will expand while maintaining the dot. When it is OFF, scale conversion processing (Fant) is executed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleNearestNeighborCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleNearestNeighborCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle page mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageModeCommand {
            get {
                return ResourceManager.GetString("TogglePageModeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch between 1 page display and 2 page display. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePageModeCommand_Remarks {
            get {
                return ResourceManager.GetString("TogglePageModeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle file operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_Menu {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disable file operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_Off {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable file operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_On {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle enable / disable of file operation command. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePermitFileCommand_Remarks {
            get {
                return ResourceManager.GetString("TogglePermitFileCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle playlist item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePlaylistItemCommand {
            get {
                return ResourceManager.GetString("TogglePlaylistItemCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add to playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePlaylistItemCommand_Menu {
            get {
                return ResourceManager.GetString("TogglePlaylistItemCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Removed from playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePlaylistItemCommand_Off {
            get {
                return ResourceManager.GetString("TogglePlaylistItemCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Added to playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePlaylistItemCommand_On {
            get {
                return ResourceManager.GetString("TogglePlaylistItemCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add or delete the current page to the playlist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TogglePlaylistItemCommand_Remarks {
            get {
                return ResourceManager.GetString("TogglePlaylistItemCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_Off {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resize filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_On {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle resize filter on / off. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleResizeFilterCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleResizeFilterCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop slideshw に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_Off {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_On {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle play / stop of the slideshow. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSlideShowCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleSlideShowCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch pages order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSortModeCommand {
            get {
                return ResourceManager.GetString("ToggleSortModeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the order of the pages in order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleSortModeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleSortModeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleDownCommand {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale down on stretch. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow stretch scale up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleUpCommand {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale up on stretch. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchAllowScaleUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchAllowScaleUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommand {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the stretch in order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableNone {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switchable mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableNone_Title {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableNone.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.Uniform に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniform {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToFill に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToFill {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToHorizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToHorizontal {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToSize に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToSize {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @PageStretchMode.UniformToVertical に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsEnableUniformToVertical {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsEnableUniformToVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsLoop {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeCommandParameter_IsLoop_Title {
            get {
                return ResourceManager.GetString("ToggleStretchModeCommandParameter.IsLoop.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch stretch (reverse) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeReverseCommand {
            get {
                return ResourceManager.GetString("ToggleStretchModeReverseCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Switch the stretch in order. (reverse) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleStretchModeReverseCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleStretchModeReverseCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_Off {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_On {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Always display the window in front. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleTopmostCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleTopmostCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipHorizontalCommand {
            get {
                return ResourceManager.GetString("ToggleViewFlipHorizontalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip the image left and right. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipHorizontalCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleViewFlipHorizontalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle flip vertial に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipVerticalCommand {
            get {
                return ResourceManager.GetString("ToggleViewFlipVerticalCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip the image upside down. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleViewFlipVerticalCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleViewFlipVerticalCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Address bar OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Address bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the address bar. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleAddressBarCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleAddressBarCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookmark panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the bookmark panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookmarkListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleBookmarkListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the bookshelf panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleBookshelfCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleBookshelfCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Effect panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the effect panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleEffectInfoCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleEffectInfoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle information panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Information panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the information panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFileInfoCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleFileInfoCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the Folders tree. The bookshelf is displayed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleFoldersTreeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleFoldersTreeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle history panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History panel OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   History panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the history panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleHistoryListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleHistoryListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Navigator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the navigator panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleNavigatorCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleNavigatorCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle PageList panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList panel OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the PageList panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisiblePageListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageSliderCommand {
            get {
                return ResourceManager.GetString("ToggleVisiblePageSliderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageSliderCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisiblePageSliderCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageSliderCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisiblePageSliderCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slider に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageSliderCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisiblePageSliderCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the slider. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePageSliderCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisiblePageSliderCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle playlist panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePlaylistCommand {
            get {
                return ResourceManager.GetString("ToggleVisiblePlaylistCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePlaylistCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisiblePlaylistCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist panel OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePlaylistCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisiblePlaylistCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePlaylistCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisiblePlaylistCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle vidible / hide of the playlist panel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisiblePlaylistCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisiblePlaylistCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side bar OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Side bar に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of sidebar. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleSideBarCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleSideBarCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_Off {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filmstrip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_On {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle visible / hide of the filmstrip. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleVisibleThumbnailListCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleVisibleThumbnailListCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximize window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMaximizeCommand {
            get {
                return ResourceManager.GetString("ToggleWindowMaximizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximize に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMaximizeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleWindowMaximizeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximize the window. If it has already been maximized, restore it to its original size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMaximizeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleWindowMaximizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimize window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMinimizeCommand {
            get {
                return ResourceManager.GetString("ToggleWindowMinimizeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimize に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMinimizeCommand_Menu {
            get {
                return ResourceManager.GetString("ToggleWindowMinimizeCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimize the window. If it has already been minimized, restore it to its original size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ToggleWindowMinimizeCommand_Remarks {
            get {
                return ResourceManager.GetString("ToggleWindowMinimizeCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TokenFormat {
            get {
                return ResourceManager.GetString("TokenFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch view operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_Drag {
            get {
                return ResourceManager.GetString("TouchAction.Drag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_Gesture {
            get {
                return ResourceManager.GetString("TouchAction.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loupe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_Loupe {
            get {
                return ResourceManager.GetString("TouchAction.Loupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_MouseDrag {
            get {
                return ResourceManager.GetString("TouchAction.MouseDrag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchAction_None {
            get {
                return ResourceManager.GetString("TouchAction.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Single touch drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_DragAction {
            get {
                return ResourceManager.GetString("TouchConfig.DragAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimum movement distance for touch drag judgment (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_GestureMinimumDistance {
            get {
                return ResourceManager.GetString("TouchConfig.GestureMinimumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dragging is judged to start for the first time by moving this distance. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_GestureMinimumDistance_Remarks {
            get {
                return ResourceManager.GetString("TouchConfig.GestureMinimumDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Long press Touch drag operation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_HoldAction {
            get {
                return ResourceManager.GetString("TouchConfig.HoldAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable rotation operation with multi-touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_IsAngleEnabled {
            get {
                return ResourceManager.GetString("TouchConfig.IsAngleEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the touch function に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_IsEnabled {
            get {
                return ResourceManager.GetString("TouchConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When turned off, it is recognized as a standard mouse operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_IsEnabled_Remarks {
            get {
                return ResourceManager.GetString("TouchConfig.IsEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable sizing operation with pinch in and pinch out に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_IsScaleEnabled {
            get {
                return ResourceManager.GetString("TouchConfig.IsScaleEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation pinch minimum change distance (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationDistance {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the minimum operating distance at which rotation and enlargement / reduction by touch operation are effective. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationDistance_Remarks {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationDistance.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch operation pinch minimum determination distance (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationRadius {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is the distance between the minimum of 2 touches judged as rotation by touch operation, enlargement / reduction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchConfig_MinimumManipulationRadius_Remarks {
            get {
                return ResourceManager.GetString("TouchConfig.MinimumManipulationRadius.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch emulate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchEmulateCommand {
            get {
                return ResourceManager.GetString("TouchEmulateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute the touch command at the cursor position. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TouchEmulateCommand_Remarks {
            get {
                return ResourceManager.GetString("TouchEmulateCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnloadCommand {
            get {
                return ResourceManager.GetString("UnloadCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnloadCommand_Menu {
            get {
                return ResourceManager.GetString("UnloadCommand.Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close the open workbook. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnloadCommand_Remarks {
            get {
                return ResourceManager.GetString("UnloadCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnsharpMaskConfig_Amount {
            get {
                return ResourceManager.GetString("UnsharpMaskConfig.Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnsharpMaskConfig_Radius {
            get {
                return ResourceManager.GetString("UnsharpMaskConfig.Radius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Threshold に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnsharpMaskConfig_Threshold {
            get {
                return ResourceManager.GetString("UnsharpMaskConfig.Threshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Checking the latest version ... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Checking {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Update check failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Failed {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView is the latest version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Lastest {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Lastest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A new version has been released に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_New {
            get {
                return ResourceManager.GetString("VersionChecker.Message.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeeView is an unknown version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_Unknown {
            get {
                return ResourceManager.GetString("VersionChecker.Message.Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The format of the update page is different from what is supposed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionChecker_Message_WrongFormat {
            get {
                return ResourceManager.GetString("VersionChecker.Message.WrongFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Go to download page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_Download {
            get {
                return ResourceManager.GetString("VersionWindow.Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   License Info / Change Log に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_License {
            get {
                return ResourceManager.GetString("VersionWindow.License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Copy version info に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_Menu_Copy {
            get {
                return ResourceManager.GetString("VersionWindow.Menu.Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Project Page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_Project {
            get {
                return ResourceManager.GetString("VersionWindow.Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   About に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VersionWindow_Title {
            get {
                return ResourceManager.GetString("VersionWindow.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bottom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignment_Bottom {
            get {
                return ResourceManager.GetString("VerticalAlignment.Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignment_Center {
            get {
                return ResourceManager.GetString("VerticalAlignment.Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Top に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignment_Top {
            get {
                return ResourceManager.GetString("VerticalAlignment.Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale down by stretching に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AllowStretchScaleDown {
            get {
                return ResourceManager.GetString("ViewConfig.AllowStretchScaleDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow scale up by stretching に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AllowStretchScaleUp {
            get {
                return ResourceManager.GetString("ViewConfig.AllowStretchScaleUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotating Snap に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AngleFrequency {
            get {
                return ResourceManager.GetString("ViewConfig.AngleFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_AutoRotate {
            get {
                return ResourceManager.GetString("ViewConfig.AutoRotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_BaseScale {
            get {
                return ResourceManager.GetString("ViewConfig.BaseScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After applying the stretch, apply this scale value. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_BaseScale_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.BaseScale.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center of flip に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_FlipCenter {
            get {
                return ResourceManager.GetString("ViewConfig.FlipCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable base scale に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsBaseScaleEnabled {
            get {
                return ResourceManager.GetString("ViewConfig.IsBaseScaleEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable base scale. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsBaseScaleEnabled_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.IsBaseScaleEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain the angle even when changing pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepAngle {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This setting does not work when automatic rotation is enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepAngle_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepAngle.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain the angle even when changing books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepAngleBooks {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepAngleBooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Works when &quot;@ViewConfig.IsKeepAngle&quot; is enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepAngleBooks_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepAngleBooks.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain reversal even when changing pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepFlip {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepFlip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain scaling even when changing books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepFlipBooks {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepFlipBooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain scaling even when changing pages に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepScale {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maintain reversal even when changing books に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsKeepScaleBooks {
            get {
                return ResourceManager.GetString("ViewConfig.IsKeepScaleBooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move inside the window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsLimitMove {
            get {
                return ResourceManager.GetString("ViewConfig.IsLimitMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply stretch to navigator rotation buttons に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsRotateStretchEnabled {
            get {
                return ResourceManager.GetString("ViewConfig.IsRotateStretchEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use the display start position as the center of the image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsViewStartPositionCenter {
            get {
                return ResourceManager.GetString("ViewConfig.IsViewStartPositionCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When turned off, the upper right and upper left reference switches depending on the read direction. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_IsViewStartPositionCenter_Remarks {
            get {
                return ResourceManager.GetString("ViewConfig.IsViewStartPositionCenter.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main view margin (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_MainViewMergin {
            get {
                return ResourceManager.GetString("ViewConfig.MainViewMergin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center of rotation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_RotateCenter {
            get {
                return ResourceManager.GetString("ViewConfig.RotateCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center of scaling に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_ScaleCenter {
            get {
                return ResourceManager.GetString("ViewConfig.ScaleCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stretch mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewConfig_StretchMode {
            get {
                return ResourceManager.GetString("ViewConfig.StretchMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOffCommand {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel flip. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOffCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOffCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip horizontal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOnCommand {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip the image left and right. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipHorizontalOnCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipHorizontalOnCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertial OFF に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOffCommand {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel flip. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOffCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOffCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flip vertial に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOnCommand {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOnCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Turn it upside down. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewFlipVerticalOnCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewFlipVerticalOnCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ViewPage accessor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor {
            get {
                return ResourceManager.GetString("ViewPageAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   //  Display the view page name with toast
        ///nv.ShowToast(nv.Book.ViewPages[0].Path) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor_Example {
            get {
                return ResourceManager.GetString("ViewPageAccessor.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor_Height {
            get {
                return ResourceManager.GetString("ViewPageAccessor.Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPageAccessor_Width {
            get {
                return ResourceManager.GetString("ViewPageAccessor.Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   View reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewResetCommand {
            get {
                return ResourceManager.GetString("ViewResetCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset rotation, scaling, movement, and inversion by manipulating the view. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewResetCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewResetCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotation angle に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_Angle {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is an angle which rotates by one operation. (0-180) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_Angle_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.Angle.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply image stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_IsStretch {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.IsStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Re-apply image stretch after rotation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateCommandParameter_IsStretch_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateCommandParameter.IsStretch.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateLeftCommand {
            get {
                return ResourceManager.GetString("ViewRotateLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotates the image to the left. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right rotate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateRightCommand {
            get {
                return ResourceManager.GetString("ViewRotateRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rotate the image to the right. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewRotateRightCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewRotateRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   100% snap に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_IsSnapDefaultScale {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.IsSnapDefaultScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make sure to zoom in and out by 100%. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_IsSnapDefaultScale_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.IsSnapDefaultScale.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scale rate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_Scale {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is the rate of change by one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleCommandParameter_Scale_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleCommandParameter.Scale.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Zoom out に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleDownCommand {
            get {
                return ResourceManager.GetString("ViewScaleDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reduce the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Zoom in に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleUpCommand {
            get {
                return ResourceManager.GetString("ViewScaleUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enlarge the image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScaleUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScaleUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow vertical scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_AllowCrossScroll {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.AllowCrossScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you can not scroll in the axial direction, sucrose in the direction perpendicular to the axis. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_AllowCrossScroll_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.AllowCrossScroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount of movement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_Scroll {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.Scroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The ratio of the screen to scroll in one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_Scroll_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.Scroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollCommandParameter_ScrollDuration {
            get {
                return ResourceManager.GetString("ViewScrollCommandParameter.ScrollDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll ↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollDownCommand {
            get {
                return ResourceManager.GetString("ViewScrollDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image downwards. When it is not possible to scroll vertically, side scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll ← に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollLeftCommand {
            get {
                return ResourceManager.GetString("ViewScrollLeftCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image to the left. If horizontal scrolling is not possible, vertical scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollLeftCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollLeftCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Line break stop (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_LineBreakStopTime {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.LineBreakStopTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This is the waiting time to prevent line breaks immediately. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_LineBreakStopTime_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.LineBreakStopTime.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Amount of movement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_Scroll {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.Scroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The ratio to the screen to scroll in one operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_Scroll_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.Scroll.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll time (sec) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_ScrollDuration {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.ScrollDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeCommandParameter_ScrollType {
            get {
                return ResourceManager.GetString("ViewScrollNTypeCommandParameter.ScrollType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   N-type scroll ↓ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeDownCommand {
            get {
                return ResourceManager.GetString("ViewScrollNTypeDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you can scroll vertically and horizontally, scroll to draw N characters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeDownCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeDownCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   N-type scroll ↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeUpCommand {
            get {
                return ResourceManager.GetString("ViewScrollNTypeUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you can scroll vertically and horizontally, scroll to draw N characters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollNTypeUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollNTypeUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll → に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollRightCommand {
            get {
                return ResourceManager.GetString("ViewScrollRightCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image to the right. If horizontal scrolling is not possible, vertical scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollRightCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollRightCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll ↑ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollUpCommand {
            get {
                return ResourceManager.GetString("ViewScrollUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roll the image upwards. When it is not possible to scroll vertically, side scrolling will occur. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewScrollUpCommand_Remarks {
            get {
                return ResourceManager.GetString("ViewScrollUpCommand.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowChromeFrame_None {
            get {
                return ResourceManager.GetString("WindowChromeFrame.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowChromeFrame_WindowFrame {
            get {
                return ResourceManager.GetString("WindowChromeFrame.WindowFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply auto-hide mode in full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsAutoHideInFullScreen {
            get {
                return ResourceManager.GetString("WindowConfig.IsAutoHideInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply auto-hide mode in normal window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsAutoHideInNormal {
            get {
                return ResourceManager.GetString("WindowConfig.IsAutoHideInNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply auto-hide mode in maximized window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsAutoHidInMaximized {
            get {
                return ResourceManager.GetString("WindowConfig.IsAutoHidInMaximized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title bar operation at full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsCaptionEmulateInFullScreen {
            get {
                return ResourceManager.GetString("WindowConfig.IsCaptionEmulateInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Accepts double-click and drag operations in the title bar during full screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsCaptionEmulateInFullScreen_Remarks {
            get {
                return ResourceManager.GetString("WindowConfig.IsCaptionEmulateInFullScreen.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore Aero Snap window placement に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsRestoreAeroSnapPlacement {
            get {
                return ResourceManager.GetString("WindowConfig.IsRestoreAeroSnapPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_IsTopmost {
            get {
                return ResourceManager.GetString("WindowConfig.IsTopmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gap adjustment of window maximization (pixel) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_MaximizeWindowGapWidth {
            get {
                return ResourceManager.GetString("WindowConfig.MaximizeWindowGapWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If there is a gap in maximizing the window, adjust with this value. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_MaximizeWindowGapWidth_Remarks {
            get {
                return ResourceManager.GetString("WindowConfig.MaximizeWindowGapWidth.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disable mouse data when activating window with mouse に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_MouseActivateAndEat {
            get {
                return ResourceManager.GetString("WindowConfig.MouseActivateAndEat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Window state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowConfig_State {
            get {
                return ResourceManager.GetString("WindowConfig.State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowSettingTitle {
            get {
                return ResourceManager.GetString("WindowSettingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FullScreen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_FullScreen {
            get {
                return ResourceManager.GetString("WindowStateEx.FullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximized に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_Maximized {
            get {
                return ResourceManager.GetString("WindowStateEx.Maximized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Minimized に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_Minimized {
            get {
                return ResourceManager.GetString("WindowStateEx.Minimized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_None {
            get {
                return ResourceManager.GetString("WindowStateEx.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Normal に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowStateEx_Normal {
            get {
                return ResourceManager.GetString("WindowStateEx.Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 1 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitleConfig_WindowTitleFormat1 {
            get {
                return ResourceManager.GetString("WindowTitleConfig.WindowTitleFormat1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For 2 page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitleConfig_WindowTitleFormat2 {
            get {
                return ResourceManager.GetString("WindowTitleConfig.WindowTitleFormat2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   For video に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WindowTitleConfig_WindowTitleFormatMedia {
            get {
                return ResourceManager.GetString("WindowTitleConfig.WindowTitleFormatMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Add {
            get {
                return ResourceManager.GetString("Word.Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All history に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_AllHistory {
            get {
                return ResourceManager.GetString("Word.AllHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Alternative に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Alternative {
            get {
                return ResourceManager.GetString("Word.Alternative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Argument に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Argument {
            get {
                return ResourceManager.GetString("Word.Argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookmark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Bookmark {
            get {
                return ResourceManager.GetString("Word.Bookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bookshelf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Bookshelf {
            get {
                return ResourceManager.GetString("Word.Bookshelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Cancel {
            get {
                return ResourceManager.GetString("Word.Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cause に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Cause {
            get {
                return ResourceManager.GetString("Word.Cause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disk drive に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_CDRomDrive {
            get {
                return ResourceManager.GetString("Word.CDRomDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Clear {
            get {
                return ResourceManager.GetString("Word.Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Close {
            get {
                return ResourceManager.GetString("Word.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Command {
            get {
                return ResourceManager.GetString("Word.Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_CommandList {
            get {
                return ResourceManager.GetString("Word.CommandList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_CommandName {
            get {
                return ResourceManager.GetString("Word.CommandName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Command parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_CommandParameter {
            get {
                return ResourceManager.GetString("Word.CommandParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Config {
            get {
                return ResourceManager.GetString("Word.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Config list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_ConfigList {
            get {
                return ResourceManager.GetString("Word.ConfigList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_CustomBackground {
            get {
                return ResourceManager.GetString("Word.CustomBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} days ago に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_DaysAgo {
            get {
                return ResourceManager.GetString("Word.DaysAgo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_DefaultApp {
            get {
                return ResourceManager.GetString("Word.DefaultApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   degree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Degree {
            get {
                return ResourceManager.GetString("Word.Degree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Delete {
            get {
                return ResourceManager.GetString("Word.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Description に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Description {
            get {
                return ResourceManager.GetString("Word.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Down {
            get {
                return ResourceManager.GetString("Word.Down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Edit {
            get {
                return ResourceManager.GetString("Word.Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Embedded image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_EmbeddedImage {
            get {
                return ResourceManager.GetString("Word.EmbeddedImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Error {
            get {
                return ResourceManager.GetString("Word.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   e.g. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Example {
            get {
                return ResourceManager.GetString("Word.Example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Excluded path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_ExcludePath {
            get {
                return ResourceManager.GetString("Word.ExcludePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Export に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Export {
            get {
                return ResourceManager.GetString("Word.Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Extension {
            get {
                return ResourceManager.GetString("Word.Extension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fields に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Fields {
            get {
                return ResourceManager.GetString("Word.Fields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_File {
            get {
                return ResourceManager.GetString("Word.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Files {
            get {
                return ResourceManager.GetString("Word.Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   First page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_FirstPage {
            get {
                return ResourceManager.GetString("Word.FirstPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Local disk に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_FixedDrive {
            get {
                return ResourceManager.GetString("Word.FixedDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Folder {
            get {
                return ResourceManager.GetString("Word.Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Folders {
            get {
                return ResourceManager.GetString("Word.Folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Folders tree に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_FoldersTree {
            get {
                return ResourceManager.GetString("Word.FoldersTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Full screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_FullScreen {
            get {
                return ResourceManager.GetString("Word.FullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gesture に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Gesture {
            get {
                return ResourceManager.GetString("Word.Gesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Group に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Group {
            get {
                return ResourceManager.GetString("Word.Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Import {
            get {
                return ResourceManager.GetString("Word.Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Innner に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Inner {
            get {
                return ResourceManager.GetString("Word.Inner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_IsPanelSelected {
            get {
                return ResourceManager.GetString("Word.IsPanelSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panel visibility に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_IsPanelVisible {
            get {
                return ResourceManager.GetString("Word.IsPanelVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Item に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Item {
            get {
                return ResourceManager.GetString("Word.Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (None) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_ItemNone {
            get {
                return ResourceManager.GetString("Word.ItemNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jump に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Jump {
            get {
                return ResourceManager.GetString("Word.Jump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Left {
            get {
                return ResourceManager.GetString("Word.Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Loop {
            get {
                return ResourceManager.GetString("Word.Loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Main Menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_MainMenu {
            get {
                return ResourceManager.GetString("Word.MainMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Methods に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Methods {
            get {
                return ResourceManager.GetString("Word.Methods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Name {
            get {
                return ResourceManager.GetString("Word.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Netword drive に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_NetworkDrive {
            get {
                return ResourceManager.GetString("Word.NetworkDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_NewFolder {
            get {
                return ResourceManager.GetString("Word.NewFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_No {
            get {
                return ResourceManager.GetString("Word.No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No Limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_NoLimit {
            get {
                return ResourceManager.GetString("Word.NoLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   None に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_None {
            get {
                return ResourceManager.GetString("Word.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Obsolete members に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_ObsoleteList {
            get {
                return ResourceManager.GetString("Word.ObsoleteList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Off に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Off {
            get {
                return ResourceManager.GetString("Word.Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   OK に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_OK {
            get {
                return ResourceManager.GetString("Word.OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   On に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_On {
            get {
                return ResourceManager.GetString("Word.On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Open {
            get {
                return ResourceManager.GetString("Word.Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Page に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Page {
            get {
                return ResourceManager.GetString("Word.Page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PageList に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_PageList {
            get {
                return ResourceManager.GetString("Word.PageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pagemark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Pagemark {
            get {
                return ResourceManager.GetString("Word.Pagemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Parameter {
            get {
                return ResourceManager.GetString("Word.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parameters に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Parameters {
            get {
                return ResourceManager.GetString("Word.Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Path {
            get {
                return ResourceManager.GetString("Word.Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   . に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Period {
            get {
                return ResourceManager.GetString("Word.Period", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Play {
            get {
                return ResourceManager.GetString("Word.Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playlist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Playlist {
            get {
                return ResourceManager.GetString("Word.Playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Properties に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Properties {
            get {
                return ResourceManager.GetString("Word.Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quick access に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_QuickAccess {
            get {
                return ResourceManager.GetString("Word.QuickAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RAM disk に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_RamDrive {
            get {
                return ResourceManager.GetString("Word.RamDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Read only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_ReadOnly {
            get {
                return ResourceManager.GetString("Word.ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Removable disk に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_RemovableDrive {
            get {
                return ResourceManager.GetString("Word.RemovableDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Remove {
            get {
                return ResourceManager.GetString("Word.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rename に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Rename {
            get {
                return ResourceManager.GetString("Word.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Reset {
            get {
                return ResourceManager.GetString("Word.Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Restore に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Restore {
            get {
                return ResourceManager.GetString("Word.Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Retry に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Retry {
            get {
                return ResourceManager.GetString("Word.Retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Returns に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Returns {
            get {
                return ResourceManager.GetString("Word.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Right {
            get {
                return ResourceManager.GetString("Word.Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search word に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_SearchWord {
            get {
                return ResourceManager.GetString("Word.SearchWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   sec に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Sec {
            get {
                return ResourceManager.GetString("Word.Sec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shortcut に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Shortcut {
            get {
                return ResourceManager.GetString("Word.Shortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stepless に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Stepless {
            get {
                return ResourceManager.GetString("Word.Stepless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Stop {
            get {
                return ResourceManager.GetString("Word.Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Banner style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_StyleBanner {
            get {
                return ResourceManager.GetString("Word.StyleBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Content style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_StyleContent {
            get {
                return ResourceManager.GetString("Word.StyleContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_StyleList {
            get {
                return ResourceManager.GetString("Word.StyleList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thumbnail style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_StyleThumbnail {
            get {
                return ResourceManager.GetString("Word.StyleThumbnail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Summary に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Summary {
            get {
                return ResourceManager.GetString("Word.Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Down に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_ToDown {
            get {
                return ResourceManager.GetString("Word.ToDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Topmost に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Topmost {
            get {
                return ResourceManager.GetString("Word.Topmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Touch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Touch {
            get {
                return ResourceManager.GetString("Word.Touch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_ToUp {
            get {
                return ResourceManager.GetString("Word.ToUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Type {
            get {
                return ResourceManager.GetString("Word.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unsharp mask に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_UnsharpMask {
            get {
                return ResourceManager.GetString("Word.UnsharpMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Up に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Up {
            get {
                return ResourceManager.GetString("Word.Up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Word_Yes {
            get {
                return ResourceManager.GetString("Word.Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use ZIP compressed file expansion with standard function に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_IsEnabled {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ZIP file editable に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_IsFileWriteAccessEnabled {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.IsFileWriteAccessEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It will be possible to delete files in the ZIP. The &quot;@SystemConfig.IsFileWriteAccessEnabled&quot; setting must be enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_IsFileWriteAccessEnabled_Remarks {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.IsFileWriteAccessEnabled.Remarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compressed file extension に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_SupportFileTypes {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.SupportFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only ZIP format is supported. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ZipArchiveConfig_SupportFileTypes_Remarks {
            get {
                return ResourceManager.GetString("ZipArchiveConfig.SupportFileTypes.Remarks", resourceCulture);
            }
        }
    }
}

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressBar.Back.ToolTip" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="AddressBar.Next.ToolTip" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="AddressBar.ReLoad.ToolTip" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="AddressBar.Unload.ToolTip" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="AddressBar.Up.ToolTip" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="ArchiveEntryCollectionMode.CurrentDirectory" xml:space="preserve">
    <value>Expand for each directory</value>
  </data>
  <data name="ArchiveEntryCollectionMode.IncludeSubArchives" xml:space="preserve">
    <value>Expand all</value>
  </data>
  <data name="ArchiveEntryCollectionMode.IncludeSubDirectories" xml:space="preserve">
    <value>Expand by compressed file unit</value>
  </data>
  <data name="ArchiveFormat.CompressedFile" xml:space="preserve">
    <value>Compressed file</value>
  </data>
  <data name="ArchiveFormat.Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="ArchiveFormat.Media" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="ArchiveFormat.Pagemark" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="ArchiveFormat.Pdf" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="ArchiveFormat.Playlist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="ArchiveFormat.Unknown" xml:space="preserve">
    <value>Unknown format</value>
  </data>
  <data name="ArchivePolicy.None" xml:space="preserve">
    <value>Do not execute</value>
  </data>
  <data name="ArchivePolicy.SendArchiveFile" xml:space="preserve">
    <value>Compressed file path</value>
  </data>
  <data name="ArchivePolicy.SendArchivePath" xml:space="preserve">
    <value>Compressed file + filename</value>
  </data>
  <data name="ArchivePolicy.SendExtractFile" xml:space="preserve">
    <value>Extract file path (temporary file)</value>
  </data>
  <data name="AutoHideConfig.AutoHideDelayTime" xml:space="preserve">
    <value>Time to hide auto-hide panel (sec)</value>
  </data>
  <data name="AutoHideConfig.AutoHideDelayVisibleTime" xml:space="preserve">
    <value>Time to display auto-hide panel (sec)</value>
  </data>
  <data name="AutoHideConfig.AutoHideFocusLockMode" xml:space="preserve">
    <value>Auto-hide panel focus mode</value>
  </data>
  <data name="AutoHideConfig.AutoHideFocusLockMode.Remarks" xml:space="preserve">
    <value>It is not hidden when it has focus.</value>
  </data>
  <data name="AutoHideConfig.AutoHideHitTestMargin" xml:space="preserve">
    <value>Area width of automatic panel display judgment</value>
  </data>
  <data name="AutoHideConfig.IsAutoHideKeyDownDelay" xml:space="preserve">
    <value>Auto-hide panel key input display continued</value>
  </data>
  <data name="AutoHideConfig.IsAutoHideKeyDownDelay.Remarks" xml:space="preserve">
    <value>Postpone the action to hide when key input.</value>
  </data>
  <data name="AutoHideFocusLockMode.FocusLock" xml:space="preserve">
    <value>Window and Panel</value>
  </data>
  <data name="AutoHideFocusLockMode.LogicalFocusLock" xml:space="preserve">
    <value>Panel</value>
  </data>
  <data name="AutoHideFocusLockMode.LogicalTextBoxFocusLock" xml:space="preserve">
    <value>TextBox</value>
  </data>
  <data name="AutoHideFocusLockMode.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="AutoHideFocusLockMode.TextBoxFocusLock" xml:space="preserve">
    <value>Window and TextBox</value>
  </data>
  <data name="AutoRotateType.Left" xml:space="preserve">
    <value>Auto left rotate</value>
  </data>
  <data name="AutoRotateType.None" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="AutoRotateType.Right" xml:space="preserve">
    <value>Auto right rotate</value>
  </data>
  <data name="BackgroundConfig.BackgroundType" xml:space="preserve">
    <value>Background type</value>
  </data>
  <data name="BackgroundConfig.CustomBackground" xml:space="preserve">
    <value>Custom background</value>
  </data>
  <data name="BackgroundConfig.CustomBackground.Remarks" xml:space="preserve">
    <value>This setting is applied when the background is set to "custom background".</value>
  </data>
  <data name="BackgroundConfig.IsPageBackgroundChecker" xml:space="preserve">
    <value>Checkered background transparent image</value>
  </data>
  <data name="BackgroundConfig.IsPageBackgroundChecker.Remarks" xml:space="preserve">
    <value>It will be a check pattern of "@BackgroundConfig.PageBackgroundColor".</value>
  </data>
  <data name="BackgroundConfig.PageBackgroundColor" xml:space="preserve">
    <value>Transparent image background color</value>
  </data>
  <data name="BackgroundType.Auto" xml:space="preserve">
    <value>Image colored background</value>
  </data>
  <data name="BackgroundType.Black" xml:space="preserve">
    <value>Black background</value>
  </data>
  <data name="BackgroundType.Check" xml:space="preserve">
    <value>White checkered background</value>
  </data>
  <data name="BackgroundType.CheckDark" xml:space="preserve">
    <value>Black checkered background</value>
  </data>
  <data name="BackgroundType.Custom" xml:space="preserve">
    <value>Custom Background</value>
  </data>
  <data name="BackgroundType.White" xml:space="preserve">
    <value>White background</value>
  </data>
  <data name="BitmapImageFormat.Jpeg" xml:space="preserve">
    <value>JPEG</value>
  </data>
  <data name="BitmapImageFormat.Png" xml:space="preserve">
    <value>PNG</value>
  </data>
  <data name="BloomEffectUnit.BaseIntensity" xml:space="preserve">
    <value>Base intensity</value>
  </data>
  <data name="BloomEffectUnit.BaseSaturation" xml:space="preserve">
    <value>Base saturation</value>
  </data>
  <data name="BloomEffectUnit.BloomIntensity" xml:space="preserve">
    <value>Bloom intensity</value>
  </data>
  <data name="BloomEffectUnit.BloomSaturation" xml:space="preserve">
    <value>Bloom saturation</value>
  </data>
  <data name="BloomEffectUnit.Threshold" xml:space="preserve">
    <value>Threshold</value>
  </data>
  <data name="BlurEffectUnit.Radius" xml:space="preserve">
    <value>Radius</value>
  </data>
  <data name="BookAccessor" xml:space="preserve">
    <value>Book accessor</value>
  </data>
  <data name="BookAccessor.Config" xml:space="preserve">
    <value>Book config</value>
  </data>
  <data name="BookAccessor.IsMedia" xml:space="preserve">
    <value>Whether the book is a video</value>
  </data>
  <data name="BookAccessor.IsNew" xml:space="preserve">
    <value>Whether the book is a newly opened book with no history</value>
  </data>
  <data name="BookAccessor.Pages" xml:space="preserve">
    <value>Pages that make up the book</value>
  </data>
  <data name="BookAccessor.Path" xml:space="preserve">
    <value>Book path. Null if no book is open</value>
  </data>
  <data name="BookAccessor.ViewPages" xml:space="preserve">
    <value>Displaying pages</value>
  </data>
  <data name="BookAddressInfo.Bookmark" xml:space="preserve">
    <value>This is bookmark address.</value>
  </data>
  <data name="BookAddressInfo.Invalid" xml:space="preserve">
    <value>This address is invalid.</value>
  </data>
  <data name="BookAddressInfo.Page" xml:space="preserve">
    <value>{0} page</value>
  </data>
  <data name="BookAddressInfo.Pagemark" xml:space="preserve">
    <value>This is pagemark address.</value>
  </data>
  <data name="BookConfig.BookPageSize" xml:space="preserve">
    <value>Book page image size</value>
  </data>
  <data name="BookConfig.BookPageSize.Remarks" xml:space="preserve">
    <value>The size of the image to display as the book page. Since thumbnails are displayed, large values ​​may be displayed at a lower resolution.</value>
  </data>
  <data name="BookConfig.ContentsSpace" xml:space="preserve">
    <value>Distance between two pages</value>
  </data>
  <data name="BookConfig.ContentsSpace.Remarks" xml:space="preserve">
    <value>Sets the gap between page and page. Negative values ​​mean overlapping. Because each page is scaled, it is rare that there will be no gap just at 0.</value>
  </data>
  <data name="BookConfig.Excludes" xml:space="preserve">
    <value>Excluded folders</value>
  </data>
  <data name="BookConfig.IsAutoRecursive" xml:space="preserve">
    <value>Automatically load subfolder when there is no page and only one subfolder exists</value>
  </data>
  <data name="BookConfig.IsConfirmRecursive" xml:space="preserve">
    <value>If there is no page, inquire whether to read the subfolder</value>
  </data>
  <data name="BookConfig.IsConfirmRecursive.Remarks" xml:space="preserve">
    <value>If there is no page that can be displayed when the book is opened, and a subfolder exists, a dialog is displayed asking whether to load the subfolder.</value>
  </data>
  <data name="BookConfig.IsInsertDummyPage" xml:space="preserve">
    <value>Insert a dummy page</value>
  </data>
  <data name="BookConfig.IsInsertDummyPage.Remarks" xml:space="preserve">
    <value>Insert a dummy page when there are not enough pages at the end of two-page mode.</value>
  </data>
  <data name="BookConfig.IsMultiplePageMove" xml:space="preserve">
    <value>Accept duplication of page movement commands</value>
  </data>
  <data name="BookConfig.IsMultiplePageMove.Remarks" xml:space="preserve">
    <value>Execute all requested page move commands. If it is set to OFF, duplicate page move commands are canceled.</value>
  </data>
  <data name="BookConfig.IsNotifyPageLoop" xml:space="preserve">
    <value>Notify page loop</value>
  </data>
  <data name="BookConfig.IsPrioritizePageMove" xml:space="preserve">
    <value>Page movement priority</value>
  </data>
  <data name="BookConfig.IsPrioritizePageMove.Remarks" xml:space="preserve">
    <value>Perform page movement without waiting for page display.</value>
  </data>
  <data name="BookConfig.IsSortFileFirst" xml:space="preserve">
    <value>Sort pages by file first</value>
  </data>
  <data name="BookConfig.IsSortFileFirst.Remarks" xml:space="preserve">
    <value>Arrange files before folders.</value>
  </data>
  <data name="BookConfig.PageEndAction" xml:space="preserve">
    <value>Behavior when trying to move past the end of the page</value>
  </data>
  <data name="BookConfig.ResetPageWhenRandomSort" xml:space="preserve">
    <value>Reset page when shuffle</value>
  </data>
  <data name="BookConfig.TerminalSound" xml:space="preserve">
    <value>Sound when not able to move</value>
  </data>
  <data name="BookConfig.WideRatio" xml:space="preserve">
    <value>Aspect ratio for determining horizontally long image (horizontal / vertical)</value>
  </data>
  <data name="BookConfig.WideRatio.Remarks" xml:space="preserve">
    <value>It is used in "Split landscape page".</value>
  </data>
  <data name="BookConfigAccessor" xml:space="preserve">
    <value>Book config accessor</value>
  </data>
  <data name="BookConfigAccessor.BookReadOrder" xml:space="preserve">
    <value>Left Open / Right Open</value>
  </data>
  <data name="BookConfigAccessor.IsRecursiveFolder" xml:space="preserve">
    <value>Load subfolder</value>
  </data>
  <data name="BookConfigAccessor.IsSupportedDividePage" xml:space="preserve">
    <value>Split landscape page</value>
  </data>
  <data name="BookConfigAccessor.IsSupportedSingleFirstPage" xml:space="preserve">
    <value>Show first page alone</value>
  </data>
  <data name="BookConfigAccessor.IsSupportedSingleLastPage" xml:space="preserve">
    <value>Show last page alone</value>
  </data>
  <data name="BookConfigAccessor.IsSupportedWidePage" xml:space="preserve">
    <value>Consider landscape pages as two pages</value>
  </data>
  <data name="BookConfigAccessor.SortMode" xml:space="preserve">
    <value>Sort order</value>
  </data>
  <data name="BookConfigAccessor.ViewPageSize" xml:space="preserve">
    <value>Number of pages to display</value>
  </data>
  <data name="Bookmark.Up.ToolTip" xml:space="preserve">
    <value>Up (Alt+Up)</value>
  </data>
  <data name="BookmarkConfig.BookmarkFilePath" xml:space="preserve">
    <value>Bookmark list file location</value>
  </data>
  <data name="BookmarkConfig.BookmarkFolderOrder" xml:space="preserve">
    <value>Default order of bookmarks</value>
  </data>
  <data name="BookmarkConfig.IsSaveBookmark" xml:space="preserve">
    <value>Save bookmark list</value>
  </data>
  <data name="BookmarkConfig.IsSyncBookshelfEnabled" xml:space="preserve">
    <value>Sync bookshelf when book is opened</value>
  </data>
  <data name="BookmarkItemAccessor" xml:space="preserve">
    <value>Bookmark item accessor</value>
  </data>
  <data name="BookmarkItemAccessor.Name" xml:space="preserve">
    <value>Item name</value>
  </data>
  <data name="BookmarkItemAccessor.Path" xml:space="preserve">
    <value>The path corresponding to the item</value>
  </data>
  <data name="BookmarkList.Add.ToolTip" xml:space="preserve">
    <value>Add bookmark</value>
  </data>
  <data name="BookmarkList.MoreMenu.SyncBookshelf" xml:space="preserve">
    <value>Sync bookshelf</value>
  </data>
  <data name="BookmarkPanelAccessor" xml:space="preserve">
    <value>Bookmark panel accessor</value>
  </data>
  <data name="BookmarkPanelAccessor.FolderOrder" xml:space="preserve">
    <value>List item order</value>
  </data>
  <data name="BookmarkPanelAccessor.Items" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="BookmarkPanelAccessor.Path" xml:space="preserve">
    <value>Current bookmark folder path</value>
  </data>
  <data name="BookmarkPanelAccessor.SelectedItems" xml:space="preserve">
    <value>Selected items</value>
  </data>
  <data name="BookmarkPanelAccessor.Style" xml:space="preserve">
    <value>List item style</value>
  </data>
  <data name="BookMementoFilter.BookReadOrder" xml:space="preserve">
    <value>Book Orientation</value>
  </data>
  <data name="BookMementoFilter.IsRecursiveFolder" xml:space="preserve">
    <value>Load subfolder</value>
  </data>
  <data name="BookMementoFilter.IsSupportedDividePage" xml:space="preserve">
    <value>Split horizontally long page</value>
  </data>
  <data name="BookMementoFilter.IsSupportedSingleFirstPage" xml:space="preserve">
    <value>The first page alone</value>
  </data>
  <data name="BookMementoFilter.IsSupportedSingleLastPage" xml:space="preserve">
    <value>The last page alone</value>
  </data>
  <data name="BookMementoFilter.IsSupportedWidePage" xml:space="preserve">
    <value>Landscape page is regarded as 2 pages</value>
  </data>
  <data name="BookMementoFilter.Page" xml:space="preserve">
    <value>Page position</value>
  </data>
  <data name="BookMementoFilter.PageMode" xml:space="preserve">
    <value>Page Size Mode</value>
  </data>
  <data name="BookMementoFilter.SortMode" xml:space="preserve">
    <value>Order of pages</value>
  </data>
  <data name="BookPageCollectMode.All" xml:space="preserve">
    <value>All files</value>
  </data>
  <data name="BookPageCollectMode.Image" xml:space="preserve">
    <value>Image files</value>
  </data>
  <data name="BookPageCollectMode.ImageAndBook" xml:space="preserve">
    <value>Image files and folders</value>
  </data>
  <data name="BookSettingConfig.BookReadOrder" xml:space="preserve">
    <value>Book Orientation</value>
  </data>
  <data name="BookSettingConfig.IsRecursiveFolder" xml:space="preserve">
    <value>Load subfolder</value>
  </data>
  <data name="BookSettingConfig.IsRecursiveFolder.Remarks" xml:space="preserve">
    <value>Because it searches all open folders and below, the processing becomes heavy depending on the location of the folder.</value>
  </data>
  <data name="BookSettingConfig.IsSupportedDividePage" xml:space="preserve">
    <value>Split horizontally long page</value>
  </data>
  <data name="BookSettingConfig.IsSupportedSingleFirstPage" xml:space="preserve">
    <value>The first page alone</value>
  </data>
  <data name="BookSettingConfig.IsSupportedSingleLastPage" xml:space="preserve">
    <value>The last page alone</value>
  </data>
  <data name="BookSettingConfig.IsSupportedWidePage" xml:space="preserve">
    <value>Landscape page is regarded as 2 pages</value>
  </data>
  <data name="BookSettingConfig.Page" xml:space="preserve">
    <value>Page position</value>
  </data>
  <data name="BookSettingConfig.PageMode" xml:space="preserve">
    <value>Page Size Mode</value>
  </data>
  <data name="BookSettingConfig.SortMode" xml:space="preserve">
    <value>Order of pages</value>
  </data>
  <data name="BookSettingPageSelectMode.Default" xml:space="preserve">
    <value>@BookSettingSelectMode.Default</value>
  </data>
  <data name="BookSettingPageSelectMode.RestoreOrDefault" xml:space="preserve">
    <value>@BookSettingSelectMode.RestoreOrDefault</value>
  </data>
  <data name="BookSettingPageSelectMode.RestoreOrDefaultReset" xml:space="preserve">
    <value>@BookSettingSelectMode.RestoreOrDefaultReset</value>
  </data>
  <data name="BookSettingPolicyConfig.BookReadOrder" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.BookReadOrder" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.IsRecursiveFolder" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.IsRecursiveFolder" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.IsSupportedDividePage" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.IsSupportedDividePage" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.IsSupportedSingleFirstPage" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.IsSupportedSingleFirstPage" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.IsSupportedSingleLastPage" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.IsSupportedSingleLastPage" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.IsSupportedWidePage" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.IsSupportedWidePage" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.Page" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.Page" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.PageMode" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.PageMode" when opening a book</value>
  </data>
  <data name="BookSettingPolicyConfig.SortMode" xml:space="preserve">
    <value>Setting policy of "@BookSettingConfig.SortMode" when opening a book</value>
  </data>
  <data name="BookSettingSelectMode.Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="BookSettingSelectMode.Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="BookSettingSelectMode.RestoreOrContinue" xml:space="preserve">
    <value>Restore, else continue</value>
  </data>
  <data name="BookSettingSelectMode.RestoreOrDefault" xml:space="preserve">
    <value>Restore, else default</value>
  </data>
  <data name="BookSettingSelectMode.RestoreOrDefaultReset" xml:space="preserve">
    <value>Restore, else default, reset last page</value>
  </data>
  <data name="Bookshelf.Back.ToolTip" xml:space="preserve">
    <value>Back (Alt+Left)</value>
  </data>
  <data name="Bookshelf.CopyToFolderFailed" xml:space="preserve">
    <value>Copy failed</value>
  </data>
  <data name="Bookshelf.Home.Menu.Set" xml:space="preserve">
    <value>Set this place home</value>
  </data>
  <data name="Bookshelf.Home.ToolTip" xml:space="preserve">
    <value>Go to Home (Alt+Home)</value>
  </data>
  <data name="Bookshelf.Message.MoveToFolderFailed" xml:space="preserve">
    <value>Move failed</value>
  </data>
  <data name="Bookshelf.MoreMenu.AddQuickAccess" xml:space="preserve">
    <value>Add this place to quick access</value>
  </data>
  <data name="Bookshelf.MoreMenu.ClearHistory" xml:space="preserve">
    <value>Delete all history of this place</value>
  </data>
  <data name="Bookshelf.MoreMenu.ExportPlaylist" xml:space="preserve">
    <value>Save playlist...</value>
  </data>
  <data name="Bookshelf.MoreMenu.SearchIncludeSubdirectories" xml:space="preserve">
    <value>Include subdirectories</value>
  </data>
  <data name="Bookshelf.MoreMenu.SearchIncremental" xml:space="preserve">
    <value>Incremental search</value>
  </data>
  <data name="Bookshelf.MoreMenu.SearchOptions" xml:space="preserve">
    <value>Search options</value>
  </data>
  <data name="Bookshelf.MoreMenu.Subfolder" xml:space="preserve">
    <value>Load subfolders at this location</value>
  </data>
  <data name="Bookshelf.Next.ToolTip" xml:space="preserve">
    <value>Next (Alt+Right)</value>
  </data>
  <data name="Bookshelf.SubFolder.ToolTip" xml:space="preserve">
    <value>Load subfolder</value>
  </data>
  <data name="Bookshelf.Sync.ToolTip" xml:space="preserve">
    <value>Move to current book place</value>
  </data>
  <data name="Bookshelf.Up.ToolTip" xml:space="preserve">
    <value>Up (Alt+Up)</value>
  </data>
  <data name="BookshelfConfig.DefaultFolderOrder" xml:space="preserve">
    <value>Standard default order</value>
  </data>
  <data name="BookshelfConfig.ExcludePattern" xml:space="preserve">
    <value>Filename pattern to exclude from display</value>
  </data>
  <data name="BookshelfConfig.ExcludePattern.Remarks" xml:space="preserve">
    <value>It is specified with .NET regular expression. Capital letters and lower case letters are not distinguished.</value>
  </data>
  <data name="BookshelfConfig.Home" xml:space="preserve">
    <value>Home location</value>
  </data>
  <data name="BookshelfConfig.IsCloseBookWhenMove" xml:space="preserve">
    <value>Close the book when changing the location</value>
  </data>
  <data name="BookshelfConfig.IsCruise" xml:space="preserve">
    <value>Enable Folder Cruise</value>
  </data>
  <data name="BookshelfConfig.IsCruise.Remarks" xml:space="preserve">
    <value>Move the folder including the parent and child of the folder. It does not apply when the bookshelf is a search result.</value>
  </data>
  <data name="BookshelfConfig.IsIncrementalSearchEnabled" xml:space="preserve">
    <value>Incremental search enabled</value>
  </data>
  <data name="BookshelfConfig.IsInsertItem" xml:space="preserve">
    <value>Insert additional file at sort position</value>
  </data>
  <data name="BookshelfConfig.IsInsertItem.Remarks" xml:space="preserve">
    <value>The bookshelf reflects information in real time. If this setting is ON, inserts the added file in the current sort order position. When set to OFF, it is added to the end of the list.</value>
  </data>
  <data name="BookshelfConfig.IsMultipleRarFilterEnabled" xml:space="preserve">
    <value>Filter RAR split files from display</value>
  </data>
  <data name="BookshelfConfig.IsMultipleRarFilterEnabled.Remarks" xml:space="preserve">
    <value>For an RAR split file called .part[number].rar, only the file with the smallest number is displayed in the list.</value>
  </data>
  <data name="BookshelfConfig.IsOpenNextBookWhenRemove" xml:space="preserve">
    <value>After deleting the viewing book, open the next book</value>
  </data>
  <data name="BookshelfConfig.IsOrderWithoutFileType" xml:space="preserve">
    <value>Sort without file type</value>
  </data>
  <data name="BookshelfConfig.IsSearchIncludeSubdirectories" xml:space="preserve">
    <value>Perform a search including subfolders</value>
  </data>
  <data name="BookshelfConfig.IsSyncFolderTree" xml:space="preserve">
    <value>Synchronize Folders tree with sync button</value>
  </data>
  <data name="BookshelfConfig.IsVisibleBookmarkMark" xml:space="preserve">
    <value>Display bookmark symbols</value>
  </data>
  <data name="BookshelfConfig.IsVisibleBookmarkMark.Remarks" xml:space="preserve">
    <value>★ mark is displayed in the bookmarked book.</value>
  </data>
  <data name="BookshelfConfig.IsVisibleHistoryMark" xml:space="preserve">
    <value>Display history symbol</value>
  </data>
  <data name="BookshelfConfig.IsVisibleHistoryMark.Remarks" xml:space="preserve">
    <value>A check mark is displayed in the book remaining in the history.</value>
  </data>
  <data name="BookshelfConfig.IsVisibleItemsCount" xml:space="preserve">
    <value>Show number of items</value>
  </data>
  <data name="BookshelfConfig.PlaylistFolderOrder" xml:space="preserve">
    <value>Default order of playlists</value>
  </data>
  <data name="BookshelfItem.Menu.Copy" xml:space="preserve">
    <value>_Copy</value>
  </data>
  <data name="BookshelfItem.Menu.CopyToFolder" xml:space="preserve">
    <value>Cop_y to folder</value>
  </data>
  <data name="BookshelfItem.Menu.Delete" xml:space="preserve">
    <value>_Delete</value>
  </data>
  <data name="BookshelfItem.Menu.DeleteBookmark" xml:space="preserve">
    <value>Remove bookmark</value>
  </data>
  <data name="BookshelfItem.Menu.DeleteHistory" xml:space="preserve">
    <value>Remove history</value>
  </data>
  <data name="BookshelfItem.Menu.DestinationFolderOption" xml:space="preserve">
    <value>_Add folders...</value>
  </data>
  <data name="BookshelfItem.Menu.Explorer" xml:space="preserve">
    <value>Open in e_xplorer</value>
  </data>
  <data name="BookshelfItem.Menu.ExternalAppOption" xml:space="preserve">
    <value>_Add External apps...</value>
  </data>
  <data name="BookshelfItem.Menu.MoveToFolder" xml:space="preserve">
    <value>Mov_e to folder</value>
  </data>
  <data name="BookshelfItem.Menu.Open" xml:space="preserve">
    <value>Move to _subfolder</value>
  </data>
  <data name="BookshelfItem.Menu.OpenBook" xml:space="preserve">
    <value>_Open</value>
  </data>
  <data name="BookshelfItem.Menu.OpenExternalApp" xml:space="preserve">
    <value>Open in external _app</value>
  </data>
  <data name="BookshelfItem.Menu.Rename" xml:space="preserve">
    <value>Rena_me</value>
  </data>
  <data name="BookshelfItem.Menu.Subfolder" xml:space="preserve">
    <value>Load subfolder</value>
  </data>
  <data name="BookshelfItemAccessor" xml:space="preserve">
    <value>Bookshelf item accessor</value>
  </data>
  <data name="BookshelfItemAccessor.Name" xml:space="preserve">
    <value>Item name</value>
  </data>
  <data name="BookshelfItemAccessor.Path" xml:space="preserve">
    <value>The path corresponding to the item</value>
  </data>
  <data name="BookshelfPanelAccessor" xml:space="preserve">
    <value>Bookshelf panel accessor</value>
  </data>
  <data name="BookshelfPanelAccessor.Example" xml:space="preserve">
    <value>// Example: Select items that starts with "A"
nv.Bookshelf.SelectedItems = nv.Bookshelf.Items.filter(e =&gt; e.Name.startsWith('A'))</value>
  </data>
  <data name="BookshelfPanelAccessor.FolderOrder" xml:space="preserve">
    <value>List item order</value>
  </data>
  <data name="BookshelfPanelAccessor.Items" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="BookshelfPanelAccessor.Path" xml:space="preserve">
    <value>Current bookshelf path</value>
  </data>
  <data name="BookshelfPanelAccessor.SearchWord" xml:space="preserve">
    <value>Search box text</value>
  </data>
  <data name="BookshelfPanelAccessor.SelectedItems" xml:space="preserve">
    <value>Selected items</value>
  </data>
  <data name="BookshelfPanelAccessor.Style" xml:space="preserve">
    <value>List item style</value>
  </data>
  <data name="BrushSource.Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="BrushSource.ImageFileName" xml:space="preserve">
    <value>Image file</value>
  </data>
  <data name="BrushSource.Type" xml:space="preserve">
    <value>Brush type</value>
  </data>
  <data name="BrushType.ImageFill" xml:space="preserve">
    <value>Enlarge and display the image</value>
  </data>
  <data name="BrushType.ImageTile" xml:space="preserve">
    <value>Image tile</value>
  </data>
  <data name="BrushType.ImageUniform" xml:space="preserve">
    <value>Fit image to window size</value>
  </data>
  <data name="BrushType.ImageUniformToFill" xml:space="preserve">
    <value>Extend the image to the full window</value>
  </data>
  <data name="BrushType.SolidColor" xml:space="preserve">
    <value>Solid color</value>
  </data>
  <data name="CancelFullScreenCommand" xml:space="preserve">
    <value>Full screen OFF</value>
  </data>
  <data name="CancelFullScreenCommand.Remarks" xml:space="preserve">
    <value>Turn off fullscreen.</value>
  </data>
  <data name="CancelScriptCommand" xml:space="preserve">
    <value>Cancel script</value>
  </data>
  <data name="CancelScriptCommand.Remarks" xml:space="preserve">
    <value>Stops a running script that has a "sleep" instruction.</value>
  </data>
  <data name="ClearHistoryCommand" xml:space="preserve">
    <value>Clear history</value>
  </data>
  <data name="ClearHistoryCommand.Remarks" xml:space="preserve">
    <value>Delete all history.</value>
  </data>
  <data name="ClearHistoryInPlaceCommand" xml:space="preserve">
    <value>Delete history in place</value>
  </data>
  <data name="ClearHistoryInPlaceCommand.Remarks" xml:space="preserve">
    <value>Delete all history in the current location of the bookshelf.</value>
  </data>
  <data name="CloseApplicationCommand" xml:space="preserve">
    <value>Quit application</value>
  </data>
  <data name="CloseApplicationCommand.Menu" xml:space="preserve">
    <value>_Quit</value>
  </data>
  <data name="CloseApplicationCommand.Remarks" xml:space="preserve">
    <value>Quit this application.</value>
  </data>
  <data name="ColorSelectEffectUnit.Curve" xml:space="preserve">
    <value>Curve</value>
  </data>
  <data name="ColorSelectEffectUnit.Hue" xml:space="preserve">
    <value>Hue</value>
  </data>
  <data name="ColorSelectEffectUnit.Range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="ColorToneEffectUnit.DarkColor" xml:space="preserve">
    <value>Dark color</value>
  </data>
  <data name="ColorToneEffectUnit.Desaturation" xml:space="preserve">
    <value>Desaturation</value>
  </data>
  <data name="ColorToneEffectUnit.LightColor" xml:space="preserve">
    <value>Light color</value>
  </data>
  <data name="ColorToneEffectUnit.ToneAmount" xml:space="preserve">
    <value>Tone amount</value>
  </data>
  <data name="CommandAccessor" xml:space="preserve">
    <value>Command accessor</value>
  </data>
  <data name="CommandAccessor.Execute" xml:space="preserve">
    <value>Execute the command.</value>
  </data>
  <data name="CommandAccessor.Execute.args" xml:space="preserve">
    <value>Command argument. The contents vary depending on the command. It is a variable length argument. (Optional)</value>
  </data>
  <data name="CommandAccessor.Execute.Example" xml:space="preserve">
    <value>// open C:\Foo\Bar.zip
nv.Command.LoadAs.Execute("C:\\Foo\\Bar.zip")</value>
  </data>
  <data name="CommandAccessor.Execute.Remarks" xml:space="preserve">
    <value>Some commands allow you to specify arguments.These can be used for the purpose of omitting the user's selection by specifying the argument in the command that normally displays the dialog.</value>
  </data>
  <data name="CommandAccessor.Execute.Returns" xml:space="preserve">
    <value>Success or failure of command issuance. Commands may not be issued during loading. The success or failure of the command itself is not determined.</value>
  </data>
  <data name="CommandAccessor.IsShowMessage" xml:space="preserve">
    <value>Display a message when executing a command</value>
  </data>
  <data name="CommandAccessor.MouseGesture" xml:space="preserve">
    <value>Mouse gestures</value>
  </data>
  <data name="CommandAccessor.MouseGesture.Example" xml:space="preserve">
    <value>// Set "↑←↓" to the mouse gesture of ViewRotateLeft command
nv.Command.ViewRotateLeft.MouseGesture = "ULD"</value>
  </data>
  <data name="CommandAccessor.Parameter" xml:space="preserve">
    <value>You can get and set command parameters. The settings are permanent. The properties differ for each command. For details, see the command list below.</value>
  </data>
  <data name="CommandAccessor.Parameter.Example" xml:space="preserve">
    <value>// Change the rotation amount of "ViewRotateLeft" command to 45 degrees
nv.Command.ViewRotateLeft.Parameter.Angle = 45</value>
  </data>
  <data name="CommandAccessor.Patch" xml:space="preserve">
    <value>Temporarily change the command parameter.</value>
  </data>
  <data name="CommandAccessor.Patch.Example" xml:space="preserve">
    <value>// Rotate counterclockwise by specifying 5 degrees
nv.Command.ViewRotateLeft.Patch({"Angle": 5}).Execute()</value>
  </data>
  <data name="CommandAccessor.Patch.patch" xml:space="preserve">
    <value>Specify the command parameter to be overwritten temporarily in JSON format.</value>
  </data>
  <data name="CommandAccessor.Patch.Returns" xml:space="preserve">
    <value>Returns its own command accessors as is.</value>
  </data>
  <data name="CommandAccessor.ShortCutKey" xml:space="preserve">
    <value>Shortcuts</value>
  </data>
  <data name="CommandAccessor.ShortCutKey.Example" xml:space="preserve">
    <value>// Set "Ctrl+A" as shortcut for ViewRotateLeft command
nv.Command.ViewRotateLeft.ShourtCutKey = "Ctrl+A"</value>
  </data>
  <data name="CommandAccessor.TouchGesture" xml:space="preserve">
    <value>Touch operation</value>
  </data>
  <data name="CommandAccessor.TouchGesture.Example" xml:space="preserve">
    <value>// Set "TouchCenter" for touch operation of ViewRotateLeft command
nv.Command.ViewRotateLeft.TouchGesture = "TouchCenter"</value>
  </data>
  <data name="CommandConfig.IsAccessKeyEnabled" xml:space="preserve">
    <value>Allow access key</value>
  </data>
  <data name="CommandConfig.IsAccessKeyEnabled.Remarks" xml:space="preserve">
    <value>If it is set to OFF, system operation by Alt key will be invalid and malfunction will be eliminated when used with command shortcut. However Alt+F4 is always active.</value>
  </data>
  <data name="CommandConfig.IsReversePageMove" xml:space="preserve">
    <value>Swap movement direction of page movement command according to slider direction</value>
  </data>
  <data name="CommandConfig.IsReversePageMove.Remarks" xml:space="preserve">
    <value>When the slider is from left to right, reverse the page moving direction. The setting of the command to work is set by "@ReversibleCommandParameter.IsReverse" of the command parameter.</value>
  </data>
  <data name="CommandConfig.IsReversePageMoveWheel" xml:space="preserve">
    <value>Replace when operating wheel</value>
  </data>
  <data name="CommandConfig.IsReversePageMoveWheel.Remarks" xml:space="preserve">
    <value>You can select correspondence only for wheel operation.</value>
  </data>
  <data name="CommandGroup.Bookmark" xml:space="preserve">
    <value>Bookmark</value>
  </data>
  <data name="CommandGroup.BookMove" xml:space="preserve">
    <value>Book move</value>
  </data>
  <data name="CommandGroup.BookOrder" xml:space="preserve">
    <value>Book order</value>
  </data>
  <data name="CommandGroup.Effect" xml:space="preserve">
    <value>Effect</value>
  </data>
  <data name="CommandGroup.File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="CommandGroup.FilmStrip" xml:space="preserve">
    <value>Filmstrip</value>
  </data>
  <data name="CommandGroup.ImageScale" xml:space="preserve">
    <value>Stretch</value>
  </data>
  <data name="CommandGroup.Move" xml:space="preserve">
    <value>Page move</value>
  </data>
  <data name="CommandGroup.None" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="CommandGroup.Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="CommandGroup.Pagemark" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="CommandGroup.PageOrder" xml:space="preserve">
    <value>Page order</value>
  </data>
  <data name="CommandGroup.PageSetting" xml:space="preserve">
    <value>Page setting</value>
  </data>
  <data name="CommandGroup.Panel" xml:space="preserve">
    <value>Panel</value>
  </data>
  <data name="CommandGroup.Script" xml:space="preserve">
    <value>Scripts</value>
  </data>
  <data name="CommandGroup.Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="CommandGroup.ViewManipulation" xml:space="preserve">
    <value>View operation</value>
  </data>
  <data name="CommandGroup.Window" xml:space="preserve">
    <value>Window</value>
  </data>
  <data name="CommandHost" xml:space="preserve">
    <value>Provides app-specific features.</value>
  </data>
  <data name="CommandHost.Book" xml:space="preserve">
    <value>Current book accessor</value>
  </data>
  <data name="CommandHost.Bookmark" xml:space="preserve">
    <value>Bookmark panel accessor</value>
  </data>
  <data name="CommandHost.Bookshelf" xml:space="preserve">
    <value>Bookshelf panel accessor</value>
  </data>
  <data name="CommandHost.Command" xml:space="preserve">
    <value>An associative array of command accessors. The commands are the same as those displayed under Options &gt; Command Settings. For details, refer to &lt;a href="#CommandList"/&gt;Command list&lt;/a&gt;.</value>
  </data>
  <data name="CommandHost.Command.Example" xml:space="preserve">
    <value>// Execute "NextPage" command
nv.Command["NextPage"].Execute()
// As well
nv.Command.NextPage.Execute()</value>
  </data>
  <data name="CommandHost.Config" xml:space="preserve">
    <value>An associative array of application settings. Refers to and changes the set value. For the types of set values, refer to &lt;a href="#ConfigList"&gt;Config list&lt;/a&gt;.</value>
  </data>
  <data name="CommandHost.Config.Example" xml:space="preserve">
    <value>// Change the theme color to dark
nv.Config.Theme.PanelColor = "Dark"
nv.Config.Theme.MenuColor = "Dark"</value>
  </data>
  <data name="CommandHost.Effect" xml:space="preserve">
    <value>Effect panel accessor</value>
  </data>
  <data name="CommandHost.History" xml:space="preserve">
    <value>History panel accessor</value>
  </data>
  <data name="CommandHost.Information" xml:space="preserve">
    <value>Information panel accessor</value>
  </data>
  <data name="CommandHost.Navigator" xml:space="preserve">
    <value>Navigator panel accessor</value>
  </data>
  <data name="CommandHost.PageList" xml:space="preserve">
    <value>PageList panel accessor</value>
  </data>
  <data name="CommandHost.Pagemark" xml:space="preserve">
    <value>Pagemark panel accessor</value>
  </data>
  <data name="CommandHost.ShowDialog" xml:space="preserve">
    <value>Display the dialog.</value>
  </data>
  <data name="CommandHost.ShowDialog.commands" xml:space="preserve">
    <value>0: OK / 1: OKCancel / 2: YesNo
Button types (optional)</value>
  </data>
  <data name="CommandHost.ShowDialog.Example" xml:space="preserve">
    <value>isYes = nv.ShowDialog("Is this a pen?", "I think it's a pen, really?", 2)
if (isYes) {
    nv.ShowDialog("Good.")
}</value>
  </data>
  <data name="CommandHost.ShowDialog.message" xml:space="preserve">
    <value>Message (optional)</value>
  </data>
  <data name="CommandHost.ShowDialog.Returns" xml:space="preserve">
    <value>Returns true if positive selection ("OK" or "Yes"), false otherwise.</value>
  </data>
  <data name="CommandHost.ShowDialog.title" xml:space="preserve">
    <value>Main text</value>
  </data>
  <data name="CommandHost.ShowInputDialog" xml:space="preserve">
    <value>Display the input dialog.</value>
  </data>
  <data name="CommandHost.ShowInputDialog.Returns" xml:space="preserve">
    <value>Input text. Null when canceled</value>
  </data>
  <data name="CommandHost.ShowInputDialog.text" xml:space="preserve">
    <value>Default text (optional)</value>
  </data>
  <data name="CommandHost.ShowInputDialog.title" xml:space="preserve">
    <value>Main text</value>
  </data>
  <data name="CommandHost.ShowMessage" xml:space="preserve">
    <value>Display a message on the screen.</value>
  </data>
  <data name="CommandHost.ShowMessage.message" xml:space="preserve">
    <value>Output message</value>
  </data>
  <data name="CommandHost.ShowToast" xml:space="preserve">
    <value>Display the message as a toast.</value>
  </data>
  <data name="CommandHost.ShowToast.message" xml:space="preserve">
    <value>Output message</value>
  </data>
  <data name="CommandHost.Values" xml:space="preserve">
    <value>An associative array for storing values. The value saved in this object will be retained during app execution.</value>
  </data>
  <data name="CommandHost.Values.Example" xml:space="preserve">
    <value>// Store value
nv.Values["Test"] = "Hello!"
// As well
nv.Values.Test = "Hello!"   </value>
  </data>
  <data name="CommandList.Header.Command" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="CommandList.Header.Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="CommandList.Header.Display" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="CommandList.Header.Display.ToolTip" xml:space="preserve">
    <value>Message display at command execution</value>
  </data>
  <data name="CommandList.Header.Gesture" xml:space="preserve">
    <value>Gesture</value>
  </data>
  <data name="CommandList.Header.Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="CommandList.Header.Shortcut" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="CommandList.Header.Touch" xml:space="preserve">
    <value>Touch</value>
  </data>
  <data name="CommandList.ResetButton" xml:space="preserve">
    <value>Reset...</value>
  </data>
  <data name="CommandListItem.Message.ShareParameter" xml:space="preserve">
    <value>Parameter sharing with "{0}"</value>
  </data>
  <data name="CommandParameterControl.Empty" xml:space="preserve">
    <value>There are no parameters</value>
  </data>
  <data name="CommandResetWindow.Message" xml:space="preserve">
    <value>Initialize all command settings. Is it OK?</value>
  </data>
  <data name="CommandResetWindow.ResetType.Title" xml:space="preserve">
    <value>Shortcut initial setting</value>
  </data>
  <data name="CommandResetWindow.Title" xml:space="preserve">
    <value>Reset command</value>
  </data>
  <data name="ControlConfig.IsSelected" xml:space="preserve">
    <value>Panel selected</value>
  </data>
  <data name="ControlConfig.IsVisible" xml:space="preserve">
    <value>Panel visibility</value>
  </data>
  <data name="CopyFileCommand" xml:space="preserve">
    <value>Copy file</value>
  </data>
  <data name="CopyFileCommand.Menu" xml:space="preserve">
    <value>_Copy</value>
  </data>
  <data name="CopyFileCommand.Remarks" xml:space="preserve">
    <value>Copy the file to the clipboard.</value>
  </data>
  <data name="CopyFileCommandParameter.ArchivePolicy" xml:space="preserve">
    <value>For compressed files</value>
  </data>
  <data name="CopyFileCommandParameter.MultiPagePolicy" xml:space="preserve">
    <value>For 2 pages</value>
  </data>
  <data name="CopyImageCommand" xml:space="preserve">
    <value>Copy image</value>
  </data>
  <data name="CopyImageCommand.Menu" xml:space="preserve">
    <value>Copy image</value>
  </data>
  <data name="CopyImageCommand.Remarks" xml:space="preserve">
    <value>Copy the image to the clipboard. For 2 page display, copy only the main page.</value>
  </data>
  <data name="CustomBackgroundControl.Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="CustomBackgroundControl.Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="CustomBackgroundControl.ImageSelect" xml:space="preserve">
    <value>Select image</value>
  </data>
  <data name="CustomBackgroundControl.ImageSelect.Remarks" xml:space="preserve">
    <value>Please select an image file</value>
  </data>
  <data name="DeleteBookCommand" xml:space="preserve">
    <value>Delete book</value>
  </data>
  <data name="DeleteBookCommand.Menu" xml:space="preserve">
    <value>_Delete book</value>
  </data>
  <data name="DeleteBookCommand.Remarks" xml:space="preserve">
    <value>Delete the currently viewed folder or compressed file.</value>
  </data>
  <data name="DeleteFileCommand" xml:space="preserve">
    <value>Delete file</value>
  </data>
  <data name="DeleteFileCommand.Menu" xml:space="preserve">
    <value>_Delete</value>
  </data>
  <data name="DeleteFileCommand.Remarks" xml:space="preserve">
    <value>Delete the file. It can not be deleted for compressed files.</value>
  </data>
  <data name="DestinationFolderEditDialogTitle" xml:space="preserve">
    <value>Folder parameters</value>
  </data>
  <data name="DestinationFolderPathTips" xml:space="preserve">
    <value>folder path</value>
  </data>
  <data name="DestinationFoldersDialogTitle" xml:space="preserve">
    <value>Destination folders</value>
  </data>
  <data name="DialogAddParameterTile" xml:space="preserve">
    <value>Add item</value>
  </data>
  <data name="DialogBookmarkError" xml:space="preserve">
    <value>Temporary folders can not be bookmarked</value>
  </data>
  <data name="DialogBootErrorTitle" xml:space="preserve">
    <value>NeeView Startup error</value>
  </data>
  <data name="DialogBootOptionTitle" xml:space="preserve">
    <value>NeeView Startup options</value>
  </data>
  <data name="DialogCacheDeletedFailedTitle" xml:space="preserve">
    <value>Deletion of thumbnail cache failed.</value>
  </data>
  <data name="DialogCacheDeletedTitle" xml:space="preserve">
    <value>Thumbnail cache deleted</value>
  </data>
  <data name="DialogConfirmRecursive" xml:space="preserve">
    <value>There is no file that can be read in "{0}". Do you also load subfolders or compressed files?</value>
  </data>
  <data name="DialogConfirmRecursiveTitle" xml:space="preserve">
    <value>Do you also read subfolders?</value>
  </data>
  <data name="DialogCopyErrorTitle" xml:space="preserve">
    <value>Copy failed</value>
  </data>
  <data name="DialogCopyImageErrorTitle" xml:space="preserve">
    <value>Copy failed</value>
  </data>
  <data name="DialogDeleteApplicationData" xml:space="preserve">
    <value>Delete user data. Are you sure?

The following data will be deleted
- Setting file
- History file
- Bookmark file
- Pagemark file
- Cache file</value>
  </data>
  <data name="DialogDeleteApplicationDataComplete" xml:space="preserve">
    <value>User data deleted. Quit NeeView.</value>
  </data>
  <data name="DialogDeleteApplicationDataCompleteTitle" xml:space="preserve">
    <value>It has been deleted.</value>
  </data>
  <data name="DialogDeleteApplicationDataErrorTitle" xml:space="preserve">
    <value>It can not be deleted.</value>
  </data>
  <data name="DialogDeleteApplicationDataTitle" xml:space="preserve">
    <value>Delete user data.</value>
  </data>
  <data name="DialogDragActionLockedTitle" xml:space="preserve">
    <value>This operation can not be changed</value>
  </data>
  <data name="DialogDragActionReset" xml:space="preserve">
    <value>Initialize all drag operations. Is it OK?</value>
  </data>
  <data name="DialogDragActionResetTitle" xml:space="preserve">
    <value>Initialize the drag operation</value>
  </data>
  <data name="DialogExportErrorTitle" xml:space="preserve">
    <value>Export failed</value>
  </data>
  <data name="DialogExportImageSuccess" xml:space="preserve">
    <value>{0} saved.</value>
  </data>
  <data name="DialogExportPlaylistFailedTitle" xml:space="preserve">
    <value>Failed to save playlist</value>
  </data>
  <data name="DialogExportTitle" xml:space="preserve">
    <value>Export all settings</value>
  </data>
  <data name="DialogFileDelete" xml:space="preserve">
    <value>Do you want to delete this {0} ?</value>
  </data>
  <data name="DialogFileDeleteBookTitle" xml:space="preserve">
    <value>Delete book</value>
  </data>
  <data name="DialogFileDeleteError" xml:space="preserve">
    <value>Delete failed. Would you like to try again?</value>
  </data>
  <data name="DialogFileDeleteErrorTitle" xml:space="preserve">
    <value>Delete failed. Would you like to retry?</value>
  </data>
  <data name="DialogFileDeleteFailed" xml:space="preserve">
    <value>Delete failed.</value>
  </data>
  <data name="DialogFileDeleteMulti" xml:space="preserve">
    <value>Do you want to delete these {0} items?</value>
  </data>
  <data name="DialogFileDeleteMultiError" xml:space="preserve">
    <value>Some files could not be deleted. Would you like to try again?</value>
  </data>
  <data name="DialogFileDeletePageTitle" xml:space="preserve">
    <value>Delete page</value>
  </data>
  <data name="DialogFileDeleteTitle" xml:space="preserve">
    <value>Delete {0}</value>
  </data>
  <data name="DialogFileRenameConfrict" xml:space="preserve">
    <value>{0} already exists.
Would you like to rename it to {1}? </value>
  </data>
  <data name="DialogFileRenameConfrictTitle" xml:space="preserve">
    <value>A file with the same name exists</value>
  </data>
  <data name="DialogFileRenameErrorTitle" xml:space="preserve">
    <value>Can not rename</value>
  </data>
  <data name="DialogFileRenameExtension" xml:space="preserve">
    <value>Changing the extension may make it impossible to use it.
Is it OK? </value>
  </data>
  <data name="DialogFileRenameExtensionTitle" xml:space="preserve">
    <value>Change the extension</value>
  </data>
  <data name="DialogFileRenameFailed" xml:space="preserve">
    <value>Failed to change the name. Would you like to try again?</value>
  </data>
  <data name="DialogFileRenameFailedTitle" xml:space="preserve">
    <value>Rename failed</value>
  </data>
  <data name="DialogFileRenameInvalid" xml:space="preserve">
    <value>The file name contains characters that can not be used.</value>
  </data>
  <data name="DialogFileRenameWrong" xml:space="preserve">
    <value>The specified file name is invalid.</value>
  </data>
  <data name="DialogFileRenameWrongDevice" xml:space="preserve">
    <value>The specified device name is invalid.</value>
  </data>
  <data name="DialogHistoryDeleteAll" xml:space="preserve">
    <value>Delete all history. Is it OK?</value>
  </data>
  <data name="DialogHistoryDeleteAllTitle" xml:space="preserve">
    <value>Delete history</value>
  </data>
  <data name="DialogHistoryDeletedTitle" xml:space="preserve">
    <value>Deleted history</value>
  </data>
  <data name="DialogHyperLinkFailedTitle" xml:space="preserve">
    <value>Could not get link.</value>
  </data>
  <data name="DialogImageExportError" xml:space="preserve">
    <value>This image can not be output.</value>
  </data>
  <data name="DialogImageExportErrorTitle" xml:space="preserve">
    <value>File save failed</value>
  </data>
  <data name="DialogImportErrorTitle" xml:space="preserve">
    <value>Import failed</value>
  </data>
  <data name="DialogImportSelectTitle" xml:space="preserve">
    <value>Please select the item to be imported</value>
  </data>
  <data name="DialogImportTitle" xml:space="preserve">
    <value>Import all settings</value>
  </data>
  <data name="DialogMergeFolder" xml:space="preserve">
    <value>Consolidate folders into {0}.</value>
  </data>
  <data name="DialogMergeFolderTitle" xml:space="preserve">
    <value>Do you want to merge folders?</value>
  </data>
  <data name="DialogOpenApplicationErrorTitle" xml:space="preserve">
    <value>External app execution failed</value>
  </data>
  <data name="DialogOpenScriptsFolderErrorTitle" xml:space="preserve">
    <value>Cannot open scripts folder</value>
  </data>
  <data name="DialogOpenSettingFolderError" xml:space="preserve">
    <value>The location of the setting file can not be opened with the store application</value>
  </data>
  <data name="DialogOpenSettingFolderErrorTitle" xml:space="preserve">
    <value>This command can not be used</value>
  </data>
  <data name="DialogPageEnd" xml:space="preserve">
    <value>Please select an action.</value>
  </data>
  <data name="DialogPageEndTitle" xml:space="preserve">
    <value>End of page</value>
  </data>
  <data name="DialogPagemarkError" xml:space="preserve">
    <value>Temporary folders can not be pagemarked</value>
  </data>
  <data name="DialogPagemarkFolderDelete" xml:space="preserve">
    <value>Removed {5} pagemarks.</value>
  </data>
  <data name="DialogPageViewRecordWriteError" xml:space="preserve">
    <value>Could not write Page view record</value>
  </data>
  <data name="DialogQuickAccessTempError" xml:space="preserve">
    <value>Temporary folders can not be added to quick access.</value>
  </data>
  <data name="DialogSusieConnectError" xml:space="preserve">
    <value>Connection to Susie failed.</value>
  </data>
  <data name="DragActionTable.Elements" xml:space="preserve">
    <value>Drag action settings</value>
  </data>
  <data name="DragActionType.Angle" xml:space="preserve">
    <value>Rotation</value>
  </data>
  <data name="DragActionType.AngleSlider" xml:space="preserve">
    <value>Rotation (horizontal slide)</value>
  </data>
  <data name="DragActionType.FlipHorizontal" xml:space="preserve">
    <value>Flip horizontal</value>
  </data>
  <data name="DragActionType.FlipVertical" xml:space="preserve">
    <value>Flip vertical</value>
  </data>
  <data name="DragActionType.Gesture" xml:space="preserve">
    <value>Gesture</value>
  </data>
  <data name="DragActionType.MarqueeZoom" xml:space="preserve">
    <value>Select area to enlarge</value>
  </data>
  <data name="DragActionType.Move" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="DragActionType.MoveScale" xml:space="preserve">
    <value>Move (scale dependent)</value>
  </data>
  <data name="DragActionType.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DragActionType.Scale" xml:space="preserve">
    <value>Scaling</value>
  </data>
  <data name="DragActionType.ScaleSlider" xml:space="preserve">
    <value>Scaling (horizontal slide)</value>
  </data>
  <data name="DragActionType.ScaleSliderCentered" xml:space="preserve">
    <value>Scaling (horizontal slide, centered)</value>
  </data>
  <data name="DragActionType.WindowMove" xml:space="preserve">
    <value>Move window</value>
  </data>
  <data name="DragControlCenter.Cursor" xml:space="preserve">
    <value>Cursor position</value>
  </data>
  <data name="DragControlCenter.Target" xml:space="preserve">
    <value>Image center</value>
  </data>
  <data name="DragControlCenter.View" xml:space="preserve">
    <value>View center</value>
  </data>
  <data name="EditCommandWindow.Remarks" xml:space="preserve">
    <value>Command description</value>
  </data>
  <data name="EditCommandWindow.Tab.General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="EditCommandWindow.Tab.Gesture" xml:space="preserve">
    <value>Gesture</value>
  </data>
  <data name="EditCommandWindow.Tab.Parameter" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="EditCommandWindow.Tab.Shortcut" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="EditCommandWindow.Tab.Touch" xml:space="preserve">
    <value>Touch</value>
  </data>
  <data name="EditCommandWindow.Title" xml:space="preserve">
    <value>Command setting</value>
  </data>
  <data name="EditCommandWindow.Visible" xml:space="preserve">
    <value>Display a message when executing a command</value>
  </data>
  <data name="EffectBaseScale" xml:space="preserve">
    <value>Base scale</value>
  </data>
  <data name="EffectCustomSize" xml:space="preserve">
    <value>Custom Size</value>
  </data>
  <data name="EffectEffect" xml:space="preserve">
    <value>Effect</value>
  </data>
  <data name="EffectEffectType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="EffectGrid" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="EffectKeepDot" xml:space="preserve">
    <value>Keep dot</value>
  </data>
  <data name="EffectName" xml:space="preserve">
    <value>Effect</value>
  </data>
  <data name="EffectPanelAccessor" xml:space="preserve">
    <value>Effect panel accessor</value>
  </data>
  <data name="EffectResizeFilter" xml:space="preserve">
    <value>Resize filter</value>
  </data>
  <data name="EffectResizeInterpolation" xml:space="preserve">
    <value>Interpolation</value>
  </data>
  <data name="EffectResizeReset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="EffectResizeUnsharp" xml:space="preserve">
    <value>Unsharp mask</value>
  </data>
  <data name="EffectTrim" xml:space="preserve">
    <value>Trim</value>
  </data>
  <data name="EffectType.Bloom" xml:space="preserve">
    <value>Bloom</value>
  </data>
  <data name="EffectType.Blur" xml:space="preserve">
    <value>Blur</value>
  </data>
  <data name="EffectType.ColorSelect" xml:space="preserve">
    <value>Color select</value>
  </data>
  <data name="EffectType.ColorTone" xml:space="preserve">
    <value>Color tone</value>
  </data>
  <data name="EffectType.Embossed" xml:space="preserve">
    <value>Embossed</value>
  </data>
  <data name="EffectType.Hsv" xml:space="preserve">
    <value>HSV</value>
  </data>
  <data name="EffectType.Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="EffectType.Magnify" xml:space="preserve">
    <value>Magnify</value>
  </data>
  <data name="EffectType.Monochrome" xml:space="preserve">
    <value>Monochrome</value>
  </data>
  <data name="EffectType.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="EffectType.Pixelate" xml:space="preserve">
    <value>Pixelate</value>
  </data>
  <data name="EffectType.Ripple" xml:space="preserve">
    <value>Ripple</value>
  </data>
  <data name="EffectType.Sharpen" xml:space="preserve">
    <value>Sharpen</value>
  </data>
  <data name="EffectType.Swirl" xml:space="preserve">
    <value>Swirl</value>
  </data>
  <data name="EmbossedEffectUnit.Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="EmbossedEffectUnit.Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="EmbossedEffectUnit.Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="ExceptionCannotDeleteData" xml:space="preserve">
    <value>It is not an AppData folder, so it will not be deleted.</value>
  </data>
  <data name="ExceptionCritical" xml:space="preserve">
    <value>An error occurred. Quit the application.</value>
  </data>
  <data name="ExceptionCriticalCopy" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
  <data name="ExceptionCriticalLogPath" xml:space="preserve">
    <value>Details of the error are saved in &lt;a href="{0}"&gt;{0}&lt;/a&gt;</value>
  </data>
  <data name="ExceptionCriticalMessage" xml:space="preserve">
    <value>Error details:</value>
  </data>
  <data name="ExceptionCriticalTitle" xml:space="preserve">
    <value>NeeView - Error</value>
  </data>
  <data name="ExceptionFileNotFound" xml:space="preserve">
    <value>File not found "{0}"</value>
  </data>
  <data name="ExceptionImageLoadFailed" xml:space="preserve">
    <value>Failed to load image.</value>
  </data>
  <data name="ExceptionInconsistency" xml:space="preserve">
    <value>Inconsistency of page data</value>
  </data>
  <data name="ExceptionLoadFailed" xml:space="preserve">
    <value>Failed to read {0}.
{1} </value>
  </data>
  <data name="ExceptionNotSupportArchiveFolder" xml:space="preserve">
    <value>Compressed file folders are not supported.</value>
  </data>
  <data name="ExceptionNotSupportedKey" xml:space="preserve">
    <value>The combination of {0} key and modifier key is not supported in {1}.</value>
  </data>
  <data name="ExceptionNotZip" xml:space="preserve">
    <value>{0} is not a ZIP file</value>
  </data>
  <data name="ExceptionSusieLoadFailed" xml:space="preserve">
    <value>Failed to load image at Susie.</value>
  </data>
  <data name="ExplorerContextMenu.IsEnabled" xml:space="preserve">
    <value>Register in the Explorer context menu.</value>
  </data>
  <data name="ExplorerContextMenu.IsEnabled.Remarks" xml:space="preserve">
    <value>Add "Open in NeeView" to the Explorer context menu. This feature uses the registry.</value>
  </data>
  <data name="ExportBackupCommand" xml:space="preserve">
    <value>Export settings</value>
  </data>
  <data name="ExportBackupCommand.Menu" xml:space="preserve">
    <value>Export settings...</value>
  </data>
  <data name="ExportBackupCommand.Remarks" xml:space="preserve">
    <value>Create backups of settings, history, bookmarks, page marks. The thumbnail cache is not backed up.</value>
  </data>
  <data name="ExportImageAsCommand" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="ExportImageAsCommand.Menu" xml:space="preserve">
    <value>_Save as...</value>
  </data>
  <data name="ExportImageAsCommand.Remarks" xml:space="preserve">
    <value>Save the image to a file.</value>
  </data>
  <data name="ExportImageAsCommandParameter.ExportFolder" xml:space="preserve">
    <value>Default output folder</value>
  </data>
  <data name="ExportImageAsCommandParameter.ExportFolder.Remarks" xml:space="preserve">
    <value>Output folder at startup. During startup, it follows the changed storage location.</value>
  </data>
  <data name="ExportImageAsCommandParameter.QualityLevel" xml:space="preserve">
    <value>JPEG quality</value>
  </data>
  <data name="ExportImageAsCommandParameter.QualityLevel.Remarks" xml:space="preserve">
    <value>It is used only when conversion is required.</value>
  </data>
  <data name="ExportImageCommand" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ExportImageCommand.Menu" xml:space="preserve">
    <value>_Save</value>
  </data>
  <data name="ExportImageCommand.Remarks" xml:space="preserve">
    <value>Save the image to a file. The storage folder is specified by a command parameter.</value>
  </data>
  <data name="ExportImageCommandParameter.ExportFolder" xml:space="preserve">
    <value>Output folder</value>
  </data>
  <data name="ExportImageCommandParameter.FileFormat" xml:space="preserve">
    <value>Output file format</value>
  </data>
  <data name="ExportImageCommandParameter.FileFormat.Remarks" xml:space="preserve">
    <value>Used when "@ExportImageCommandParameter.Mode" is "@ExportImageMode.View".</value>
  </data>
  <data name="ExportImageCommandParameter.FileNameMode" xml:space="preserve">
    <value>Output file name</value>
  </data>
  <data name="ExportImageCommandParameter.HasBackground" xml:space="preserve">
    <value>Include background</value>
  </data>
  <data name="ExportImageCommandParameter.Mode" xml:space="preserve">
    <value>Output image type</value>
  </data>
  <data name="ExportImageCommandParameter.QualityLevel" xml:space="preserve">
    <value>JPEG quality</value>
  </data>
  <data name="ExportImageCommandParameter.QualityLevel.Remarks" xml:space="preserve">
    <value>It is used only when conversion is required.</value>
  </data>
  <data name="ExportImageFileNameMode.BookPageNumber" xml:space="preserve">
    <value>Book name + page number</value>
  </data>
  <data name="ExportImageFileNameMode.Deault" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="ExportImageFileNameMode.Original" xml:space="preserve">
    <value>Original file name</value>
  </data>
  <data name="ExportImageFormat.Jpeg" xml:space="preserve">
    <value>JPEG</value>
  </data>
  <data name="ExportImageFormat.Png" xml:space="preserve">
    <value>PNG</value>
  </data>
  <data name="ExportImageMode.Original" xml:space="preserve">
    <value>Save as original file</value>
  </data>
  <data name="ExportImageMode.View" xml:space="preserve">
    <value>Save view</value>
  </data>
  <data name="ExportImageWindow.Folder" xml:space="preserve">
    <value>Default destination folder</value>
  </data>
  <data name="ExportImageWindow.InclideBackground" xml:space="preserve">
    <value>Include background</value>
  </data>
  <data name="ExportImageWindow.Mode" xml:space="preserve">
    <value>Output image type</value>
  </data>
  <data name="ExportImageWindow.SaveAs" xml:space="preserve">
    <value>Save as...</value>
  </data>
  <data name="ExportImageWindow.Title" xml:space="preserve">
    <value>Save image</value>
  </data>
  <data name="ExternalAppDialogTitle" xml:space="preserve">
    <value>External apps</value>
  </data>
  <data name="ExternalAppEditDialogTitle" xml:space="preserve">
    <value>External app parameters</value>
  </data>
  <data name="ExternalProgramType.Normal" xml:space="preserve">
    <value>External program</value>
  </data>
  <data name="ExternalProgramType.Protocol" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="FileInfoName" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="FileNameBox.Directory.Message" xml:space="preserve">
    <value>Please enter the folder path</value>
  </data>
  <data name="FileNameBox.File.Message" xml:space="preserve">
    <value>Please enter the path of the file</value>
  </data>
  <data name="FileNameBox.SelectDirectory" xml:space="preserve">
    <value>Select folder</value>
  </data>
  <data name="FileNameBox.SelectFile" xml:space="preserve">
    <value>Select file</value>
  </data>
  <data name="FilmStripConfig.IsEnabled" xml:space="preserve">
    <value>Show filmstrip</value>
  </data>
  <data name="FilmStripConfig.IsHideFilmStrip" xml:space="preserve">
    <value>Automatically hide filmstrip</value>
  </data>
  <data name="FilmStripConfig.IsManipulationBoundaryFeedbackEnabled" xml:space="preserve">
    <value>Touch scroll termination bound on filmstrip</value>
  </data>
  <data name="FilmStripConfig.IsSelectedCenter" xml:space="preserve">
    <value>Scroll so that the selected item appears in the center</value>
  </data>
  <data name="FilmStripConfig.IsVisibleNumber" xml:space="preserve">
    <value>Display page number</value>
  </data>
  <data name="FilmStripConfig.IsVisiblePlate" xml:space="preserve">
    <value>Display background</value>
  </data>
  <data name="FilmStripConfig.IsVisiblePlate.Remarks" xml:space="preserve">
    <value>Display the background of the filmstrip in the case of automatically hidden settings</value>
  </data>
  <data name="FilmStripConfig.ThumbnailSize" xml:space="preserve">
    <value>Page thumbnail size</value>
  </data>
  <data name="FirstPageCommand" xml:space="preserve">
    <value>First page</value>
  </data>
  <data name="FirstPageCommand.Remarks" xml:space="preserve">
    <value>Move to the first page.</value>
  </data>
  <data name="FocusBookmarkListCommand" xml:space="preserve">
    <value>Display bookmark list</value>
  </data>
  <data name="FocusBookmarkListCommand.Menu" xml:space="preserve">
    <value>Bookmark list</value>
  </data>
  <data name="FocusBookmarkListCommand.Remarks" xml:space="preserve">
    <value>Display bookmark list of the bookshelf.</value>
  </data>
  <data name="FocusFolderSearchBoxCommand" xml:space="preserve">
    <value>Focus search box</value>
  </data>
  <data name="FocusFolderSearchBoxCommand.Menu" xml:space="preserve">
    <value>Search box</value>
  </data>
  <data name="FocusFolderSearchBoxCommand.Remarks" xml:space="preserve">
    <value>Focus search box. The bookshelf is displayed.</value>
  </data>
  <data name="FocusMainViewCommand" xml:space="preserve">
    <value>Focus on main view</value>
  </data>
  <data name="FocusMainViewCommand.Menu" xml:space="preserve">
    <value>Main view</value>
  </data>
  <data name="FocusMainViewCommand.Remarks" xml:space="preserve">
    <value>Move focus to the main view.</value>
  </data>
  <data name="FocusMainViewCommandParameter.NeedClosePanels" xml:space="preserve">
    <value>Close all panels</value>
  </data>
  <data name="FocusNextAppCommand" xml:space="preserve">
    <value>Switch next NeeView</value>
  </data>
  <data name="FocusNextAppCommand.Menu" xml:space="preserve">
    <value>Switch next NeeView</value>
  </data>
  <data name="FocusNextAppCommand.Remarks" xml:space="preserve">
    <value>Switch to the next NeeView when multiple are started.</value>
  </data>
  <data name="FocusPrevAppCommand" xml:space="preserve">
    <value>Switch prev NeeView</value>
  </data>
  <data name="FocusPrevAppCommand.Menu" xml:space="preserve">
    <value>Switch prev NeeView</value>
  </data>
  <data name="FocusPrevAppCommand.Remarks" xml:space="preserve">
    <value>Switch to the previous NeeView when multiple are started.</value>
  </data>
  <data name="FolderInfoArchiver" xml:space="preserve">
    <value>Archiver</value>
  </data>
  <data name="FolderInfoDate" xml:space="preserve">
    <value>File date</value>
  </data>
  <data name="FolderInfoDateFormat" xml:space="preserve">
    <value>yyyy-MM-dd dddd H:mm</value>
  </data>
  <data name="FolderInfoDateTimeOriginal" xml:space="preserve">
    <value>Date taken</value>
  </data>
  <data name="FolderInfoDecoder" xml:space="preserve">
    <value>Decoder</value>
  </data>
  <data name="FolderInfoDevice" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="FolderInfoFileName" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FolderInfoFilePath" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="FolderInfoFileSize" xml:space="preserve">
    <value>File size</value>
  </data>
  <data name="FolderInfoFolderPath" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="FolderInfoImageSize" xml:space="preserve">
    <value>Image size</value>
  </data>
  <data name="FolderInfoInfo" xml:space="preserve">
    <value>Shot</value>
  </data>
  <data name="FolderInfoISO" xml:space="preserve">
    <value>ISO</value>
  </data>
  <data name="FolderInfoMenuCopy" xml:space="preserve">
    <value>_Copy</value>
  </data>
  <data name="FolderInfoOpenFolder" xml:space="preserve">
    <value>Open Folder</value>
  </data>
  <data name="FolderListConfig.FolderTreeLayout" xml:space="preserve">
    <value>Folder tree layout</value>
  </data>
  <data name="FolderListConfig.IsFolderTreeVisible" xml:space="preserve">
    <value>Display folder tree</value>
  </data>
  <data name="FolderListConfig.PanelListItemStyle" xml:space="preserve">
    <value>List item style</value>
  </data>
  <data name="FolderOrder" xml:space="preserve">
    <value>List item order</value>
  </data>
  <data name="FolderOrder.EntryTime" xml:space="preserve">
    <value>Entry↑</value>
  </data>
  <data name="FolderOrder.EntryTimeDescending" xml:space="preserve">
    <value>Entry↓</value>
  </data>
  <data name="FolderOrder.FileName" xml:space="preserve">
    <value>Name↑</value>
  </data>
  <data name="FolderOrder.FileNameDescending" xml:space="preserve">
    <value>Name↓</value>
  </data>
  <data name="FolderOrder.FileType" xml:space="preserve">
    <value>Type↑</value>
  </data>
  <data name="FolderOrder.FileTypeDescending" xml:space="preserve">
    <value>Type↓</value>
  </data>
  <data name="FolderOrder.Path" xml:space="preserve">
    <value>Path↑</value>
  </data>
  <data name="FolderOrder.PathDescending" xml:space="preserve">
    <value>Path↓</value>
  </data>
  <data name="FolderOrder.Random" xml:space="preserve">
    <value>Shuffle</value>
  </data>
  <data name="FolderOrder.Size" xml:space="preserve">
    <value>Size↑</value>
  </data>
  <data name="FolderOrder.SizeDescending" xml:space="preserve">
    <value>Size↓</value>
  </data>
  <data name="FolderOrder.TimeStamp" xml:space="preserve">
    <value>Date↑</value>
  </data>
  <data name="FolderOrder.TimeStampDescending" xml:space="preserve">
    <value>Date↓</value>
  </data>
  <data name="FolderTreeLayout.Left" xml:space="preserve">
    <value>Place to the left</value>
  </data>
  <data name="FolderTreeLayout.Top" xml:space="preserve">
    <value>Place to the top</value>
  </data>
  <data name="FolderTreeMenuAddBookmark" xml:space="preserve">
    <value>Add bookmark</value>
  </data>
  <data name="FolderTreeMenuAddCurrentQuickAccess" xml:space="preserve">
    <value>Add current place to quick access</value>
  </data>
  <data name="FolderTreeMenuAddQuickAccess" xml:space="preserve">
    <value>Add to quick access</value>
  </data>
  <data name="FolderTreeMenuDeleteInvalidBookmark" xml:space="preserve">
    <value>Remove invalid bookmark</value>
  </data>
  <data name="FolderTreeMenuExplorer" xml:space="preserve">
    <value>Open in explorer</value>
  </data>
  <data name="FolderTreeMenuRefreshFolder" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="FolderTreeMenuRemoveQuickAccess" xml:space="preserve">
    <value>Remove from quick access</value>
  </data>
  <data name="HelpChangeLogFile" xml:space="preserve">
    <value>CHANGELOG.html</value>
  </data>
  <data name="HelpCommandListCommand" xml:space="preserve">
    <value>Command help</value>
  </data>
  <data name="HelpCommandListCommand.Menu" xml:space="preserve">
    <value>Command Help</value>
  </data>
  <data name="HelpCommandListCommand.Remarks" xml:space="preserve">
    <value>Displays help of all commands in the browser.</value>
  </data>
  <data name="HelpCommandMessage" xml:space="preserve">
    <value>Commands to which no operation is assigned can be used by setting with "Edit commands".</value>
  </data>
  <data name="HelpCommandTitle" xml:space="preserve">
    <value>NeeView Command List</value>
  </data>
  <data name="HelpMainMenuCommand" xml:space="preserve">
    <value>Main menu help</value>
  </data>
  <data name="HelpMainMenuCommand.Menu" xml:space="preserve">
    <value>Main menu help</value>
  </data>
  <data name="HelpMainMenuCommand.Remarks" xml:space="preserve">
    <value>Display the main menu help on the browser.</value>
  </data>
  <data name="HelpReadMeFile" xml:space="preserve">
    <value>README.html</value>
  </data>
  <data name="HelpScriptCommand" xml:space="preserve">
    <value>Script Help</value>
  </data>
  <data name="HelpScriptCommand.Menu" xml:space="preserve">
    <value>Script Help</value>
  </data>
  <data name="HelpScriptCommand.Remarks" xml:space="preserve">
    <value>Displays the script manual in the browser.</value>
  </data>
  <data name="HelpSearchOptionCommand" xml:space="preserve">
    <value>Search options help</value>
  </data>
  <data name="HelpSearchOptionCommand.Menu" xml:space="preserve">
    <value>Search options help</value>
  </data>
  <data name="HelpSearchOptionCommand.Remarks" xml:space="preserve">
    <value>Display the search options help on the browser.</value>
  </data>
  <data name="HistoryConfig.HistoryEntryPageCount" xml:space="preserve">
    <value>Number of page operations to start history registration</value>
  </data>
  <data name="HistoryConfig.HistoryEntryPageCount.Remarks" xml:space="preserve">
    <value>Register in history with page movement operation more than this count or last page display.</value>
  </data>
  <data name="HistoryConfig.HistoryFilePath" xml:space="preserve">
    <value>History list file location</value>
  </data>
  <data name="HistoryConfig.IsAutoCleanupEnabled" xml:space="preserve">
    <value>Automatic deletion of invalid history</value>
  </data>
  <data name="HistoryConfig.IsAutoCleanupEnabled.Remarks" xml:space="preserve">
    <value>Delete invalid history on startup.</value>
  </data>
  <data name="HistoryConfig.IsCurrentFolder" xml:space="preserve">
    <value>Current folder only</value>
  </data>
  <data name="HistoryConfig.IsCurrentFolder.Remarks" xml:space="preserve">
    <value>Shows the history of only the folders of the currently open book.</value>
  </data>
  <data name="HistoryConfig.IsForceUpdateHistory" xml:space="preserve">
    <value>Even if you open a book from history, it updates the last browsing date</value>
  </data>
  <data name="HistoryConfig.IsInnerArchiveHistoryEnabled" xml:space="preserve">
    <value>Save recursive compressed file in history</value>
  </data>
  <data name="HistoryConfig.IsKeepFolderStatus" xml:space="preserve">
    <value>Save folder state</value>
  </data>
  <data name="HistoryConfig.IsKeepSearchHistory" xml:space="preserve">
    <value>Save search history</value>
  </data>
  <data name="HistoryConfig.IsSaveHistory" xml:space="preserve">
    <value>Save history list</value>
  </data>
  <data name="HistoryConfig.IsUncHistoryEnabled" xml:space="preserve">
    <value>Save UNC path in history</value>
  </data>
  <data name="HistoryConfig.IsUncHistoryEnabled.Remarks" xml:space="preserve">
    <value>Save the path on the network like "\\computer\~" in the history.</value>
  </data>
  <data name="HistoryConfig.LimitSize" xml:space="preserve">
    <value>Size limit</value>
  </data>
  <data name="HistoryConfig.LimitSpan" xml:space="preserve">
    <value>Retention period</value>
  </data>
  <data name="HistoryConfig.PanelListItemStyle" xml:space="preserve">
    <value>History list item style</value>
  </data>
  <data name="HistoryItemAccessor" xml:space="preserve">
    <value>History item accessor</value>
  </data>
  <data name="HistoryItemAccessor.LastAccessTime" xml:space="preserve">
    <value>Last access time</value>
  </data>
  <data name="HistoryItemAccessor.Name" xml:space="preserve">
    <value>Item name</value>
  </data>
  <data name="HistoryItemAccessor.Path" xml:space="preserve">
    <value>The path corresponding to the item</value>
  </data>
  <data name="HistoryItemMenuDelete" xml:space="preserve">
    <value>_Remove history</value>
  </data>
  <data name="HistoryItemMenuIsCurrentFolder" xml:space="preserve">
    <value>Current folder only</value>
  </data>
  <data name="HistoryItemMenuOpenBook" xml:space="preserve">
    <value>_Open</value>
  </data>
  <data name="HistoryMenuDeleteAll" xml:space="preserve">
    <value>Delete all</value>
  </data>
  <data name="HistoryMenuDeleteInvalid" xml:space="preserve">
    <value>Remove invalid history</value>
  </data>
  <data name="HistoryName" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="HistoryPanelAccessor" xml:space="preserve">
    <value>History panel accessor</value>
  </data>
  <data name="HistoryPanelAccessor.Items" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="HistoryPanelAccessor.SelectedItems" xml:space="preserve">
    <value>Selected items</value>
  </data>
  <data name="HistoryPanelAccessor.Style" xml:space="preserve">
    <value>List item stye</value>
  </data>
  <data name="HorizontalAlignment.Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="HorizontalAlignment.Left" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="HorizontalAlignment.Right" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="HsvEffectUnit.Hue" xml:space="preserve">
    <value>Hue</value>
  </data>
  <data name="HsvEffectUnit.Saturation" xml:space="preserve">
    <value>Saturation</value>
  </data>
  <data name="HsvEffectUnit.Value" xml:space="preserve">
    <value>Brightness</value>
  </data>
  <data name="ImageCustomSizeConfig.Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="ImageCustomSizeConfig.IsEnabled" xml:space="preserve">
    <value>Enable custom image size</value>
  </data>
  <data name="ImageCustomSizeConfig.IsUniformed" xml:space="preserve">
    <value>Lock aspect</value>
  </data>
  <data name="ImageCustomSizeConfig.Size" xml:space="preserve">
    <value>Custom image size</value>
  </data>
  <data name="ImageCustomSizeConfig.Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="ImageDotKeepConfig.IsEnabled" xml:space="preserve">
    <value>Keep dot</value>
  </data>
  <data name="ImageDotKeepConfig.Threshold" xml:space="preserve">
    <value>Scale threshold for "@ImageDotKeepConfig.IsEnabled"</value>
  </data>
  <data name="ImageDotKeepConfig.Threshold.Remarks" xml:space="preserve">
    <value>Only applicable if the scale is larger than this.</value>
  </data>
  <data name="ImageEffectConfig.EffectType" xml:space="preserve">
    <value>Image effect type</value>
  </data>
  <data name="ImageEffectConfig.IsEnabled" xml:space="preserve">
    <value>Enable image effect</value>
  </data>
  <data name="ImageEffectConfig.IsHsvMode" xml:space="preserve">
    <value>Perform color setting with HSV</value>
  </data>
  <data name="ImageEffectConfig.IsHsvMode.Remarks" xml:space="preserve">
    <value>Set the color parameter with HSV (Hue, Saturation, Brightness). When set to OFF, it becomes the setting with RGB.</value>
  </data>
  <data name="ImageGridConfig.Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ImageGridConfig.DivX" xml:space="preserve">
    <value>Column</value>
  </data>
  <data name="ImageGridConfig.DivY" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="ImageGridConfig.IsEnabled" xml:space="preserve">
    <value>Show grid</value>
  </data>
  <data name="ImageGridConfig.IsSquare" xml:space="preserve">
    <value>Square</value>
  </data>
  <data name="ImageResizeFilterConfig.IsEnabled" xml:space="preserve">
    <value>Enable resize filter</value>
  </data>
  <data name="ImageResizeFilterConfig.IsUnsharpMaskEnabled" xml:space="preserve">
    <value>Enable unsharp mask when resizing</value>
  </data>
  <data name="ImageResizeFilterConfig.ResizeInterpolation" xml:space="preserve">
    <value>Resize interpolation method</value>
  </data>
  <data name="ImageStandardConfig.IsAllFileSupported" xml:space="preserve">
    <value>A file whose extension is unknown is regarded as an image file</value>
  </data>
  <data name="ImageStandardConfig.IsAllFileSupported.Remarks" xml:space="preserve">
    <value>This function works when "@SystemConfig.BookPageCollectMode" is "@BookPageCollectMode.All".</value>
  </data>
  <data name="ImageStandardConfig.IsAnimatedGifEnabled" xml:space="preserve">
    <value>Play animated GIF</value>
  </data>
  <data name="ImageStandardConfig.IsAnimatedGifEnabled.Remarks" xml:space="preserve">
    <value>Perform animated GIF playback. Memory consumption problems may occur with long GIFs.</value>
  </data>
  <data name="ImageStandardConfig.IsAspectRatioEnabled" xml:space="preserve">
    <value>Apply image resolution information</value>
  </data>
  <data name="ImageStandardConfig.IsAspectRatioEnabled.Remarks" xml:space="preserve">
    <value>Display according to the dpi and aspect ratio set in the image file.</value>
  </data>
  <data name="ImageStandardConfig.SupportFileTypes" xml:space="preserve">
    <value>Image file extensions</value>
  </data>
  <data name="ImageStandardConfig.UseWicInformation" xml:space="preserve">
    <value>Use WIC information</value>
  </data>
  <data name="ImageStandardConfig.UseWicInformation.Remarks" xml:space="preserve">
    <value>Obtains the image file extension from WIC at initialization. If off, only the default extension is available.</value>
  </data>
  <data name="ImageSvgConfig.IsEnabled" xml:space="preserve">
    <value>Enable SVG file</value>
  </data>
  <data name="ImageSvgConfig.IsEnabled.Remarks" xml:space="preserve">
    <value>Open an SVG file as a page.</value>
  </data>
  <data name="ImageSvgConfig.SupportFileTypes" xml:space="preserve">
    <value>SVG file extensions</value>
  </data>
  <data name="ImageTrimConfig.Bottom" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="ImageTrimConfig.IsEnabled" xml:space="preserve">
    <value>Enable trim</value>
  </data>
  <data name="ImageTrimConfig.Left" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="ImageTrimConfig.Right" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="ImageTrimConfig.Top" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="ImportBackupCommand" xml:space="preserve">
    <value>Import settings</value>
  </data>
  <data name="ImportBackupCommand.Menu" xml:space="preserve">
    <value>Import settings...</value>
  </data>
  <data name="ImportBackupCommand.Remarks" xml:space="preserve">
    <value>Select the restored item from the backup file and restore it.</value>
  </data>
  <data name="ImportControl_Bookmark" xml:space="preserve">
    <value>Bookmark</value>
  </data>
  <data name="ImportControl_History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="ImportControl_Pagemark" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="ImportControl_Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="InformationConfig.IsVisibleBitsPerPixel" xml:space="preserve">
    <value>Display the number of bits per pixel in image size</value>
  </data>
  <data name="InformationConfig.IsVisibleFilePath" xml:space="preserve">
    <value>Display the file path in the compressed file</value>
  </data>
  <data name="InformationConfig.IsVisibleLoader" xml:space="preserve">
    <value>Display used archiver, image decoder name</value>
  </data>
  <data name="InformationPanelAccessor" xml:space="preserve">
    <value>Information panel accessor</value>
  </data>
  <data name="InputGestureControl.ButtonConflict" xml:space="preserve">
    <value>Conflict resolution</value>
  </data>
  <data name="InputGestureControl.InputMouse" xml:space="preserve">
    <value>Mouse input here</value>
  </data>
  <data name="InputGestureControl.InputShortcut" xml:space="preserve">
    <value>Key input here</value>
  </data>
  <data name="InputGestureControl.LabelMouse" xml:space="preserve">
    <value>Mouse input</value>
  </data>
  <data name="InputGestureControl.LabelShortcut" xml:space="preserve">
    <value>Shortcut key</value>
  </data>
  <data name="InputGestureControl.Title" xml:space="preserve">
    <value>Shortcut setting</value>
  </data>
  <data name="InputSceme.TypeA" xml:space="preserve">
    <value>Standard setting</value>
  </data>
  <data name="InputSceme.TypeA.Remarks" xml:space="preserve">
    <value>By clicking the mouse, "@CommandPrevPage" "@CommandNextPage".
In the wheel operation, "@CommandPrevScrollPage" "@CommandNextScrollPage".</value>
  </data>
  <data name="InputSceme.TypeB" xml:space="preserve">
    <value>Prioritize page feed by wheel</value>
  </data>
  <data name="InputSceme.TypeB.Remarks" xml:space="preserve">
    <value>In the wheel operation, "@CommandPrevPage" "@CommandNextPage".
By right-click, "@CommandOpenContextMenu".
Left click is undefined.</value>
  </data>
  <data name="InputSceme.TypeC" xml:space="preserve">
    <value>Prioritize page feed by click</value>
  </data>
  <data name="InputSceme.TypeC.Remarks" xml:space="preserve">
    <value>By clicking the mouse, "@CommandPrevPage" "@CommandNextPage".
In the wheel operation, "@CommandViewScrollUp" "@CommandViewScrollDown".</value>
  </data>
  <data name="InputTouchControl.Remarks" xml:space="preserve">
    <value>Specify the area to touch.
If Center is not assigned to a command, the judgment of the area (L1, L2, R1, R2) below it is applied.
Please substitute gesture for flick operation. </value>
  </data>
  <data name="InputTouchControl.TouchInput" xml:space="preserve">
    <value>Here, touch input</value>
  </data>
  <data name="JavascriptEngine.ExecureFile" xml:space="preserve">
    <value>Load and execute the script.</value>
  </data>
  <data name="JavascriptEngine.ExecureFile.Example" xml:space="preserve">
    <value>// Load and run Sample.nvjs
include("Sample.nvjs")</value>
  </data>
  <data name="JavascriptEngine.ExecureFile.path" xml:space="preserve">
    <value>Script path. Relative paths are relative to the current script location.</value>
  </data>
  <data name="JavascriptEngine.ExecureFile.Returns" xml:space="preserve">
    <value>Script execution result</value>
  </data>
  <data name="JavascriptEngine.Log" xml:space="preserve">
    <value>Print a message to the console. It only works when you run the script from the console. For script testing.</value>
  </data>
  <data name="JavascriptEngine.Log.log" xml:space="preserve">
    <value>Output message</value>
  </data>
  <data name="JavascriptEngine.Sleep" xml:space="preserve">
    <value>Suspends the script for the specified amount of time.</value>
  </data>
  <data name="JavascriptEngine.Sleep.millisecond" xml:space="preserve">
    <value>Pause time (milliseconds)</value>
  </data>
  <data name="JavascriptEngine.SystemCall" xml:space="preserve">
    <value>Run the external app.</value>
  </data>
  <data name="JavascriptEngine.SystemCall.args" xml:space="preserve">
    <value>App arguments (optional)</value>
  </data>
  <data name="JavascriptEngine.SystemCall.filename" xml:space="preserve">
    <value>Executable path. If you specify a URL or file path, the associated app will be executed.</value>
  </data>
  <data name="JumpPageCommand" xml:space="preserve">
    <value>Jump page</value>
  </data>
  <data name="JumpPageCommand.Execute.Remarks" xml:space="preserve">
    <value>number: int|Page number</value>
  </data>
  <data name="JumpPageCommand.Remarks" xml:space="preserve">
    <value>Enter the page number and move.</value>
  </data>
  <data name="JumpRandomPageCommand" xml:space="preserve">
    <value>Random page</value>
  </data>
  <data name="JumpRandomPageCommand.Remarks" xml:space="preserve">
    <value>Jump to a random page.</value>
  </data>
  <data name="Language.English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Language.Japanese" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="LastPageCommand" xml:space="preserve">
    <value>Last page</value>
  </data>
  <data name="LastPageCommand.Remarks" xml:space="preserve">
    <value>Move to the last page.</value>
  </data>
  <data name="LayoutPanelAccessor.Close" xml:space="preserve">
    <value>Close panel</value>
  </data>
  <data name="LayoutPanelAccessor.IsFloating" xml:space="preserve">
    <value>Panel is floating</value>
  </data>
  <data name="LayoutPanelAccessor.IsSelected" xml:space="preserve">
    <value>Panel is selected</value>
  </data>
  <data name="LayoutPanelAccessor.IsVisible" xml:space="preserve">
    <value>Panel is visible</value>
  </data>
  <data name="LayoutPanelAccessor.Open" xml:space="preserve">
    <value>Open panel</value>
  </data>
  <data name="LayoutPanelAccessor.OpenDock" xml:space="preserve">
    <value>Open panel in docking mode</value>
  </data>
  <data name="LayoutPanelAccessor.OpenFloat" xml:space="preserve">
    <value>Open panel in floating mode</value>
  </data>
  <data name="LayoutPanelMenuClose" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="LayoutPanelMenuDocking" xml:space="preserve">
    <value>Doc_king</value>
  </data>
  <data name="LayoutPanelMenuFloating" xml:space="preserve">
    <value>_Floating</value>
  </data>
  <data name="LevelEffectUnit.Black" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="LevelEffectUnit.Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="LevelEffectUnit.Maximum" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="LevelEffectUnit.Minimum" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="LevelEffectUnit.White" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="LoadAsCommand" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="LoadAsCommand.Execute.Remarks" xml:space="preserve">
    <value>path: string|File or folder path</value>
  </data>
  <data name="LoadAsCommand.Menu" xml:space="preserve">
    <value>_Open...</value>
  </data>
  <data name="LoadAsCommand.Remarks" xml:space="preserve">
    <value>Select and open the compressed file or image file.</value>
  </data>
  <data name="LoadingPage.ViewNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="LoadingPage.ViewPreImage" xml:space="preserve">
    <value>Image of previous page</value>
  </data>
  <data name="LoadingPage.ViewPreThumbnail" xml:space="preserve">
    <value>Thumbnail of previous page</value>
  </data>
  <data name="LongButtonDownMode.Loupe" xml:space="preserve">
    <value>Loupe</value>
  </data>
  <data name="LongButtonDownMode.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="LongButtonDownMode.Repeat" xml:space="preserve">
    <value>Repeat input</value>
  </data>
  <data name="LongButtonMask.All" xml:space="preserve">
    <value>All buttons</value>
  </data>
  <data name="LongButtonMask.Left" xml:space="preserve">
    <value>Left button</value>
  </data>
  <data name="LongButtonMask.Right" xml:space="preserve">
    <value>Right button</value>
  </data>
  <data name="LoupeConfig.DefaultScale" xml:space="preserve">
    <value>Loupe standard magnification</value>
  </data>
  <data name="LoupeConfig.IsEscapeKeyEnabled" xml:space="preserve">
    <value>Use the Esc key to release the loupe</value>
  </data>
  <data name="LoupeConfig.IsLoupeCenter" xml:space="preserve">
    <value>At the start, move the cursor position to the screen center</value>
  </data>
  <data name="LoupeConfig.IsResetByPageChanged" xml:space="preserve">
    <value>Release the loupe after moving the page</value>
  </data>
  <data name="LoupeConfig.IsResetByRestart" xml:space="preserve">
    <value>Start loupe at standard magnification</value>
  </data>
  <data name="LoupeConfig.IsResetByRestart.Remarks" xml:space="preserve">
    <value>When set to OFF, the previous magnification will be inherited.</value>
  </data>
  <data name="LoupeConfig.IsVisibleLoupeInfo" xml:space="preserve">
    <value>Display the magnification of loupe</value>
  </data>
  <data name="LoupeConfig.IsVisibleLoupeInfo.Remarks" xml:space="preserve">
    <value>The magnification will be displayed on the upper right of the screen during loupe.</value>
  </data>
  <data name="LoupeConfig.IsWheelScalingEnabled" xml:space="preserve">
    <value>When using a loupe, change the magnifying power by wheel operation</value>
  </data>
  <data name="LoupeConfig.IsWheelScalingEnabled.Remarks" xml:space="preserve">
    <value>Commands to which wheel operation is assigned are invalid.</value>
  </data>
  <data name="LoupeConfig.MaximumScale" xml:space="preserve">
    <value>Loupe maximum magnification</value>
  </data>
  <data name="LoupeConfig.MinimumScale" xml:space="preserve">
    <value>Loupe minimum magnification</value>
  </data>
  <data name="LoupeConfig.ScaleStep" xml:space="preserve">
    <value>Loupe magnification change unit</value>
  </data>
  <data name="LoupeConfig.Speed" xml:space="preserve">
    <value>Loupe Speed</value>
  </data>
  <data name="LoupeOffCommand" xml:space="preserve">
    <value>Loupe OFF</value>
  </data>
  <data name="LoupeOffCommand.Remarks" xml:space="preserve">
    <value>Release the loupe mode.</value>
  </data>
  <data name="LoupeOnCommand" xml:space="preserve">
    <value>Loupe</value>
  </data>
  <data name="LoupeOnCommand.Remarks" xml:space="preserve">
    <value>Make the loupe mode.</value>
  </data>
  <data name="LoupeScaleDownCommand" xml:space="preserve">
    <value>Loupe zoom out</value>
  </data>
  <data name="LoupeScaleDownCommand.Remarks" xml:space="preserve">
    <value>Reduce the loupe magnification. It functions only when using a loupe.</value>
  </data>
  <data name="LoupeScaleUpCommand" xml:space="preserve">
    <value>Loupe zoom in</value>
  </data>
  <data name="LoupeScaleUpCommand.Remarks" xml:space="preserve">
    <value>Expands the magnifying power of the loupe. It functions only when using a loupe.</value>
  </data>
  <data name="MagnifyEffectUnit.Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="MagnifyEffectUnit.Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="MagnifyEffectUnit.InnerRadius" xml:space="preserve">
    <value>Inner radius</value>
  </data>
  <data name="MagnifyEffectUnit.OuterRadius" xml:space="preserve">
    <value>Outer radius</value>
  </data>
  <data name="MainViewConfig.IsFloating" xml:space="preserve">
    <value>MainView floating</value>
  </data>
  <data name="MainViewConfig.IsHideTitleBar" xml:space="preserve">
    <value>Automatically hide MainView window title bar</value>
  </data>
  <data name="MainViewConfig.IsTopmost" xml:space="preserve">
    <value>MainView window is topmost</value>
  </data>
  <data name="MediaArchiveConfig.IsEnabled" xml:space="preserve">
    <value>Use video</value>
  </data>
  <data name="MediaArchiveConfig.IsMuted" xml:space="preserve">
    <value>Mute video</value>
  </data>
  <data name="MediaArchiveConfig.IsRepeat" xml:space="preserve">
    <value>Video repeat</value>
  </data>
  <data name="MediaArchiveConfig.MediaStartDelaySeconds" xml:space="preserve">
    <value>Play start delay (sec)</value>
  </data>
  <data name="MediaArchiveConfig.MediaStartDelaySeconds.Remarks" xml:space="preserve">
    <value>If 0 is specified, the contents may flicker.</value>
  </data>
  <data name="MediaArchiveConfig.PageSeconds" xml:space="preserve">
    <value>Change time in page movement (sec)</value>
  </data>
  <data name="MediaArchiveConfig.SupportFileTypes" xml:space="preserve">
    <value>Video file extension</value>
  </data>
  <data name="MediaArchiveConfig.SupportFileTypes.Remarks" xml:space="preserve">
    <value>Probably what you can play with Windows Media Player is playable.</value>
  </data>
  <data name="MediaArchiveConfig.Volume" xml:space="preserve">
    <value>Video volume</value>
  </data>
  <data name="MemoryControl.IsAutoGC" xml:space="preserve">
    <value>System manages memory</value>
  </data>
  <data name="MemoryControl.IsAutoGC.Remarks" xml:space="preserve">
    <value>When it is OFF, memory is released every time page is switched</value>
  </data>
  <data name="MenuAutoHideTitleBar" xml:space="preserve">
    <value>Auto-hide title bar</value>
  </data>
  <data name="MenuBarConfig.IsAddressBarEnabled" xml:space="preserve">
    <value>Show address bar</value>
  </data>
  <data name="MenuBarConfig.IsHamburgerMenu" xml:space="preserve">
    <value>Use the hamburger menu</value>
  </data>
  <data name="MenuBarConfig.IsHideMenu" xml:space="preserve">
    <value>Hide menu automatically</value>
  </data>
  <data name="MenuBarConfig.IsHideMenuInAutoHideMode" xml:space="preserve">
    <value>Automatically hide the menu when it is auto-hide mode</value>
  </data>
  <data name="MenuBarConfig.IsVisible" xml:space="preserve">
    <value>Menu visibility</value>
  </data>
  <data name="MenuElementType.Command" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="MenuElementType.Group" xml:space="preserve">
    <value>Submenu</value>
  </data>
  <data name="MenuElementType.History" xml:space="preserve">
    <value>Recent books</value>
  </data>
  <data name="MenuElementType.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="MenuElementType.Separator" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="MenuTreeBookmark" xml:space="preserve">
    <value>_Bookmark</value>
  </data>
  <data name="MenuTreeDebug" xml:space="preserve">
    <value>_Debug</value>
  </data>
  <data name="MenuTreeFile" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="MenuTreeHelp" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="MenuTreeHistory" xml:space="preserve">
    <value>Open from the list of recent books</value>
  </data>
  <data name="MenuTreeImage" xml:space="preserve">
    <value>_Image</value>
  </data>
  <data name="MenuTreeJump" xml:space="preserve">
    <value>_Jump</value>
  </data>
  <data name="MenuTreeOption" xml:space="preserve">
    <value>_Option</value>
  </data>
  <data name="MenuTreePage" xml:space="preserve">
    <value>_Page</value>
  </data>
  <data name="MenuTreeView" xml:space="preserve">
    <value>_View</value>
  </data>
  <data name="MonochromeEffectUnit.Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="MouseConfig.CursorHideReleaseDistance" xml:space="preserve">
    <value>Move distance to redisplay</value>
  </data>
  <data name="MouseConfig.CursorHideTime" xml:space="preserve">
    <value>Hide time (sec)</value>
  </data>
  <data name="MouseConfig.GestureMinimumDistance" xml:space="preserve">
    <value>Mouse gesture stroke (pixel)</value>
  </data>
  <data name="MouseConfig.GestureMinimumDistance.Remarks" xml:space="preserve">
    <value>By moving this distance, it is judged as a gesture stroke.</value>
  </data>
  <data name="MouseConfig.IsCursorHideEnabled" xml:space="preserve">
    <value>Enable auto hide</value>
  </data>
  <data name="MouseConfig.IsCursorHideReleaseAction" xml:space="preserve">
    <value>Redisplay with mouse button operation</value>
  </data>
  <data name="MouseConfig.IsDragEnabled" xml:space="preserve">
    <value>Use mouse drag</value>
  </data>
  <data name="MouseConfig.IsGestureEnabled" xml:space="preserve">
    <value>Use mouse gesture</value>
  </data>
  <data name="MouseConfig.LongButtonDownMode" xml:space="preserve">
    <value>Long press mode</value>
  </data>
  <data name="MouseConfig.LongButtonDownTime" xml:space="preserve">
    <value>Long press decision time (sec)</value>
  </data>
  <data name="MouseConfig.LongButtonDownTime.Remarks" xml:space="preserve">
    <value>It is time to be judged to be long pressed.</value>
  </data>
  <data name="MouseConfig.LongButtonMask" xml:space="preserve">
    <value>Long press button</value>
  </data>
  <data name="MouseConfig.LongButtonRepeatTime" xml:space="preserve">
    <value>Repeat interval (sec)</value>
  </data>
  <data name="MouseConfig.LongButtonRepeatTime.Remarks" xml:space="preserve">
    <value>Repeat time with repeat input.</value>
  </data>
  <data name="MouseConfig.MinimumDragDistance" xml:space="preserve">
    <value>Drag starting distance (pixel)</value>
  </data>
  <data name="MouseConfig.MinimumDragDistance.Remarks" xml:space="preserve">
    <value>First moving distance to become a drag or gesture</value>
  </data>
  <data name="MouseDragList.Header.Command" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="MouseDragList.Header.Drag" xml:space="preserve">
    <value>Drag operation</value>
  </data>
  <data name="MouseDragList.Reset" xml:space="preserve">
    <value>Reset...</value>
  </data>
  <data name="MouseDragSettingWindow.Input" xml:space="preserve">
    <value>Mouse input here</value>
  </data>
  <data name="MouseDragSettingWindow.New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="MouseDragSettingWindow.Old" xml:space="preserve">
    <value>Old</value>
  </data>
  <data name="MouseDragSettingWindow.Remarks" xml:space="preserve">
    <value>Mouse button input in light blue frame.
You can not use right button drag because it is reserved with mouse gesture. </value>
  </data>
  <data name="MouseDragSettingWindow.Title" xml:space="preserve">
    <value>Drag operation</value>
  </data>
  <data name="MouseGestureControl.InputGesture" xml:space="preserve">
    <value>Here gesture input
(Hold down the right button while dragging) </value>
  </data>
  <data name="MouseGestureControl.New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="MouseGestureControl.Old" xml:space="preserve">
    <value>Old</value>
  </data>
  <data name="MouseGestureControl.Remarks" xml:space="preserve">
    <value>Enter a mouse gesture within a light blue frame.
Mouse gesture is a drag operation while holding down the right mouse button.
A left click can be registered as the last gesture key. </value>
  </data>
  <data name="MovePagemarkInBookCommandParameter.IsIncludeTerminal" xml:space="preserve">
    <value>Include the first and last pages</value>
  </data>
  <data name="MovePagemarkInBookCommandParameter.IsLoop" xml:space="preserve">
    <value>Loop</value>
  </data>
  <data name="MoveSizePageCommandParameter.Size" xml:space="preserve">
    <value>Number of moved pages</value>
  </data>
  <data name="MoveToChildBookCommand" xml:space="preserve">
    <value>Go to child</value>
  </data>
  <data name="MoveToChildBookCommand.Remarks" xml:space="preserve">
    <value>When the page is a book, open that book.</value>
  </data>
  <data name="MoveToParentBookCommand" xml:space="preserve">
    <value>Go to parent</value>
  </data>
  <data name="MoveToParentBookCommand.Remarks" xml:space="preserve">
    <value>Open the upper hierarchy as a book.</value>
  </data>
  <data name="MultiPagePolicy.All" xml:space="preserve">
    <value>Run all pages</value>
  </data>
  <data name="MultiPagePolicy.Once" xml:space="preserve">
    <value>Execute only one page</value>
  </data>
  <data name="MultiPagePolicy.Twice" xml:space="preserve">
    <value>Run both pages</value>
  </data>
  <data name="NavigateAngle" xml:space="preserve">
    <value>Angle</value>
  </data>
  <data name="NavigateFlip" xml:space="preserve">
    <value>Flip</value>
  </data>
  <data name="NavigateFlipHorizontal" xml:space="preserve">
    <value>Flip horizontal</value>
  </data>
  <data name="NavigateFlipVertical" xml:space="preserve">
    <value>Flip vertical</value>
  </data>
  <data name="NavigateIsKeepAngle" xml:space="preserve">
    <value>Keep angle</value>
  </data>
  <data name="NavigateIsKeepFlip" xml:space="preserve">
    <value>Keep flip</value>
  </data>
  <data name="NavigateIsKeepScale" xml:space="preserve">
    <value>Keep scale</value>
  </data>
  <data name="NavigateName" xml:space="preserve">
    <value>Navigator</value>
  </data>
  <data name="NavigateRotateLeft" xml:space="preserve">
    <value>Rotate left</value>
  </data>
  <data name="NavigateRotateRerset" xml:space="preserve">
    <value>Reset angle</value>
  </data>
  <data name="NavigateRotateRight" xml:space="preserve">
    <value>Rotate right</value>
  </data>
  <data name="NavigateRotateStretch" xml:space="preserve">
    <value>Apply stretch to rotate button</value>
  </data>
  <data name="NavigateScale" xml:space="preserve">
    <value>Scale</value>
  </data>
  <data name="NavigateScaleDown" xml:space="preserve">
    <value>Scale down</value>
  </data>
  <data name="NavigateScaleReset" xml:space="preserve">
    <value>Reset scale</value>
  </data>
  <data name="NavigateScaleUp" xml:space="preserve">
    <value>Scale up</value>
  </data>
  <data name="NavigateStretch" xml:space="preserve">
    <value>Stretch</value>
  </data>
  <data name="NavigateStretchAllowScaleDown" xml:space="preserve">
    <value>Allow stretch scale down</value>
  </data>
  <data name="NavigateStretchScale" xml:space="preserve">
    <value>Base scale</value>
  </data>
  <data name="NavigatorPanelAccessor" xml:space="preserve">
    <value>Navigator panel accessor</value>
  </data>
  <data name="NavitageStretchAllowScaleUp" xml:space="preserve">
    <value>Allow stretch scale up</value>
  </data>
  <data name="NextBookCommand" xml:space="preserve">
    <value>Next Book</value>
  </data>
  <data name="NextBookCommand.Remarks" xml:space="preserve">
    <value>Load the next book on the bookshelf.</value>
  </data>
  <data name="NextBookHistoryCommand" xml:space="preserve">
    <value>Go next</value>
  </data>
  <data name="NextBookHistoryCommand.Remarks" xml:space="preserve">
    <value>Open a next open book.</value>
  </data>
  <data name="NextFolderPageCommand" xml:space="preserve">
    <value>Next folder</value>
  </data>
  <data name="NextFolderPageCommand.Remarks" xml:space="preserve">
    <value>Move to the first page of the next folder of the book. Valid only in name order.</value>
  </data>
  <data name="NextHistoryCommand" xml:space="preserve">
    <value>Next History</value>
  </data>
  <data name="NextHistoryCommand.Remarks" xml:space="preserve">
    <value>Load the following new history book.</value>
  </data>
  <data name="NextHistoryPageCommand" xml:space="preserve">
    <value>Go next view page</value>
  </data>
  <data name="NextHistoryPageCommand.Remarks" xml:space="preserve">
    <value>Move to next view page.</value>
  </data>
  <data name="NextOnePageCommand" xml:space="preserve">
    <value>Next One</value>
  </data>
  <data name="NextOnePageCommand.Remarks" xml:space="preserve">
    <value>Only one page will move in the next direction.</value>
  </data>
  <data name="NextPageCommand" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NextPageCommand.Remarks" xml:space="preserve">
    <value>Move to next page direction. If it is 2 page display, it moves by 2 pages.</value>
  </data>
  <data name="NextPagemarkCommand" xml:space="preserve">
    <value>Next pagemark</value>
  </data>
  <data name="NextPagemarkCommand.Remarks" xml:space="preserve">
    <value>Go to the next page mark.</value>
  </data>
  <data name="NextPagemarkInBookCommand" xml:space="preserve">
    <value>Next pagemark in book</value>
  </data>
  <data name="NextPagemarkInBookCommand.Remarks" xml:space="preserve">
    <value>Move to the next page mark in the current book.</value>
  </data>
  <data name="NextScrollPageCommand" xml:space="preserve">
    <value>Scroll + Next</value>
  </data>
  <data name="NextScrollPageCommand.Remarks" xml:space="preserve">
    <value>Page Scrolls the image in the next direction. If it is not possible to scroll, it will move to the next page. When using a loupe, only move pages.</value>
  </data>
  <data name="NextSizePageCommand" xml:space="preserve">
    <value>Next num</value>
  </data>
  <data name="NextSizePageCommand.Remarks" xml:space="preserve">
    <value>Move to the next direction by the set number of pages.</value>
  </data>
  <data name="NoneCommand" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="NoticeConfig.BookNameShowMessageStyle" xml:space="preserve">
    <value>Show open book name</value>
  </data>
  <data name="NoticeConfig.CommandShowMessageStyle" xml:space="preserve">
    <value>Show command execution message</value>
  </data>
  <data name="NoticeConfig.GestureShowMessageStyle" xml:space="preserve">
    <value>Show gesture status</value>
  </data>
  <data name="NoticeConfig.IsBusyMarkEnabled" xml:space="preserve">
    <value>The image reading processing in progress mark is displayed on the upper left of the screen</value>
  </data>
  <data name="NoticeConfig.IsEmptyMessageEnabled" xml:space="preserve">
    <value>Show message when there are no pages in the book</value>
  </data>
  <data name="NoticeConfig.IsOriginalScaleShowMessage" xml:space="preserve">
    <value>Make the scale display of the view operation the original image size standard</value>
  </data>
  <data name="NoticeConfig.IsOriginalScaleShowMessage.Remarks" xml:space="preserve">
    <value>In case of 2 page display, we refer to the page with the younger number.</value>
  </data>
  <data name="NoticeConfig.NoticeShowMessageStyle" xml:space="preserve">
    <value>General information</value>
  </data>
  <data name="NoticeConfig.NowLoadingShowMessageStyle" xml:space="preserve">
    <value>Show Now Loading</value>
  </data>
  <data name="NoticeConfig.ViewTransformShowMessageStyle" xml:space="preserve">
    <value>Sbow status change by drag operation</value>
  </data>
  <data name="NotifyBookNextFailed" xml:space="preserve">
    <value>No next book</value>
  </data>
  <data name="NotifyBookOperationPageLoop" xml:space="preserve">
    <value>Looped.</value>
  </data>
  <data name="NotifyBookPrevFailed" xml:space="preserve">
    <value>No previous book</value>
  </data>
  <data name="NotifyCacheErrorDirectoryNotFound" xml:space="preserve">
    <value>Folder not found. ({0})
Initialize the cache location.</value>
  </data>
  <data name="NotifyCacheErrorTitle" xml:space="preserve">
    <value>Cache error</value>
  </data>
  <data name="NotifyCannotDisplay" xml:space="preserve">
    <value>No pages</value>
  </data>
  <data name="NotifyCannotOpen" xml:space="preserve">
    <value>Cannot open {0}</value>
  </data>
  <data name="NotifyCannotOpenBookmarkFolder" xml:space="preserve">
    <value>{0} is a bookmark folder</value>
  </data>
  <data name="NotifyConflict" xml:space="preserve">
    <value>Conflicting with {0}</value>
  </data>
  <data name="NotifyConflictWith" xml:space="preserve">
    <value>"{0}" conflicts with {1}</value>
  </data>
  <data name="NotifyContentFailed" xml:space="preserve">
    <value>Failed to load content</value>
  </data>
  <data name="NotifyDropContent" xml:space="preserve">
    <value>Dropped content</value>
  </data>
  <data name="NotifyFirstFolderPage" xml:space="preserve">
    <value>First folder</value>
  </data>
  <data name="NotifyFirstPage" xml:space="preserve">
    <value>First page</value>
  </data>
  <data name="NotifyFirstPagemark" xml:space="preserve">
    <value>There is no pagemark before the current page</value>
  </data>
  <data name="NotifyFlipHorizontal" xml:space="preserve">
    <value>Flip horizontal</value>
  </data>
  <data name="NotifyFlipVertical" xml:space="preserve">
    <value>Flip vertical</value>
  </data>
  <data name="NotifyHeifHelp" xml:space="preserve">
    <value>In order to display the HEIF image it is necessary to install the additional codec "HEIF Image Extensions".</value>
  </data>
  <data name="NotifyHistoryLastest" xml:space="preserve">
    <value>It is the latest history</value>
  </data>
  <data name="NotifyHistoryTerminal" xml:space="preserve">
    <value>There is no history older than this</value>
  </data>
  <data name="NotifyInvalidFileNameChars" xml:space="preserve">
    <value>The following characters can not be used in the file name:
\ / : * ? " &lt; &gt; |</value>
  </data>
  <data name="NotifyJumpPageLabel" xml:space="preserve">
    <value>Page number ({0} - {1})</value>
  </data>
  <data name="NotifyLastFolderPage" xml:space="preserve">
    <value>Last folder</value>
  </data>
  <data name="NotifyLastPage" xml:space="preserve">
    <value>Last page</value>
  </data>
  <data name="NotifyLastPagemark" xml:space="preserve">
    <value>There is no pagemark after the current page</value>
  </data>
  <data name="NotifyLoadBookmarkFailed" xml:space="preserve">
    <value>Failed to load bookmark.</value>
  </data>
  <data name="NotifyLoadBookmarkFailedTitle" xml:space="preserve">
    <value>Failed to load bookmark</value>
  </data>
  <data name="NotifyLoadHistoryFailed" xml:space="preserve">
    <value>Failed to load history.</value>
  </data>
  <data name="NotifyLoadHistoryFailedTitle" xml:space="preserve">
    <value>Failed to load history</value>
  </data>
  <data name="NotifyLoadingTitle" xml:space="preserve">
    <value>(Loading...)</value>
  </data>
  <data name="NotifyLoadPagemarkFailed" xml:space="preserve">
    <value>Failed to load pagemark.</value>
  </data>
  <data name="NotifyLoadPagemarkFailedTitle" xml:space="preserve">
    <value>Failed to load pagemark</value>
  </data>
  <data name="NotifyLoadSettingFailed" xml:space="preserve">
    <value>Failed to load settings.</value>
  </data>
  <data name="NotifyLoadSettingFailedButtonQuit" xml:space="preserve">
    <value>Quit app</value>
  </data>
  <data name="NotifyLoadSettingFailedTitle" xml:space="preserve">
    <value>Failed to load setting</value>
  </data>
  <data name="NotifyNoFiles" xml:space="preserve">
    <value>No files</value>
  </data>
  <data name="NotifyNoPages" xml:space="preserve">
    <value>{0} has no pages</value>
  </data>
  <data name="NotifyNotSupportedFileType" xml:space="preserve">
    <value>Not supported file type: {0}</value>
  </data>
  <data name="NotifyOutputFailed" xml:space="preserve">
    <value>Failed to output the file</value>
  </data>
  <data name="NotifyPagemarkNextFailed" xml:space="preserve">
    <value>No next pagemark</value>
  </data>
  <data name="NotifyPagemarkPrevFailed" xml:space="preserve">
    <value>No previous pagemark</value>
  </data>
  <data name="NotifyPlayFailed" xml:space="preserve">
    <value>Play failed</value>
  </data>
  <data name="NotifyRemoveUnlinkedPagemark" xml:space="preserve">
    <value>{0} pagemarks deleted.</value>
  </data>
  <data name="NotifySearchKeywordDateTimeError" xml:space="preserve">
    <value>Illegal date-time format</value>
  </data>
  <data name="NotifySearchKeywordOptionError" xml:space="preserve">
    <value>Illegal option: {0}</value>
  </data>
  <data name="NotifyTemporaryErrorDirectoryNotFound" xml:space="preserve">
    <value>Folder not found. ({0})
Initialize the temporary location.</value>
  </data>
  <data name="NotifyTemporaryErrorTitle" xml:space="preserve">
    <value>Temporary error</value>
  </data>
  <data name="OpenConsoleCommand" xml:space="preserve">
    <value>Open script console</value>
  </data>
  <data name="OpenConsoleCommand.Menu" xml:space="preserve">
    <value>Open script _console...</value>
  </data>
  <data name="OpenConsoleCommand.Remarks" xml:space="preserve">
    <value>Open the script console.</value>
  </data>
  <data name="OpenContextMenuCommand" xml:space="preserve">
    <value>Open context menu</value>
  </data>
  <data name="OpenContextMenuCommand.Remarks" xml:space="preserve">
    <value>Open the context menu.</value>
  </data>
  <data name="OpenExplorerCommand" xml:space="preserve">
    <value>Open in explorer</value>
  </data>
  <data name="OpenExplorerCommand.Remarks" xml:space="preserve">
    <value>Open the file of the page you are viewing in Explorer.</value>
  </data>
  <data name="OpenExternalAppCommand" xml:space="preserve">
    <value>External app</value>
  </data>
  <data name="OpenExternalAppCommand.Remarks" xml:space="preserve">
    <value>Open the displayed image with an external application. </value>
  </data>
  <data name="OpenExternalAppCommandParameter.ArchivePolicy" xml:space="preserve">
    <value>Compressed file policy</value>
  </data>
  <data name="OpenExternalAppCommandParameter.Command" xml:space="preserve">
    <value>Program</value>
  </data>
  <data name="OpenExternalAppCommandParameter.Command.Remarks" xml:space="preserve">
    <value>If not specified, launch the application associated with the extension.</value>
  </data>
  <data name="OpenExternalAppCommandParameter.MultiPagePolicy" xml:space="preserve">
    <value>For 2 pages</value>
  </data>
  <data name="OpenExternalAppCommandParameter.Parameter" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="OpenExternalAppCommandParameter.Parameter.Remarks" xml:space="preserve">
    <value>$File will be replaced with the file path. $Uri is replaced with the URI escaped file path.</value>
  </data>
  <data name="OpenOptionsWindowCommand" xml:space="preserve">
    <value>Open options window</value>
  </data>
  <data name="OpenOptionsWindowCommand.Menu" xml:space="preserve">
    <value>_Options...</value>
  </data>
  <data name="OpenOptionsWindowCommand.Remarks" xml:space="preserve">
    <value>Open the options window.</value>
  </data>
  <data name="OpenScriptsFolderCommand" xml:space="preserve">
    <value>Open scripts folder</value>
  </data>
  <data name="OpenScriptsFolderCommand.Remarks" xml:space="preserve">
    <value>Open the scripts folder with Explorer.</value>
  </data>
  <data name="OpenSettingFilesFolderCommand" xml:space="preserve">
    <value>Open setting folder</value>
  </data>
  <data name="OpenSettingFilesFolderCommand.Remarks" xml:space="preserve">
    <value>Open the folder where the configuration file setting file is saved.</value>
  </data>
  <data name="OpenVersionWindowCommand" xml:space="preserve">
    <value>Display version information</value>
  </data>
  <data name="OpenVersionWindowCommand.Menu" xml:space="preserve">
    <value>_About...</value>
  </data>
  <data name="OpenVersionWindowCommand.Remarks" xml:space="preserve">
    <value>Display version information.</value>
  </data>
  <data name="OptionErrorArgument" xml:space="preserve">
    <value>{0} is an unsupported argument type.</value>
  </data>
  <data name="OptionErrorArgumentEmpty" xml:space="preserve">
    <value>An argument is required for {0}.</value>
  </data>
  <data name="OptionErrorArgumentFailed" xml:space="preserve">
    <value>You can not use {1} as an argument to {0}.</value>
  </data>
  <data name="OptionErrorArgumentUnknown" xml:space="preserve">
    <value>{0} is an unknown option.</value>
  </data>
  <data name="OptionErrorFileNotFound" xml:space="preserve">
    <value>Specified configuration file does not exist</value>
  </data>
  <data name="OptionFolderList" xml:space="preserve">
    <value>Specify the bookshelf location.</value>
  </data>
  <data name="OptionIsBlank" xml:space="preserve">
    <value>Start up without opening the image file</value>
  </data>
  <data name="OptionIsFullScreen" xml:space="preserve">
    <value>Specify whether to start with full screen</value>
  </data>
  <data name="OptionIsHelp" xml:space="preserve">
    <value>This help is displayed</value>
  </data>
  <data name="OptionIsNewWindow" xml:space="preserve">
    <value>Specify whether to start in a new window</value>
  </data>
  <data name="OptionIsResetPlacement" xml:space="preserve">
    <value>Initialize window coordinates</value>
  </data>
  <data name="OptionIsSlideShow" xml:space="preserve">
    <value>Specify whether to start a slideshow</value>
  </data>
  <data name="OptionIsVersion" xml:space="preserve">
    <value>Display version information</value>
  </data>
  <data name="OptionScriptFile" xml:space="preserve">
    <value>Executes the specified script file at startup</value>
  </data>
  <data name="OptionSettingFilename" xml:space="preserve">
    <value>Specify the path of the setting file (UserSetting.json)</value>
  </data>
  <data name="OptionTerminater" xml:space="preserve">
    <value>Indicates the end of option list. Subsequent arguments are considered file names.</value>
  </data>
  <data name="OptionWindowState" xml:space="preserve">
    <value>Start with the specified window state</value>
  </data>
  <data name="PageAccessor" xml:space="preserve">
    <value>Page accessor</value>
  </data>
  <data name="PageAccessor.Example" xml:space="preserve">
    <value>// Display the first page name with toast
nv.ShowToast(nv.Book.Pages[0].Path)</value>
  </data>
  <data name="PageAccessor.LastWriteTime" xml:space="preserve">
    <value>Last write time of the file</value>
  </data>
  <data name="PageAccessor.Path" xml:space="preserve">
    <value>Page path</value>
  </data>
  <data name="PageAccessor.Size" xml:space="preserve">
    <value>File size (Byte)</value>
  </data>
  <data name="PageEndAction.Dialog" xml:space="preserve">
    <value>Select in dialog</value>
  </data>
  <data name="PageEndAction.Loop" xml:space="preserve">
    <value>Loop</value>
  </data>
  <data name="PageEndAction.NextBook" xml:space="preserve">
    <value>Move to next book</value>
  </data>
  <data name="PageEndAction.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="PageList.Back.ToolTip" xml:space="preserve">
    <value>Back (Alt+Left)</value>
  </data>
  <data name="PageList.CopyToFolderFailed" xml:space="preserve">
    <value>Copy failed</value>
  </data>
  <data name="PageList.Message.MoveToFolderFailed" xml:space="preserve">
    <value>Move failed</value>
  </data>
  <data name="PageList.Next.ToolTip" xml:space="preserve">
    <value>Next (Alt+Right)</value>
  </data>
  <data name="PageList.Up.ToolTip" xml:space="preserve">
    <value>Up (Alt+Up)</value>
  </data>
  <data name="PageListConfig.Format" xml:space="preserve">
    <value>Page name display format of page list</value>
  </data>
  <data name="PageListConfig.PanelListItemStyle" xml:space="preserve">
    <value>Page list item style</value>
  </data>
  <data name="PageListItem.Menu.CopyToFolder" xml:space="preserve">
    <value>Cop_y to folder</value>
  </data>
  <data name="PageListItem.Menu.Explorer" xml:space="preserve">
    <value>Open in e_xplorer</value>
  </data>
  <data name="PageListItem.Menu.MoveToFolder" xml:space="preserve">
    <value>Mov_e to folder</value>
  </data>
  <data name="PageListItemMenuCopy" xml:space="preserve">
    <value>_Copy</value>
  </data>
  <data name="PageListItemMenuDelete" xml:space="preserve">
    <value>_Delete</value>
  </data>
  <data name="PagelistItemMenuOpen" xml:space="preserve">
    <value>_Open</value>
  </data>
  <data name="PagelistItemMenuOpenBook" xml:space="preserve">
    <value>_Open book</value>
  </data>
  <data name="PageListName" xml:space="preserve">
    <value>Page list</value>
  </data>
  <data name="PageListPanelAccessor" xml:space="preserve">
    <value>PageList panel accessor</value>
  </data>
  <data name="PageListPanelAccessor.Format" xml:space="preserve">
    <value>Item name format</value>
  </data>
  <data name="PageListPanelAccessor.Items" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="PageListPanelAccessor.Path" xml:space="preserve">
    <value>Current book path</value>
  </data>
  <data name="PageListPanelAccessor.SelectedItems" xml:space="preserve">
    <value>Selected items</value>
  </data>
  <data name="PageListPanelAccessor.SortMode" xml:space="preserve">
    <value>Page sort mode</value>
  </data>
  <data name="PageListPanelAccessor.Style" xml:space="preserve">
    <value>List item stye</value>
  </data>
  <data name="PagemarkConfig.IsSavePagemark" xml:space="preserve">
    <value>Save pagemark list</value>
  </data>
  <data name="PagemarkConfig.PagemarkFilePath" xml:space="preserve">
    <value>Pagemark list file location</value>
  </data>
  <data name="PagemarkConfig.PagemarkOrder" xml:space="preserve">
    <value>Pagemark order</value>
  </data>
  <data name="PagemarkConfig.PanelListItemStyle" xml:space="preserve">
    <value>Pagemark list item style</value>
  </data>
  <data name="PagemarkItemAccessor" xml:space="preserve">
    <value>Pagemark item accessor</value>
  </data>
  <data name="PagemarkItemAccessor.IsExpanded" xml:space="preserve">
    <value>Item is expanded</value>
  </data>
  <data name="PagemarkItemAccessor.Name" xml:space="preserve">
    <value>Item name</value>
  </data>
  <data name="PagemarkItemAccessor.Path" xml:space="preserve">
    <value>The path corresponding to the item</value>
  </data>
  <data name="PagemarkItemAccessor.Type" xml:space="preserve">
    <value>Item type</value>
  </data>
  <data name="PagemarkItemMenuDelete" xml:space="preserve">
    <value>_Remove pagemark</value>
  </data>
  <data name="PagemarkItemMenuDeleteFolder" xml:space="preserve">
    <value>_Delete folder</value>
  </data>
  <data name="PagemarkItemMenuOpen" xml:space="preserve">
    <value>_Open</value>
  </data>
  <data name="PagemarkItemMenuRename" xml:space="preserve">
    <value>Rena_me</value>
  </data>
  <data name="PagemarkListAddTips" xml:space="preserve">
    <value>Add pagemark</value>
  </data>
  <data name="PagemarkMenuCurrentBook" xml:space="preserve">
    <value>Current book only</value>
  </data>
  <data name="PagemarkMenuDeleteInvalid" xml:space="preserve">
    <value>Remove invalid pagemark</value>
  </data>
  <data name="PagemarkMenuOpenAsBook" xml:space="preserve">
    <value>Open as a book</value>
  </data>
  <data name="PagemarkMenuSortPath" xml:space="preserve">
    <value>Path order</value>
  </data>
  <data name="PagemarkName" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="PagemarkPanelAccessor" xml:space="preserve">
    <value>Pagemark panel accessor</value>
  </data>
  <data name="PagemarkPanelAccessor.Items" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="PagemarkPanelAccessor.SelectedItems" xml:space="preserve">
    <value>Selected items</value>
  </data>
  <data name="PagemarkPanelAccessor.Style" xml:space="preserve">
    <value>List item stye</value>
  </data>
  <data name="PageMode.SinglePage" xml:space="preserve">
    <value>One page</value>
  </data>
  <data name="PageMode.WidePage" xml:space="preserve">
    <value>Two page</value>
  </data>
  <data name="PageNameFormat" xml:space="preserve">
    <value>Item name format in PageList</value>
  </data>
  <data name="PageNameFormat.NameOnly" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PageNameFormat.Raw" xml:space="preserve">
    <value>Raw</value>
  </data>
  <data name="PageNameFormat.Smart" xml:space="preserve">
    <value>Smart</value>
  </data>
  <data name="PageOperation_Landscape" xml:space="preserve">
    <value>Landscape</value>
  </data>
  <data name="PageOperation_Portrait" xml:space="preserve">
    <value>Portrait</value>
  </data>
  <data name="PageReadOrder" xml:space="preserve">
    <value>Page read order</value>
  </data>
  <data name="PageReadOrder.LeftToRight" xml:space="preserve">
    <value>Left to right</value>
  </data>
  <data name="PageReadOrder.RightToLeft" xml:space="preserve">
    <value>Right to left</value>
  </data>
  <data name="PageSortMode" xml:space="preserve">
    <value>Page sort mode</value>
  </data>
  <data name="PageSortMode.FileName" xml:space="preserve">
    <value>Name↑</value>
  </data>
  <data name="PageSortMode.FileNameDescending" xml:space="preserve">
    <value>Name↓</value>
  </data>
  <data name="PageSortMode.Random" xml:space="preserve">
    <value>Shuffle</value>
  </data>
  <data name="PageSortMode.Size" xml:space="preserve">
    <value>Size↑</value>
  </data>
  <data name="PageSortMode.SizeDescending" xml:space="preserve">
    <value>Size↓</value>
  </data>
  <data name="PageSortMode.TimeStamp" xml:space="preserve">
    <value>Date↑</value>
  </data>
  <data name="PageSortMode.TimeStampDescending" xml:space="preserve">
    <value>Date↓</value>
  </data>
  <data name="PageStretchMode.None" xml:space="preserve">
    <value>Original size</value>
  </data>
  <data name="PageStretchMode.Uniform" xml:space="preserve">
    <value>Fit to window size</value>
  </data>
  <data name="PageStretchMode.UniformToFill" xml:space="preserve">
    <value>Extend it to fill the window</value>
  </data>
  <data name="PageStretchMode.UniformToHorizontal" xml:space="preserve">
    <value>Fit width to window</value>
  </data>
  <data name="PageStretchMode.UniformToSize" xml:space="preserve">
    <value>Fit the area size to the window</value>
  </data>
  <data name="PageStretchMode.UniformToVertical" xml:space="preserve">
    <value>Fit height to window</value>
  </data>
  <data name="PageViewRecorderConfig.IsSavePageViewRecord" xml:space="preserve">
    <value>Save page view recods</value>
  </data>
  <data name="PageViewRecorderConfig.PageViewRecordFilePath" xml:space="preserve">
    <value>Page view recording path</value>
  </data>
  <data name="PanelListItemImageShape.Banner" xml:space="preserve">
    <value>Banner</value>
  </data>
  <data name="PanelListItemImageShape.BookShape" xml:space="preserve">
    <value>Book shape</value>
  </data>
  <data name="PanelListItemImageShape.Original" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="PanelListItemImageShape.Square" xml:space="preserve">
    <value>Square</value>
  </data>
  <data name="PanelListItemProfile.ImageShape" xml:space="preserve">
    <value>Shape of Icon</value>
  </data>
  <data name="PanelListItemProfile.ImageWidth" xml:space="preserve">
    <value>Icon size</value>
  </data>
  <data name="PanelListItemProfile.ImageWidth.Remarks" xml:space="preserve">
    <value>The width of the icon image. If the thumbnail image resolution is exceeded, the image will be grainy.</value>
  </data>
  <data name="PanelListItemProfile.IsImagePopupEnabled" xml:space="preserve">
    <value>Icon popup</value>
  </data>
  <data name="PanelListItemProfile.IsImagePopupEnabled.Remarks" xml:space="preserve">
    <value>When placing the cursor on the icon, a large image will be displayed in the popup.</value>
  </data>
  <data name="PanelListItemProfile.IsTextVisible" xml:space="preserve">
    <value>Display the name</value>
  </data>
  <data name="PanelListItemProfile.IsTextWrapped" xml:space="preserve">
    <value>Wrap name</value>
  </data>
  <data name="PanelListItemProfile.NoteOpacity" xml:space="preserve">
    <value>Supplemental text opacity</value>
  </data>
  <data name="PanelListItemStyle" xml:space="preserve">
    <value>List item style</value>
  </data>
  <data name="PanelsConfig.FolderTreeFontSize" xml:space="preserve">
    <value>Font size of folder tree</value>
  </data>
  <data name="PanelsConfig.FontName" xml:space="preserve">
    <value>List item font</value>
  </data>
  <data name="PanelsConfig.FontSize" xml:space="preserve">
    <value>Font size of list items</value>
  </data>
  <data name="PanelsConfig.IsDecoratePlace" xml:space="preserve">
    <value>Format path display of supplemental text</value>
  </data>
  <data name="PanelsConfig.IsDecoratePlace.Remarks" xml:space="preserve">
    <value>Format as "AAA (C:\BBB\CCC)".</value>
  </data>
  <data name="PanelsConfig.IsHidePanel" xml:space="preserve">
    <value>Hide side panels automatically</value>
  </data>
  <data name="PanelsConfig.IsHidePanelInAutoHideMode" xml:space="preserve">
    <value>Automatically hide the side panel when it is auto-hide mode</value>
  </data>
  <data name="PanelsConfig.IsLeftRightKeyEnabled" xml:space="preserve">
    <value>The left and right key input of the side panel is valid</value>
  </data>
  <data name="PanelsConfig.IsLeftRightKeyEnabled.Remarks" xml:space="preserve">
    <value>Activate left / right key operation on the side panel. In the bookshelf, move the folder hierarchically.</value>
  </data>
  <data name="PanelsConfig.IsManipulationBoundaryFeedbackEnabled" xml:space="preserve">
    <value>Touch scroll termination bound on side panel</value>
  </data>
  <data name="PanelsConfig.IsSideBarEnabled" xml:space="preserve">
    <value>Show side bar</value>
  </data>
  <data name="PanelsConfig.MouseWheelSpeedRate" xml:space="preserve">
    <value>Mouse wheel scroll speed rate in thumbnail view</value>
  </data>
  <data name="PanelsConfig.Opacity" xml:space="preserve">
    <value>Panel opacity</value>
  </data>
  <data name="PanelsConfig.Opacity.Remarks" xml:space="preserve">
    <value>It is effective in auto-hide mode.</value>
  </data>
  <data name="PanelsConfig.OpenWithDoubleClick" xml:space="preserve">
    <value>Double click to open book</value>
  </data>
  <data name="PanelsConfig.OpenWithDoubleClick.Remarks" xml:space="preserve">
    <value>Effective on bookshelf, bookmark panel, and history panel.</value>
  </data>
  <data name="ParamBookshelfPageListVisible" xml:space="preserve">
    <value>Show page list</value>
  </data>
  <data name="ParamCacheDirectory" xml:space="preserve">
    <value>Cache location</value>
  </data>
  <data name="ParamCacheDirectoryTips" xml:space="preserve">
    <value>This is the storage location of the thumbnail cache (Cache.db).</value>
  </data>
  <data name="ParamClipboardArchiveSeparater" xml:space="preserve">
    <value>Delimiter between compressed file and filename</value>
  </data>
  <data name="ParamClipboardArchiveSeparaterTips" xml:space="preserve">
    <value>This is the setting when "@CopyFileCommandParameter.ArchivePolicy" is "@ArchivePolicy.SendArchivePath".</value>
  </data>
  <data name="ParamCommandParameterScrollPageAnimation" xml:space="preserve">
    <value>Smooth scroll</value>
  </data>
  <data name="ParamCommandParameterScrollPageStop" xml:space="preserve">
    <value>Scroll stop</value>
  </data>
  <data name="ParamCommandParameterScrollPageStopTips" xml:space="preserve">
    <value>When it is executed continuously for a short time, it does not move the page.</value>
  </data>
  <data name="ParamCommandParameterShare" xml:space="preserve">
    <value>Parameter sharing</value>
  </data>
  <data name="ParamCommandParameterThumbnailListFocus" xml:space="preserve">
    <value>Get focus when displaying panel</value>
  </data>
  <data name="ParamCommandShare" xml:space="preserve">
    <value>Parameters to share with "{0}"</value>
  </data>
  <data name="ParamExportImageIsEnableExportFolder" xml:space="preserve">
    <value>Remember previously saved folder</value>
  </data>
  <data name="ParamExportImageQualityLevel" xml:space="preserve">
    <value>JPEG quality</value>
  </data>
  <data name="ParamExportImageQualityLevelTips" xml:space="preserve">
    <value>It is used only when conversion is required.</value>
  </data>
  <data name="ParamExternalArchiveSeparater" xml:space="preserve">
    <value>Delimiter between compressed file and filename</value>
  </data>
  <data name="ParamExternalArchiveSeparaterTips" xml:space="preserve">
    <value>This is the setting when "@ParamExternalArchiveOption" is "@EnumArchiveOptionTypeSendArchivePath".</value>
  </data>
  <data name="ParamExternalProgramType" xml:space="preserve">
    <value>Program Type</value>
  </data>
  <data name="ParamExternalProtocol" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="ParamFileInformationIsUseExifDateTime" xml:space="preserve">
    <value>Use EXIF ​​date and time</value>
  </data>
  <data name="ParamFileInformationIsUseExifDateTimeTips" xml:space="preserve">
    <value>It is limited to display on the information panel. It does not affect sorting by date.</value>
  </data>
  <data name="ParamItemProfileImageShape" xml:space="preserve">
    <value>Image shape</value>
  </data>
  <data name="ParamItemProfileImageWidth" xml:space="preserve">
    <value>Image size</value>
  </data>
  <data name="ParamItemProfileIsImagePopupEnabled" xml:space="preserve">
    <value>Enable image popup</value>
  </data>
  <data name="ParamItemProfileIsNoteOpacity" xml:space="preserve">
    <value>Note opacity</value>
  </data>
  <data name="ParamItemProfileIsTextVisibled" xml:space="preserve">
    <value>Display text</value>
  </data>
  <data name="ParamItemProfileIsTextWrapped" xml:space="preserve">
    <value>Enable text wrapped</value>
  </data>
  <data name="ParamListItemBannerImageWidth" xml:space="preserve">
    <value>Banner size</value>
  </data>
  <data name="ParamListItemBannerImageWidthTips" xml:space="preserve">
    <value>The width of the image in banner style. The vertical width is 1/4 of the horizontal width. If the thumbnail image resolution is exceeded, the image will be grainy.</value>
  </data>
  <data name="ParamListItemBannerIsTextWrapped" xml:space="preserve">
    <value>Wrap name in banner style</value>
  </data>
  <data name="ParamListItemContentImagePopup" xml:space="preserve">
    <value>Icon popup</value>
  </data>
  <data name="ParamListItemContentImagePopupTips" xml:space="preserve">
    <value>When placing the cursor on the icon, a large image will be displayed in the popup.</value>
  </data>
  <data name="ParamListItemContentImageShape" xml:space="preserve">
    <value>Shape of Icon</value>
  </data>
  <data name="ParamListItemContentImageWidth" xml:space="preserve">
    <value>Icon size</value>
  </data>
  <data name="ParamListItemContentImageWidthTips" xml:space="preserve">
    <value>The width of the image in content style. If the thumbnail image resolution is exceeded, the image will be grainy.</value>
  </data>
  <data name="ParamListItemContentIsTextWrapped" xml:space="preserve">
    <value>Wrap name in content style</value>
  </data>
  <data name="ParamListItemContentNoteOpacity" xml:space="preserve">
    <value>Supplemental text transparency in content style.</value>
  </data>
  <data name="ParamListItemContentNoteOpacityTips" xml:space="preserve">
    <value>Transparency of supplemental text in content style.</value>
  </data>
  <data name="ParamListItemThumbnailImageShape" xml:space="preserve">
    <value>Shape of thumbnail</value>
  </data>
  <data name="ParamListItemThumbnailImageWidth" xml:space="preserve">
    <value>Thumbnail size</value>
  </data>
  <data name="ParamListItemThumbnailImageWidthTips" xml:space="preserve">
    <value>The width of the image in thumbnail style. If the thumbnail image resolution is exceeded, the image will be grainy.</value>
  </data>
  <data name="ParamListItemThumbnailIsTextWrapped" xml:space="preserve">
    <value>Wrap name in thumbnail style</value>
  </data>
  <data name="ParamListItemThumbnailNameVisibled" xml:space="preserve">
    <value>Display the name when thumbnail style.</value>
  </data>
  <data name="ParamNavigateAutoRotate" xml:space="preserve">
    <value>Auto rotate</value>
  </data>
  <data name="ParamNavigateIsFlipHorizontal" xml:space="preserve">
    <value>Flip horizontal</value>
  </data>
  <data name="ParamNavigateIsFlipVertical" xml:space="preserve">
    <value>Flip vertical</value>
  </data>
  <data name="ParamPageListPlacementInBookshelf" xml:space="preserve">
    <value>Place page list on bookshelf</value>
  </data>
  <data name="ParamPageListPlacementInBookshelfTips" xml:space="preserve">
    <value>When turned OFF, it becomes a side panel.</value>
  </data>
  <data name="ParamPictureProfileIsMagicScaleSimdEnabled" xml:space="preserve">
    <value>Use SIMD for resize filtering</value>
  </data>
  <data name="ParamSevenZipArchiverIsPreExtract" xml:space="preserve">
    <value>Pre Extract</value>
  </data>
  <data name="ParamSusieIsPluginCacheEnabled" xml:space="preserve">
    <value>Cache the plugin</value>
  </data>
  <data name="ParamSusieIsPluginCacheEnabledTips" xml:space="preserve">
    <value>If it is unstable, it may stabilize when it is OFF.</value>
  </data>
  <data name="ParamSusiePluginIsCacheEnabled" xml:space="preserve">
    <value>Cache plugin</value>
  </data>
  <data name="ParamSusiePluginIsEnabled" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="ParamSusiePluginIsPreExtract" xml:space="preserve">
    <value>Pre extract</value>
  </data>
  <data name="ParamTouchIsEnabled" xml:space="preserve">
    <value>Enable touch operation</value>
  </data>
  <data name="ParamWindowChromeFrame" xml:space="preserve">
    <value>Window frame with title bar hidden</value>
  </data>
  <data name="ParamWindowShapeIsFullScreenWithTaskBar" xml:space="preserve">
    <value>Do not cover the task bar area at full screen</value>
  </data>
  <data name="ParmViewForceAutoRotate" xml:space="preserve">
    <value>Force auto rotation</value>
  </data>
  <data name="PasteCommand" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="PasteCommand.Menu" xml:space="preserve">
    <value>_Paste</value>
  </data>
  <data name="PasteCommand.Remarks" xml:space="preserve">
    <value>Paste clipboard files and images.</value>
  </data>
  <data name="PdfArchiveConfig.IsEnabled" xml:space="preserve">
    <value>Use PDF</value>
  </data>
  <data name="PdfArchiveConfig.RenderSize" xml:space="preserve">
    <value>PDF page standard size</value>
  </data>
  <data name="PdfArchiveConfig.RenderSize.Remarks" xml:space="preserve">
    <value>Normally we will render according to the display size, but the lower limit will be this standard size. If it becomes smaller, it is reduced and displayed.</value>
  </data>
  <data name="PdfArchiveConfig.SupportFileTypes" xml:space="preserve">
    <value>PDF file extension</value>
  </data>
  <data name="PerformanceConfig.CacheMemorySize" xml:space="preserve">
    <value>Book cache memory size (MB)</value>
  </data>
  <data name="PerformanceConfig.CacheMemorySize.Remarks" xml:space="preserve">
    <value>Once the page has been read, it is stored in memory to speed up redisplay. This value is a guideline, and memory may be used beyond this value. Note that too large a value can make the system unstable.</value>
  </data>
  <data name="PerformanceConfig.IsLimitSourceSize" xml:space="preserve">
    <value>Load image size limit</value>
  </data>
  <data name="PerformanceConfig.IsLimitSourceSize.Remarks" xml:space="preserve">
    <value>Reduce the imported image with "@PerformanceConfig.MaximumSize" as the upper limit. It is setting for speed and memory saving. When this restriction is applied, "*" will be displayed in the size field of the information if it is the loaded image.</value>
  </data>
  <data name="PerformanceConfig.IsLoadingPageVisible" xml:space="preserve">
    <value>Display the current page until the next page loads</value>
  </data>
  <data name="PerformanceConfig.IsLoadingPageVisible.Remarks" xml:space="preserve">
    <value>You can save memory by turning it off.</value>
  </data>
  <data name="PerformanceConfig.IsPreExtractToMemory" xml:space="preserve">
    <value>In the case of a solid compressed file, expand it in memory in advance</value>
  </data>
  <data name="PerformanceConfig.IsPreExtractToMemory.Remarks" xml:space="preserve">
    <value>It speeds up by expanding not in temporary files but in memory. The memory consumed is secured separately from the book cache memory.</value>
  </data>
  <data name="PerformanceConfig.JobWorkerSize" xml:space="preserve">
    <value>Number of threads used for image loading</value>
  </data>
  <data name="PerformanceConfig.JobWorkerSize.Remarks" xml:space="preserve">
    <value>The recommended value is 2 to 4</value>
  </data>
  <data name="PerformanceConfig.MaximumSize" xml:space="preserve">
    <value>Maximum image size</value>
  </data>
  <data name="PerformanceConfig.MaximumSize.Remarks" xml:space="preserve">
    <value>This is the maximum image size enlarged by the resize filter.</value>
  </data>
  <data name="PerformanceConfig.PreExtractSolidSize" xml:space="preserve">
    <value>Maximum solid compressed file extraction size to be extracted in advance (MB)</value>
  </data>
  <data name="PerformanceConfig.PreExtractSolidSize.Remarks" xml:space="preserve">
    <value>Compressed files exceeding this extraction size will not be pre-extracted. Set 0 to prohibit all pre-extraction.
The Susie archive does not determine this size, but only pre-extraction in the plug-in settings.</value>
  </data>
  <data name="PerformanceConfig.PreLoadSize" xml:space="preserve">
    <value>Read ahead page size</value>
  </data>
  <data name="PerformanceConfig.PreLoadSize.Remarks" xml:space="preserve">
    <value>Read ahead within the cache memory size.</value>
  </data>
  <data name="PictureProfile.SupportFileTypes" xml:space="preserve">
    <value>Image file extensions</value>
  </data>
  <data name="PixelateEffectUnit.Pixelation" xml:space="preserve">
    <value>Pixelation</value>
  </data>
  <data name="PrevBookCommand" xml:space="preserve">
    <value>Prev Book</value>
  </data>
  <data name="PrevBookCommand.Remarks" xml:space="preserve">
    <value>Load the previous book on the bookshelf.</value>
  </data>
  <data name="PrevBookHistoryCommand" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="PrevBookHistoryCommand.Remarks" xml:space="preserve">
    <value>Open a previously open book.</value>
  </data>
  <data name="PrevFolderPageCommand" xml:space="preserve">
    <value>Prev folder</value>
  </data>
  <data name="PrevFolderPageCommand.Remarks" xml:space="preserve">
    <value>Move to the first page of the previous folder of the book. Valid only in name order.</value>
  </data>
  <data name="PrevHistoryCommand" xml:space="preserve">
    <value>Prev History</value>
  </data>
  <data name="PrevHistoryCommand.Remarks" xml:space="preserve">
    <value>Load the previous old history book.</value>
  </data>
  <data name="PrevHistoryPageCommand" xml:space="preserve">
    <value>Go back view page</value>
  </data>
  <data name="PrevHistoryPageCommand.Remarks" xml:space="preserve">
    <value>Move to previously view page.</value>
  </data>
  <data name="PrevOnePageCommand" xml:space="preserve">
    <value>Prev One</value>
  </data>
  <data name="PrevOnePageCommand.Remarks" xml:space="preserve">
    <value>Move forward one page only.</value>
  </data>
  <data name="PrevPageCommand" xml:space="preserve">
    <value>Prev</value>
  </data>
  <data name="PrevPageCommand.Remarks" xml:space="preserve">
    <value>Move to the front of the page. If it is 2 page display, it moves by 2 pages.</value>
  </data>
  <data name="PrevPagemarkCommand" xml:space="preserve">
    <value>Prev pagemark</value>
  </data>
  <data name="PrevPagemarkCommand.Remarks" xml:space="preserve">
    <value>Go to the previous page mark.</value>
  </data>
  <data name="PrevPagemarkInBookCommand" xml:space="preserve">
    <value>Prev pagemark in book</value>
  </data>
  <data name="PrevPagemarkInBookCommand.Remarks" xml:space="preserve">
    <value>Move to the previous page mark in the current book.</value>
  </data>
  <data name="PrevScrollPageCommand" xml:space="preserve">
    <value>Scroll + Prev</value>
  </data>
  <data name="PrevScrollPageCommand.Remarks" xml:space="preserve">
    <value>Scroll the image forward in the page. If it is not possible to scroll, it will move to the previous page. When using a loupe, only move pages.</value>
  </data>
  <data name="PrevSizePageCommand" xml:space="preserve">
    <value>Prev num</value>
  </data>
  <data name="PrevSizePageCommand.Remarks" xml:space="preserve">
    <value>It moves forward by the set number of pages.</value>
  </data>
  <data name="PrintCommand" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="PrintCommand.Menu" xml:space="preserve">
    <value>_Print...</value>
  </data>
  <data name="PrintCommand.Remarks" xml:space="preserve">
    <value>Print the image.</value>
  </data>
  <data name="PrintMode.RawImage" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="PrintMode.View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="PrintMode.ViewFill" xml:space="preserve">
    <value>View with paper size</value>
  </data>
  <data name="PrintMode.ViewStretch" xml:space="preserve">
    <value>View all</value>
  </data>
  <data name="PrintWindow.Background" xml:space="preserve">
    <value>Include background</value>
  </data>
  <data name="PrintWindow.ButtonPrint" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="PrintWindow.Column" xml:space="preserve">
    <value>Column</value>
  </data>
  <data name="PrintWindow.Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="PrintWindow.Horizontal" xml:space="preserve">
    <value>Horizontal alignment</value>
  </data>
  <data name="PrintWindow.KeepDot" xml:space="preserve">
    <value>Keep dot</value>
  </data>
  <data name="PrintWindow.Margin" xml:space="preserve">
    <value>Margin (mm)</value>
  </data>
  <data name="PrintWindow.Orientation" xml:space="preserve">
    <value>Orientation</value>
  </data>
  <data name="PrintWindow.Printer" xml:space="preserve">
    <value>Printer</value>
  </data>
  <data name="PrintWindow.Row" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="PrintWindow.Sheets" xml:space="preserve">
    <value>Number of sheets</value>
  </data>
  <data name="PrintWindow.Title" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="PrintWindow.Vertival" xml:space="preserve">
    <value>Vertical alignment</value>
  </data>
  <data name="QueryScheme.Bookmark" xml:space="preserve">
    <value>Bookmark</value>
  </data>
  <data name="QueryScheme.File" xml:space="preserve">
    <value>PC</value>
  </data>
  <data name="QueryScheme.Pagemark" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="QueryScheme.QuickAccess" xml:space="preserve">
    <value>Quick access</value>
  </data>
  <data name="QueryScheme.Root" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="RandomBookCommand" xml:space="preserve">
    <value>Random Book</value>
  </data>
  <data name="RandomBookCommand.Remarks" xml:space="preserve">
    <value>Load the random book on the bookshelf.</value>
  </data>
  <data name="ReLoadCommand" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="ReLoadCommand.Remarks" xml:space="preserve">
    <value>Reload the book</value>
  </data>
  <data name="ReloadSettingCommand" xml:space="preserve">
    <value>Reload settings</value>
  </data>
  <data name="ReloadSettingCommand.Remarks" xml:space="preserve">
    <value>Reload the settings.</value>
  </data>
  <data name="ResolveConflictDialog.Message" xml:space="preserve">
    <value>Please select only one command to execute with "{0}"</value>
  </data>
  <data name="ResolveConflictDialog.Title" xml:space="preserve">
    <value>Conflict resolution</value>
  </data>
  <data name="ReversibleCommandParameter.IsReverse" xml:space="preserve">
    <value>Enable operation swap by slider direction</value>
  </data>
  <data name="ReversibleCommandParameter.IsReverse.Remarks" xml:space="preserve">
    <value>Allows the operation replacement by changing the slider direction.</value>
  </data>
  <data name="RippleEffectUnit.Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="RippleEffectUnit.Frequency" xml:space="preserve">
    <value>Frequency</value>
  </data>
  <data name="RippleEffectUnit.Magnitude" xml:space="preserve">
    <value>Magnitude</value>
  </data>
  <data name="RippleEffectUnit.Phase" xml:space="preserve">
    <value>Phase</value>
  </data>
  <data name="SaveSettingCommand" xml:space="preserve">
    <value>Save settings</value>
  </data>
  <data name="SaveSettingCommand.Remarks" xml:space="preserve">
    <value>Performs saving the current settings.</value>
  </data>
  <data name="ScriptCommand" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="ScriptCommand.Remarks" xml:space="preserve">
    <value>Script.</value>
  </data>
  <data name="ScriptConfig.IsScriptFolderEnabled" xml:space="preserve">
    <value>Use scripts</value>
  </data>
  <data name="ScriptConfig.ScriptFolder" xml:space="preserve">
    <value>Scripts folder</value>
  </data>
  <data name="ScriptConfig.ScriptFolder.Remarks" xml:space="preserve">
    <value>Use the scripts in this folder.</value>
  </data>
  <data name="ScriptOnBookLoadedCommand.Remarks" xml:space="preserve">
    <value>Scrpit. Executes when the book is opened.</value>
  </data>
  <data name="ScriptReference" xml:space="preserve">
    <value>Script reference</value>
  </data>
  <data name="ScriptReference.Summary" xml:space="preserve">
    <value>This section explains how to use NeeView-specific commands.</value>
  </data>
  <data name="ScrollPageCommandParameter.IsNScroll" xml:space="preserve">
    <value>N-type scroll</value>
  </data>
  <data name="ScrollPageCommandParameter.IsNScroll.Remarks" xml:space="preserve">
    <value>If vertically scrollable, scroll vertically as well. If you can scroll vertically and horizontally, scroll to draw N characters.</value>
  </data>
  <data name="ScrollPageCommandParameter.Margin" xml:space="preserve">
    <value>Minimum scrolling distance</value>
  </data>
  <data name="ScrollPageCommandParameter.Margin.Remarks" xml:space="preserve">
    <value>Scroll only if you can scroll above this pixel width.</value>
  </data>
  <data name="ScrollPageCommandParameter.PageMoveMargin" xml:space="preserve">
    <value>Page move margin (sec)</value>
  </data>
  <data name="ScrollPageCommandParameter.PageMoveMargin.Remarks" xml:space="preserve">
    <value>Judgment time for not moving the page immediately.</value>
  </data>
  <data name="ScrollPageCommandParameter.Scroll" xml:space="preserve">
    <value>Amount of movement</value>
  </data>
  <data name="ScrollPageCommandParameter.Scroll.Remarks" xml:space="preserve">
    <value>The ratio to the screen to scroll in one operation.</value>
  </data>
  <data name="ScrollPageCommandParameter.ScrollDuration" xml:space="preserve">
    <value>Scroll time (sec)</value>
  </data>
  <data name="SetBackgroundAutoCommand" xml:space="preserve">
    <value>Image colored background</value>
  </data>
  <data name="SetBackgroundAutoCommand.Remarks" xml:space="preserve">
    <value>Set the background color from the image. Specifically, the color of the upper left pixel of the image is used.</value>
  </data>
  <data name="SetBackgroundBlackCommand" xml:space="preserve">
    <value>Black background</value>
  </data>
  <data name="SetBackgroundBlackCommand.Remarks" xml:space="preserve">
    <value>Make the background black.</value>
  </data>
  <data name="SetBackgroundCheckCommand" xml:space="preserve">
    <value>White checkered background</value>
  </data>
  <data name="SetBackgroundCheckCommand.Remarks" xml:space="preserve">
    <value>Make the background a white checkered pattern.</value>
  </data>
  <data name="SetBackgroundCheckDarkCommand" xml:space="preserve">
    <value>Black checkered background</value>
  </data>
  <data name="SetBackgroundCheckDarkCommand.Remarks" xml:space="preserve">
    <value>Make the background a black checkered pattern.</value>
  </data>
  <data name="SetBackgroundCustomCommand" xml:space="preserve">
    <value>Custom Background</value>
  </data>
  <data name="SetBackgroundCustomCommand.Remarks" xml:space="preserve">
    <value>Make the background a custom background.</value>
  </data>
  <data name="SetBackgroundWhiteCommand" xml:space="preserve">
    <value>White background</value>
  </data>
  <data name="SetBackgroundWhiteCommand.Remarks" xml:space="preserve">
    <value>Make the background white.</value>
  </data>
  <data name="SetBookOrderByEntryTimeACommand" xml:space="preserve">
    <value>Book EntryTime Ascending</value>
  </data>
  <data name="SetBookOrderByEntryTimeACommand.Remarks" xml:space="preserve">
    <value>Set the order of books in ascending order by entry time.</value>
  </data>
  <data name="SetBookOrderByEntryTimeDCommand" xml:space="preserve">
    <value>Book EntryTime Descending</value>
  </data>
  <data name="SetBookOrderByEntryTimeDCommand.Remarks" xml:space="preserve">
    <value>Set the order of books in descending order by entry time.</value>
  </data>
  <data name="SetBookOrderByFileNameACommand" xml:space="preserve">
    <value>Book Name Ascending</value>
  </data>
  <data name="SetBookOrderByFileNameACommand.Remarks" xml:space="preserve">
    <value>Set the order of books in ascending order by name.</value>
  </data>
  <data name="SetBookOrderByFileNameDCommand" xml:space="preserve">
    <value>Book Name Descending</value>
  </data>
  <data name="SetBookOrderByFileNameDCommand.Remarks" xml:space="preserve">
    <value>Set the order of books in descending order by name.</value>
  </data>
  <data name="SetBookOrderByFileTypeACommand" xml:space="preserve">
    <value>Book FileType Ascending</value>
  </data>
  <data name="SetBookOrderByFileTypeACommand.Remarks" xml:space="preserve">
    <value>Set the order of books in ascending order by file type.</value>
  </data>
  <data name="SetBookOrderByFileTypeDCommand" xml:space="preserve">
    <value>Book FileType Descending</value>
  </data>
  <data name="SetBookOrderByFileTypeDCommand.Remarks" xml:space="preserve">
    <value>Set the order of books in descending order by file type.</value>
  </data>
  <data name="SetBookOrderByPathACommand" xml:space="preserve">
    <value>Book Path Ascending</value>
  </data>
  <data name="SetBookOrderByPathACommand.Remarks" xml:space="preserve">
    <value>Set the order of books in ascending order by full path.</value>
  </data>
  <data name="SetBookOrderByPathDCommand" xml:space="preserve">
    <value>Book Path Descending</value>
  </data>
  <data name="SetBookOrderByPathDCommand.Remarks" xml:space="preserve">
    <value>Set the order of books in descending order by full path.</value>
  </data>
  <data name="SetBookOrderByRandomCommand" xml:space="preserve">
    <value>Book Shuffle</value>
  </data>
  <data name="SetBookOrderByRandomCommand.Remarks" xml:space="preserve">
    <value>Set the order of books randomly.</value>
  </data>
  <data name="SetBookOrderBySizeACommand" xml:space="preserve">
    <value>Book Size Ascending</value>
  </data>
  <data name="SetBookOrderBySizeACommand.Remarks" xml:space="preserve">
    <value>Set the order of books in ascending order by size.</value>
  </data>
  <data name="SetBookOrderBySizeDCommand" xml:space="preserve">
    <value>Book Size Descending</value>
  </data>
  <data name="SetBookOrderBySizeDCommand.Remarks" xml:space="preserve">
    <value>Set the order of books in descending order by size.</value>
  </data>
  <data name="SetBookOrderByTimeStampACommand" xml:space="preserve">
    <value>Book Date Ascending</value>
  </data>
  <data name="SetBookOrderByTimeStampACommand.Remarks" xml:space="preserve">
    <value>Set the order of books in ascending order by date.</value>
  </data>
  <data name="SetBookOrderByTimeStampDCommand" xml:space="preserve">
    <value>Book Date Descending</value>
  </data>
  <data name="SetBookOrderByTimeStampDCommand.Remarks" xml:space="preserve">
    <value>Set the order of books in descending order by darte.</value>
  </data>
  <data name="SetBookReadOrderLeftCommand" xml:space="preserve">
    <value>Left to right</value>
  </data>
  <data name="SetBookReadOrderLeftCommand.Remarks" xml:space="preserve">
    <value>Left forward from left to right. The younger page turns to the left when 2 page is displayed.</value>
  </data>
  <data name="SetBookReadOrderRightCommand" xml:space="preserve">
    <value>Right to left</value>
  </data>
  <data name="SetBookReadOrderRightCommand.Remarks" xml:space="preserve">
    <value>Left forward from left to right. The young page turns to the right when 2 page is displayed.</value>
  </data>
  <data name="SetDefaultPageSettingCommand" xml:space="preserve">
    <value>Reset page setting</value>
  </data>
  <data name="SetDefaultPageSettingCommand.Remarks" xml:space="preserve">
    <value>Restore the default page setting.</value>
  </data>
  <data name="SetFullScreenCommand" xml:space="preserve">
    <value>Full screen</value>
  </data>
  <data name="SetFullScreenCommand.Remarks" xml:space="preserve">
    <value>Make it full screen.</value>
  </data>
  <data name="SetPageModeOneCommand" xml:space="preserve">
    <value>One page</value>
  </data>
  <data name="SetPageModeOneCommand.Remarks" xml:space="preserve">
    <value>Make it 1 page display.</value>
  </data>
  <data name="SetPageModeTwoCommand" xml:space="preserve">
    <value>Two page</value>
  </data>
  <data name="SetPageModeTwoCommand.Remarks" xml:space="preserve">
    <value>It makes 2 page display.</value>
  </data>
  <data name="SetSortModeFileNameCommand" xml:space="preserve">
    <value>Name Ascending</value>
  </data>
  <data name="SetSortModeFileNameCommand.Remarks" xml:space="preserve">
    <value>Sort the order of the pages in ascending order by filename.</value>
  </data>
  <data name="SetSortModeFileNameDescendingCommand" xml:space="preserve">
    <value>Name Descending</value>
  </data>
  <data name="SetSortModeFileNameDescendingCommand.Remarks" xml:space="preserve">
    <value>Sort the order of the pages in descending order by file name.</value>
  </data>
  <data name="SetSortModeRandomCommand" xml:space="preserve">
    <value>Shuffle</value>
  </data>
  <data name="SetSortModeRandomCommand.Remarks" xml:space="preserve">
    <value>Shuffle the order of pages.</value>
  </data>
  <data name="SetSortModeSizeCommand" xml:space="preserve">
    <value>Size Ascending</value>
  </data>
  <data name="SetSortModeSizeCommand.Remarks" xml:space="preserve">
    <value>Set the order of pages in ascending order by file size.</value>
  </data>
  <data name="SetSortModeSizeDescendingCommand" xml:space="preserve">
    <value>Size Descending</value>
  </data>
  <data name="SetSortModeSizeDescendingCommand.Remarks" xml:space="preserve">
    <value>Set the order of pages in descending order of file size.</value>
  </data>
  <data name="SetSortModeTimeStampCommand" xml:space="preserve">
    <value>Date Ascending</value>
  </data>
  <data name="SetSortModeTimeStampCommand.Remarks" xml:space="preserve">
    <value>Sort the order of pages by file date ascending order.</value>
  </data>
  <data name="SetSortModeTimeStampDescendingCommand" xml:space="preserve">
    <value>Date Descending</value>
  </data>
  <data name="SetSortModeTimeStampDescendingCommand.Remarks" xml:space="preserve">
    <value>Sort the order of pages by file date descending order.</value>
  </data>
  <data name="SetStretchModeInsideCommand" xml:space="preserve">
    <value>Fit to window if large</value>
  </data>
  <data name="SetStretchModeInsideCommand.Remarks" xml:space="preserve">
    <value>Reduce the image to fit in the window and display it.</value>
  </data>
  <data name="SetStretchModeNoneCommand" xml:space="preserve">
    <value>Original size</value>
  </data>
  <data name="SetStretchModeNoneCommand.Remarks" xml:space="preserve">
    <value>Display the image as it is.</value>
  </data>
  <data name="SetStretchModeOutsideCommand" xml:space="preserve">
    <value>Fit to window if small</value>
  </data>
  <data name="SetStretchModeOutsideCommand.Remarks" xml:space="preserve">
    <value>The image is enlarged as much as possible so that it fits in the window.</value>
  </data>
  <data name="SetStretchModeUniformCommand" xml:space="preserve">
    <value>Fit to window</value>
  </data>
  <data name="SetStretchModeUniformCommand.Remarks" xml:space="preserve">
    <value>Scales the image to fit the window size.</value>
  </data>
  <data name="SetStretchModeUniformToFillCommand" xml:space="preserve">
    <value>Extend to window</value>
  </data>
  <data name="SetStretchModeUniformToFillCommand.Remarks" xml:space="preserve">
    <value>Scale up or down to fit the window size either vertically or horizontally. The image will be larger than the window size.</value>
  </data>
  <data name="SetStretchModeUniformToHorizontalCommand" xml:space="preserve">
    <value>Fit width to window</value>
  </data>
  <data name="SetStretchModeUniformToHorizontalCommand.Remarks" xml:space="preserve">
    <value>Scales to fit the width of the image to the width of the window.</value>
  </data>
  <data name="SetStretchModeUniformToSizeCommand" xml:space="preserve">
    <value>Fit to window area size</value>
  </data>
  <data name="SetStretchModeUniformToSizeCommand.Remarks" xml:space="preserve">
    <value>Scales the image so that it is equal to the area size of ​​the window.</value>
  </data>
  <data name="SetStretchModeUniformToVerticalCommand" xml:space="preserve">
    <value>Fit height to window</value>
  </data>
  <data name="SetStretchModeUniformToVerticalCommand.Remarks" xml:space="preserve">
    <value>Scales to fit the height of the image to the height of the window.</value>
  </data>
  <data name="SettingItemRemove" xml:space="preserve">
    <value>Delete all data...</value>
  </data>
  <data name="SettingItemRemoveTips" xml:space="preserve">
    <value>Delete the user data and exit the application. It is used when you want to completely delete history etc. before uninstallation.</value>
  </data>
  <data name="SettingPageArchive" xml:space="preserve">
    <value>File types</value>
  </data>
  <data name="SettingPageArchiveMedia" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="SettingPageArchiveMediaAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageArchiveMediaFeature" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="SettingPageArchivePdf" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="SettingPageArchivePdfAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageArchivePdfFeature" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="SettingPageArchiverSevenZip" xml:space="preserve">
    <value>7-Zip</value>
  </data>
  <data name="SettingPageArchiverSevenZipAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageArchiverSevenZipFeature" xml:space="preserve">
    <value>7-Zip</value>
  </data>
  <data name="SettingPageArchiveZip" xml:space="preserve">
    <value>ZIP</value>
  </data>
  <data name="SettingPageArchiveZipAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageArchiveZipFeature" xml:space="preserve">
    <value>Standard archive</value>
  </data>
  <data name="SettingPageBook" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="SettingPageBookGeneral" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="SettingPageBookGeneralGeneral" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="SettingPageBookMove" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="SettingPageBookMoveAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageBookMoveBook" xml:space="preserve">
    <value>Move book</value>
  </data>
  <data name="SettingPageBookMovePage" xml:space="preserve">
    <value>Move pages</value>
  </data>
  <data name="SettingPageBookPageSetting" xml:space="preserve">
    <value>Page settings</value>
  </data>
  <data name="SettingPageBookPageSettingAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageBookPageSettingTips" xml:space="preserve">
    <value>The left item is the default value, and the right item is the behavior when the book is opened.</value>
  </data>
  <data name="SettingPageBookSubFolder" xml:space="preserve">
    <value>Subfolder</value>
  </data>
  <data name="SettingPageBookSubFolderAuto" xml:space="preserve">
    <value>Automatic determination of subfolder loading</value>
  </data>
  <data name="SettingPageBookSubFolderConfirm" xml:space="preserve">
    <value>Confirm loading of subfolder</value>
  </data>
  <data name="SettingPageBookVisual" xml:space="preserve">
    <value>Page view</value>
  </data>
  <data name="SettingPageBookVisualVisual" xml:space="preserve">
    <value>Page view</value>
  </data>
  <data name="SettingPageCommand" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="SettingPageCommandGeneral" xml:space="preserve">
    <value>Command General</value>
  </data>
  <data name="SettingPageCommandGeneralAdvance" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="SettingPageCommandMain" xml:space="preserve">
    <value>Edit commands</value>
  </data>
  <data name="SettingPageCommandScipt" xml:space="preserve">
    <value>Scripts</value>
  </data>
  <data name="SettingPageContextMenu" xml:space="preserve">
    <value>Context menu</value>
  </data>
  <data name="SettingPageContextMenuEdit" xml:space="preserve">
    <value>Edit context menu</value>
  </data>
  <data name="SettingPageEnvironmentMemoryAndPerformance" xml:space="preserve">
    <value>Memory &amp; Performance</value>
  </data>
  <data name="SettingPageExternal" xml:space="preserve">
    <value>External</value>
  </data>
  <data name="SettingPageExternalGeneral" xml:space="preserve">
    <value>External General</value>
  </data>
  <data name="SettingPageExternalGeneralCopyToClipboard" xml:space="preserve">
    <value>Copy files to clipboard</value>
  </data>
  <data name="SettingPageExternalGeneralFromBrowser" xml:space="preserve">
    <value>Drag and drop from browser</value>
  </data>
  <data name="SettingPageExternalGeneralSave" xml:space="preserve">
    <value>Save file</value>
  </data>
  <data name="SettingPageExternalGeneralSaveTips" xml:space="preserve">
    <value>This is the setting of the command to save the image</value>
  </data>
  <data name="SettingPageExternalProgram" xml:space="preserve">
    <value>External app</value>
  </data>
  <data name="SettingPageExternalProgramSetting" xml:space="preserve">
    <value>External app</value>
  </data>
  <data name="SettingPageGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="SettingPageGeneralBoot" xml:space="preserve">
    <value>Launch</value>
  </data>
  <data name="SettingPageGeneralBootBoot" xml:space="preserve">
    <value>Launch setting</value>
  </data>
  <data name="SettingPageGeneralBootBootDetail" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageGeneralBootBootDetailTips" xml:space="preserve">
    <value>* This setting will be reflected after closing the setting screen.</value>
  </data>
  <data name="SettingPageGeneralBootBootTips" xml:space="preserve">
    <value>* This setting will be reflected after closing the setting screen.</value>
  </data>
  <data name="SettingPageGeneralDetail" xml:space="preserve">
    <value>Environment</value>
  </data>
  <data name="SettingPageGeneralDetailDetail" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageGeneralDetailExplorer" xml:space="preserve">
    <value>Explorer</value>
  </data>
  <data name="SettingPageGeneralDetailLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="SettingPageGeneralLocation" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="SettingPageGeneralLocationTypes" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="SettingPageGeneralLocationTypesTips" xml:space="preserve">
    <value>* It is applied from the next startup.</value>
  </data>
  <data name="SettingPageGeneralSaveData" xml:space="preserve">
    <value>Save data</value>
  </data>
  <data name="SettingPageGeneralSaveDataRemove" xml:space="preserve">
    <value>Delete data</value>
  </data>
  <data name="SettingPageGeneralSaveDataTypes" xml:space="preserve">
    <value>Save data</value>
  </data>
  <data name="SettingPageGeneralSaveDataTypesTips" xml:space="preserve">
    <value>* The file location will be applied the next time you start up. Please use export, import to take over data.</value>
  </data>
  <data name="SettingPageHistory" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="SettingPageHistoryGeneral" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="SettingPageHistoryGeneralAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageHistoryGeneralBookshelf" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="SettingPageHistoryGeneralDelete" xml:space="preserve">
    <value>Delete history</value>
  </data>
  <data name="SettingPageHistoryGeneralDeleteButton" xml:space="preserve">
    <value>Delete history</value>
  </data>
  <data name="SettingPageHistoryGeneralGeneral" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="SettingPageHistoryGeneralLimit" xml:space="preserve">
    <value>Number of records saved limit</value>
  </data>
  <data name="SettingPageHistoryGeneralLimitTips" xml:space="preserve">
    <value>Sets the maximum number of history saved in the history file. The history during application operation is not limited.</value>
  </data>
  <data name="SettingPageHistoryPageView" xml:space="preserve">
    <value>Page view</value>
  </data>
  <data name="SettingPageHistoryPageViewRecord" xml:space="preserve">
    <value>Page view recording</value>
  </data>
  <data name="SettingPageImage" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="SettingPageImageCollection" xml:space="preserve">
    <value>Image formats</value>
  </data>
  <data name="SettingPageManipurate" xml:space="preserve">
    <value>View operation</value>
  </data>
  <data name="SettingPageManipurateGeneral" xml:space="preserve">
    <value>View operation General</value>
  </data>
  <data name="SettingPageManipurateGeneralAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageManipurateGeneralViewOperation" xml:space="preserve">
    <value>View operation</value>
  </data>
  <data name="SettingPageManipurateLoupe" xml:space="preserve">
    <value>Loupe</value>
  </data>
  <data name="SettingPageManipurateLoupeAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageManipurateLoupeGeneral" xml:space="preserve">
    <value>Loupe</value>
  </data>
  <data name="SettingPageManipurateMouse" xml:space="preserve">
    <value>Mouse operation</value>
  </data>
  <data name="SettingPageManipurateMouseDrag" xml:space="preserve">
    <value>Mouse drag</value>
  </data>
  <data name="SettingPageManipurateMouseHold" xml:space="preserve">
    <value>Mouse long press</value>
  </data>
  <data name="SettingPageManipurateMouseVisibility" xml:space="preserve">
    <value>Cursor auto hide</value>
  </data>
  <data name="SettingPageManipurateMouseVisibilityTips" xml:space="preserve">
    <value>If you do not operate the mouse for a certain time, the cursor will be hidden.</value>
  </data>
  <data name="SettingPageManipurateTouch" xml:space="preserve">
    <value>Touch operation</value>
  </data>
  <data name="SettingPageManipurateTouchAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageManipurateTouchGeneral" xml:space="preserve">
    <value>Touch operation</value>
  </data>
  <data name="SettingPagePanelBookshelf" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="SettingPagePanelBookshelfAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPagePanelBookshelfGeneral" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="SettingPagePanelBookshelfTree" xml:space="preserve">
    <value>Folder tree</value>
  </data>
  <data name="SettingPagePanelBookshelfVisual" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="SettingPagePanelEffect" xml:space="preserve">
    <value>Effect panel</value>
  </data>
  <data name="SettingPagePanelEffectAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPagePanelEffectVisual" xml:space="preserve">
    <value>Effect panel</value>
  </data>
  <data name="SettingPagePanelFileInfo" xml:space="preserve">
    <value>Information panel</value>
  </data>
  <data name="SettingPagePanelFileInfoVisual" xml:space="preserve">
    <value>Information panel</value>
  </data>
  <data name="SettingPagePanelGeneral" xml:space="preserve">
    <value>Side panels</value>
  </data>
  <data name="SettingPagePanelGeneralAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPagePanelGeneralOperation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="SettingPagePanelGeneralVisual" xml:space="preserve">
    <value>Side panels</value>
  </data>
  <data name="SettingPagePanelListItem" xml:space="preserve">
    <value>Panel list item</value>
  </data>
  <data name="SettingPagePanels" xml:space="preserve">
    <value>Panels</value>
  </data>
  <data name="SettingPagePanels.AutoHideMode" xml:space="preserve">
    <value>Auto-hide mode</value>
  </data>
  <data name="SettingPagePanels.AutoHideMode.WindowState" xml:space="preserve">
    <value>Window state to apply auto-hide mode</value>
  </data>
  <data name="SettingPagePanelStyleBanner" xml:space="preserve">
    <value>Banner style of list items</value>
  </data>
  <data name="SettingPagePanelStyleContent" xml:space="preserve">
    <value>Content style of list items</value>
  </data>
  <data name="SettingPagePanelStyleThumbnail" xml:space="preserve">
    <value>Thumbnail style of list items</value>
  </data>
  <data name="SettingPageScript" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="SettingPageSearchResult" xml:space="preserve">
    <value>Search results</value>
  </data>
  <data name="SettingPageSearchResultNotFound" xml:space="preserve">
    <value>Search results not found</value>
  </data>
  <data name="SettingPageSusie" xml:space="preserve">
    <value>Susie</value>
  </data>
  <data name="SettingPageSusieArchivePlugin" xml:space="preserve">
    <value>Archive plug-in</value>
  </data>
  <data name="SettingPageSusieGeneral" xml:space="preserve">
    <value>General Susie</value>
  </data>
  <data name="SettingPageSusieGeneralAdvance" xml:space="preserve">
    <value>Advanced Setting</value>
  </data>
  <data name="SettingPageSusieGeneralGeneral" xml:space="preserve">
    <value>Susie plug-in</value>
  </data>
  <data name="SettingPageSusieGeneralGeneralTips" xml:space="preserve">
    <value>It supports Susie plug-in (.spi).</value>
  </data>
  <data name="SettingPageSusieGeneralGeneralTipsX64" xml:space="preserve">
    <value>It supports Susie plug-in (.sph) for 64bit.</value>
  </data>
  <data name="SettingPageSusieGeneralPriority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="SettingPageSusieImagePlugin" xml:space="preserve">
    <value>Image plug-in</value>
  </data>
  <data name="SettingPageVisual" xml:space="preserve">
    <value>Visual</value>
  </data>
  <data name="SettingPageVisualFilmstrip" xml:space="preserve">
    <value>Filmstrip</value>
  </data>
  <data name="SettingPageVisualFilmstripFilmstrip" xml:space="preserve">
    <value>Filmstrip</value>
  </data>
  <data name="SettingPageVisualFont" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="SettingPageVisualFontPanel" xml:space="preserve">
    <value>List item font</value>
  </data>
  <data name="SettingPageVisualGeneral" xml:space="preserve">
    <value>Visual General</value>
  </data>
  <data name="SettingPageVisualGeneralAdvance" xml:space="preserve">
    <value>Window advanced setting</value>
  </data>
  <data name="SettingPageVisualGeneralAutoHide" xml:space="preserve">
    <value>Auto-hide panel</value>
  </data>
  <data name="SettingPageVisualGeneralBackground" xml:space="preserve">
    <value>Background</value>
  </data>
  <data name="SettingPageVisualGeneralOpacity" xml:space="preserve">
    <value>Opacity</value>
  </data>
  <data name="SettingPageVisualGeneralTheme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="SettingPageVisualNotify" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="SettingPageVisualNotifyDisplay" xml:space="preserve">
    <value>Notification display</value>
  </data>
  <data name="SettingPageVisualSlider" xml:space="preserve">
    <value>Page slider</value>
  </data>
  <data name="SettingPageVisualSliderVisual" xml:space="preserve">
    <value>Page slider</value>
  </data>
  <data name="SettingPageVisualSlideshow" xml:space="preserve">
    <value>Slideshow</value>
  </data>
  <data name="SettingPageVisualSlideshowGeneral" xml:space="preserve">
    <value>Slideshow</value>
  </data>
  <data name="SettingPageVisualThumbnail" xml:space="preserve">
    <value>Thumbnail</value>
  </data>
  <data name="SettingPageVisualThumbnailAdvance" xml:space="preserve">
    <value>Thumbnail image settings</value>
  </data>
  <data name="SettingPageVisualThumbnailCache" xml:space="preserve">
    <value>Thumbnail cache</value>
  </data>
  <data name="SettingPageVisualThumbnailCacheClear" xml:space="preserve">
    <value>Clear thumbnail cache</value>
  </data>
  <data name="SettingPageVisualThumbnailCacheClearButton" xml:space="preserve">
    <value>Clear thumbnail cache</value>
  </data>
  <data name="SettingPageVisualThumbnailCacheClearTips" xml:space="preserve">
    <value>After changing the thumbnail image settings, you need to clear the cache.</value>
  </data>
  <data name="SettingPageVisualWindowTitile" xml:space="preserve">
    <value>Window title</value>
  </data>
  <data name="SettingPageVisualWindowTitileDisplay" xml:space="preserve">
    <value>Window title</value>
  </data>
  <data name="SettingPageVisualWindowTitileNote" xml:space="preserve">
    <value>Format Description

$Book .. Name of the book
$Page[LR] .. Current page number
$PageMax .. Maximum page number
$ViewScale .. Scale by view operation (%)
$FullName[LR] .. File name including path
$Name[LR] .. File name
$Size[LR] .. File size (ex. 100 × 100)
$SizeEx[LR] .. File size + number of pixel bits (ex. 100 × 100 × 24)
$Scale[LR] .. Image scale (%)

"◯◯◯[LR]" indicates that the variable name changes for 1 page or 2 pages.
For example, $Name is for 1 page, $NameL is for 2 pages left, $NameR is for 2 pages right.
$Name is the main page (the smaller page number) when displaying 2 pages. </value>
  </data>
  <data name="SettingPageWindow" xml:space="preserve">
    <value>Window</value>
  </data>
  <data name="SettingSectionSvg" xml:space="preserve">
    <value>SVG</value>
  </data>
  <data name="SevenZipArchiveConfig.IsEnabled" xml:space="preserve">
    <value>Use compressed file expansion with 7-Zip</value>
  </data>
  <data name="SevenZipArchiveConfig.SupportFileTypes" xml:space="preserve">
    <value>Compressed file extension</value>
  </data>
  <data name="SevenZipArchiveConfig.X64DllPath" xml:space="preserve">
    <value>Location of 7z.dll (64 bit)</value>
  </data>
  <data name="SevenZipArchiveConfig.X64DllPath.Remarks" xml:space="preserve">
    <value>Set this if you want to use another 7z.dll. To reflect, you need to reopen the application.</value>
  </data>
  <data name="SevenZipArchiveConfig.X86DllPath" xml:space="preserve">
    <value>Location of 7z.dll (32bit)</value>
  </data>
  <data name="SevenZipArchiveConfig.X86DllPath.Remarks" xml:space="preserve">
    <value>Set this if you want to use another 7z.dll. To reflect, you need to reopen the application.</value>
  </data>
  <data name="SharpenEffectUnit.Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="SharpenEffectUnit.Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="ShowHiddenPanelsCommand" xml:space="preserve">
    <value>Show panels </value>
  </data>
  <data name="ShowHiddenPanelsCommand.Menu" xml:space="preserve">
    <value>Show panels </value>
  </data>
  <data name="ShowHiddenPanelsCommand.Remarks" xml:space="preserve">
    <value>The panel which is hidden automatically is displayed once. It will be canceled by some operation.</value>
  </data>
  <data name="ShowMessageStyle.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ShowMessageStyle.Normal" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="ShowMessageStyle.Tiny" xml:space="preserve">
    <value>Tiny</value>
  </data>
  <data name="SliderConfig.IsHidePageSlider" xml:space="preserve">
    <value>Hide slider automatically</value>
  </data>
  <data name="SliderConfig.IsHidePageSliderInAutoHideMode" xml:space="preserve">
    <value>Automatically hide the slider when it is auto-hide mode</value>
  </data>
  <data name="SliderConfig.IsSliderLinkedFilmStrip" xml:space="preserve">
    <value>Real time change with slider applies only to film strip</value>
  </data>
  <data name="SliderConfig.IsSliderLinkedFilmStrip.Remarks" xml:space="preserve">
    <value>Switch pages when decided.</value>
  </data>
  <data name="SliderConfig.IsSyncPageMode" xml:space="preserve">
    <value>Synchronize the amount of change to the number of displayed pages</value>
  </data>
  <data name="SliderConfig.IsVisible" xml:space="preserve">
    <value>Slider visibility</value>
  </data>
  <data name="SliderConfig.Opacity" xml:space="preserve">
    <value>Slider opacity</value>
  </data>
  <data name="SliderConfig.Opacity.Remarks" xml:space="preserve">
    <value>It is effective in auto-hide mode.</value>
  </data>
  <data name="SliderConfig.SliderDirection" xml:space="preserve">
    <value>Slider Direction</value>
  </data>
  <data name="SliderConfig.SliderIndexLayout" xml:space="preserve">
    <value>Page number display position</value>
  </data>
  <data name="SliderDirection.LeftToRight" xml:space="preserve">
    <value>Left to right</value>
  </data>
  <data name="SliderDirection.RightToLeft" xml:space="preserve">
    <value>Right to left</value>
  </data>
  <data name="SliderDirection.SyncBookReadDirection" xml:space="preserve">
    <value>Depends on books</value>
  </data>
  <data name="SliderIndexLayout.Left" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="SliderIndexLayout.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="SliderIndexLayout.Right" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="SlideShowConfig.IsCancelSlideByMouseMove" xml:space="preserve">
    <value>Reset display interval with mouse move</value>
  </data>
  <data name="SlideShowConfig.IsCancelSlideByMouseMove.Remarks" xml:space="preserve">
    <value>When set to OFF, it will only be reset by clear action such as clicking.</value>
  </data>
  <data name="SlideShowConfig.IsSlideShowByLoop" xml:space="preserve">
    <value>Loop play</value>
  </data>
  <data name="SlideShowConfig.IsSlideShowByLoop.Remarks" xml:space="preserve">
    <value>After playing to the last page, it will return to the first page.</value>
  </data>
  <data name="SlideShowConfig.SlideShowInterval" xml:space="preserve">
    <value>Display interval (sec)</value>
  </data>
  <data name="StartUpConfig.IsAutoPlaySlideShow" xml:space="preserve">
    <value>Start playing slideshow</value>
  </data>
  <data name="StartUpConfig.IsMultiBootEnabled" xml:space="preserve">
    <value>Allow multiple activations</value>
  </data>
  <data name="StartUpConfig.IsOpenLastBook" xml:space="preserve">
    <value>Restore an open book</value>
  </data>
  <data name="StartUpConfig.IsOpenLastFolder" xml:space="preserve">
    <value>Restore bookshelf location</value>
  </data>
  <data name="StartUpConfig.IsOpenLastFolder.Remarks" xml:space="preserve">
    <value>The location of the bookshelf if you do not open the book at startup.</value>
  </data>
  <data name="StartUpConfig.IsRestoreFullScreen" xml:space="preserve">
    <value>Restore full screen state</value>
  </data>
  <data name="StartUpConfig.IsRestoreSecondWindowPlacement" xml:space="preserve">
    <value>Restore the second window coordinates</value>
  </data>
  <data name="StartUpConfig.IsRestoreSecondWindowPlacement.Remarks" xml:space="preserve">
    <value>Also restore window coordinates when duplicates are activated. When set to OFF, it is displayed in the initial coordinates.</value>
  </data>
  <data name="StartUpConfig.IsRestoreWindowPlacement" xml:space="preserve">
    <value>Restore window coordinates</value>
  </data>
  <data name="StartUpConfig.IsSplashScreenEnabled" xml:space="preserve">
    <value>Splash screen</value>
  </data>
  <data name="StretchModeCommandParameter.IsToggle" xml:space="preserve">
    <value>Switching to original size</value>
  </data>
  <data name="StretchModeCommandParameter.IsToggle.Remarks" xml:space="preserve">
    <value>If the stretch mode is already specified, it will be the original size</value>
  </data>
  <data name="StretchWindowCommand" xml:space="preserve">
    <value>Stretch window</value>
  </data>
  <data name="StretchWindowCommand.Menu" xml:space="preserve">
    <value>Stretch window</value>
  </data>
  <data name="StretchWindowCommand.Remarks" xml:space="preserve">
    <value>Fit the window to the MainView content size.</value>
  </data>
  <data name="SusieConfig.IsEnabled" xml:space="preserve">
    <value>Use the Susie plugin</value>
  </data>
  <data name="SusieConfig.IsFirstOrderSusieArchive" xml:space="preserve">
    <value>Prioritize Susie plugin in compressed file expansion</value>
  </data>
  <data name="SusieConfig.IsFirstOrderSusieImage" xml:space="preserve">
    <value>Prioritize Susie plugin in image display</value>
  </data>
  <data name="SusieConfig.SusiePluginPath" xml:space="preserve">
    <value>Plugin folder</value>
  </data>
  <data name="SusiePluginList.Config" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="SusiePluginList.Down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="SusiePluginList.SwitchAll" xml:space="preserve">
    <value>All On / Off</value>
  </data>
  <data name="SusiePluginList.Up" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="SwirlEffectUnit.Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="SwirlEffectUnit.TwistAmount" xml:space="preserve">
    <value>Twist amount</value>
  </data>
  <data name="SystemConfig.ArchiveRecursiveMode" xml:space="preserve">
    <value>Compressed file handling</value>
  </data>
  <data name="SystemConfig.ArchiveRecursiveMode.Remarks" xml:space="preserve">
    <value>Extended range when opening compressed file</value>
  </data>
  <data name="SystemConfig.BookPageCollectMode" xml:space="preserve">
    <value>File type to be page</value>
  </data>
  <data name="SystemConfig.BookPageCollectMode.Remarks" xml:space="preserve">
    <value>If you make a folder a page, you can open the folder from that page.</value>
  </data>
  <data name="SystemConfig.DestinationFodlerCollection" xml:space="preserve">
    <value>Destination folders</value>
  </data>
  <data name="SystemConfig.DownloadPath" xml:space="preserve">
    <value>Download folder</value>
  </data>
  <data name="SystemConfig.DownloadPath.Remarks" xml:space="preserve">
    <value>It is a storage place of the image dropped by the browser etc. If not specified, temporary folder is used.</value>
  </data>
  <data name="SystemConfig.ExternalAppCollection" xml:space="preserve">
    <value>External applications</value>
  </data>
  <data name="SystemConfig.IsFileWriteAccessEnabled" xml:space="preserve">
    <value>File operation enabled</value>
  </data>
  <data name="SystemConfig.IsHiddenFileVisibled" xml:space="preserve">
    <value>Show hidden files</value>
  </data>
  <data name="SystemConfig.IsIgnoreImageDpi" xml:space="preserve">
    <value>Dot-by-dot display of image</value>
  </data>
  <data name="SystemConfig.IsIgnoreImageDpi.Remarks" xml:space="preserve">
    <value>When displaying at the original size, it matches the pixels of the display independently of the display scale of the display.</value>
  </data>
  <data name="SystemConfig.IsInputMethodEnabled" xml:space="preserve">
    <value>Enable IME outside the text box</value>
  </data>
  <data name="SystemConfig.IsInputMethodEnabled.Remarks" xml:space="preserve">
    <value>* It is applied from the next startup. Always valid for text boxes.</value>
  </data>
  <data name="SystemConfig.IsNaturalSortEnabled" xml:space="preserve">
    <value>Natural sort</value>
  </data>
  <data name="SystemConfig.IsNaturalSortEnabled.Remarks" xml:space="preserve">
    <value>Makes sorting by name, such as numbers separated by periods, kanji numbers, etc. more natural. When off, same as Explorer.</value>
  </data>
  <data name="SystemConfig.IsNetworkEnabled" xml:space="preserve">
    <value>Allow network access</value>
  </data>
  <data name="SystemConfig.IsNetworkEnabled.Remarks" xml:space="preserve">
    <value>In this application, we will use the network only for WEB links such as version update confirmation and online help from "About" dialog.</value>
  </data>
  <data name="SystemConfig.IsOpenbookAtCurrentPlace" xml:space="preserve">
    <value>Make the start position of the file selection dialog in "@LoadAsCommand" the location of the currently opened book</value>
  </data>
  <data name="SystemConfig.IsRemoveConfirmed" xml:space="preserve">
    <value>Show confirmation dialog when deleting files</value>
  </data>
  <data name="SystemConfig.IsRemoveWantNukeWarning" xml:space="preserve">
    <value>Show confirmation dialog when deleting files that don't fit in the Recycle Bin</value>
  </data>
  <data name="SystemConfig.IsSettingBackup" xml:space="preserve">
    <value>Make a backup of the user setting file</value>
  </data>
  <data name="SystemConfig.IsSettingBackup.Remarks" xml:space="preserve">
    <value>Make a backup of the configuration file and load it instead if the normal configuration file can not be read. The file name is UserSetting.json.bak. The update timing is when you close the options window and when you exit the application.</value>
  </data>
  <data name="SystemConfig.IsSyncUserSetting" xml:space="preserve">
    <value>Synchronize settings</value>
  </data>
  <data name="SystemConfig.IsSyncUserSetting.Remarks" xml:space="preserve">
    <value>When multi-booting, all NeeView settings are updated when closing the options window.</value>
  </data>
  <data name="SystemConfig.Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="SystemConfig.Language.Remarks" xml:space="preserve">
    <value>* It is applied from the next startup.</value>
  </data>
  <data name="SystemConfig.TemporaryDirectory" xml:space="preserve">
    <value>Temporary location</value>
  </data>
  <data name="SystemConfig.TemporaryDirectory.Remarks" xml:space="preserve">
    <value>It is used for pre-extraction and recursive compression files.</value>
  </data>
  <data name="ThemeConfig.MenuColor" xml:space="preserve">
    <value>Menu color</value>
  </data>
  <data name="ThemeConfig.PanelColor" xml:space="preserve">
    <value>Theme color</value>
  </data>
  <data name="ThumbnailConfig.CacheLimitSpan" xml:space="preserve">
    <value>Thumbnail cache retention period</value>
  </data>
  <data name="ThumbnailConfig.Format" xml:space="preserve">
    <value>Thumbnail image format</value>
  </data>
  <data name="ThumbnailConfig.Format.Remarks" xml:space="preserve">
    <value>PNG is high quality, but the data size is larger than JPEG.</value>
  </data>
  <data name="ThumbnailConfig.IsCacheEnabled" xml:space="preserve">
    <value>Use thumbnail cache</value>
  </data>
  <data name="ThumbnailConfig.IsCacheEnabled.Remarks" xml:space="preserve">
    <value>Cache the book thumbnail.</value>
  </data>
  <data name="ThumbnailConfig.Quality" xml:space="preserve">
    <value>Thumbnail quality</value>
  </data>
  <data name="ThumbnailConfig.Quality.Remarks" xml:space="preserve">
    <value>Quality when the thumbnail image format is JPEG.</value>
  </data>
  <data name="ThumbnailConfig.Resolution" xml:space="preserve">
    <value>Thumbnail image resolution</value>
  </data>
  <data name="ThumbnailConfig.Resolution.Remarks" xml:space="preserve">
    <value>The higher the value, the higher the resolution but the larger the data size.</value>
  </data>
  <data name="ThumbnailConfig.ThumbnailBookCapacity" xml:space="preserve">
    <value>Book Thumbnail Capacity</value>
  </data>
  <data name="ThumbnailConfig.ThumbnailBookCapacity.Remarks" xml:space="preserve">
    <value>The number of book thumbnails held in memory.</value>
  </data>
  <data name="ThumbnailConfig.ThumbnailCacheFilePath" xml:space="preserve">
    <value>Thumbnail cache file location</value>
  </data>
  <data name="ThumbnailConfig.ThumbnailPageCapacity" xml:space="preserve">
    <value>Page Thumbnail Capacity</value>
  </data>
  <data name="ThumbnailConfig.ThumbnailPageCapacity.Remarks" xml:space="preserve">
    <value>The number of page thumbnails held in memory. When the book is closed everything is destroyed.</value>
  </data>
  <data name="ToggleBackgroundCommand" xml:space="preserve">
    <value>Switch background</value>
  </data>
  <data name="ToggleBackgroundCommand.Remarks" xml:space="preserve">
    <value>Switch the background sequentially.</value>
  </data>
  <data name="ToggleBookmarkCommand" xml:space="preserve">
    <value>Toggle bookmark</value>
  </data>
  <data name="ToggleBookmarkCommand.Menu" xml:space="preserve">
    <value>Bookmark</value>
  </data>
  <data name="ToggleBookmarkCommand.Remarks" xml:space="preserve">
    <value>Toggle bookmark registration / release of currently open book.</value>
  </data>
  <data name="ToggleBookmarkCommand_Off" xml:space="preserve">
    <value>Bookmark OFF</value>
  </data>
  <data name="ToggleBookmarkCommand_On" xml:space="preserve">
    <value>Bookmark</value>
  </data>
  <data name="ToggleBookOrderCommand" xml:space="preserve">
    <value>Switch book order</value>
  </data>
  <data name="ToggleBookOrderCommand.Remarks" xml:space="preserve">
    <value>Switch the order of books in order.</value>
  </data>
  <data name="ToggleBookReadOrderCommand" xml:space="preserve">
    <value>Book orientation</value>
  </data>
  <data name="ToggleBookReadOrderCommand.Remarks" xml:space="preserve">
    <value>Toggle right and left open.</value>
  </data>
  <data name="ToggleCommand.Execute.Remarks" xml:space="preserve">
    <value>switch: bool|ON/OFF. Toggle if omitted.</value>
  </data>
  <data name="ToggleCustomSizeCommand" xml:space="preserve">
    <value>Toggle custom size</value>
  </data>
  <data name="ToggleCustomSizeCommand.Menu" xml:space="preserve">
    <value>Custom size</value>
  </data>
  <data name="ToggleCustomSizeCommand.Remarks" xml:space="preserve">
    <value>Toggles enabling / disabling of size specification applied to original size.</value>
  </data>
  <data name="ToggleCustomSizeCommand_Off" xml:space="preserve">
    <value>Custom size OFF</value>
  </data>
  <data name="ToggleCustomSizeCommand_On" xml:space="preserve">
    <value>Custom size</value>
  </data>
  <data name="ToggleEffectCommand" xml:space="preserve">
    <value>Toggle effect</value>
  </data>
  <data name="ToggleEffectCommand.Menu" xml:space="preserve">
    <value>Effect</value>
  </data>
  <data name="ToggleEffectCommand.Remarks" xml:space="preserve">
    <value>Toggle effect on / off.</value>
  </data>
  <data name="ToggleEffectCommand_Off" xml:space="preserve">
    <value>Effect OFF</value>
  </data>
  <data name="ToggleEffectCommand_On" xml:space="preserve">
    <value>Effect</value>
  </data>
  <data name="ToggleForceAutoRotateCommand" xml:space="preserve">
    <value>Force auto rotation</value>
  </data>
  <data name="ToggleForceAutoRotateCommand.Menu" xml:space="preserve">
    <value>Force auto rotation</value>
  </data>
  <data name="ToggleForceAutoRotateCommand.Remarks" xml:space="preserve">
    <value>Automatic rotation is applied regardless of the aspect ratio of the image.</value>
  </data>
  <data name="ToggleForceAutoRotateOffCommand" xml:space="preserve">
    <value>Force auto rotation OFF</value>
  </data>
  <data name="ToggleForceAutoRotateOnCommand" xml:space="preserve">
    <value>Force auto rotation</value>
  </data>
  <data name="ToggleFullScreenCommand" xml:space="preserve">
    <value>Toggle full screen</value>
  </data>
  <data name="ToggleFullScreenCommand.Menu" xml:space="preserve">
    <value>Full screen</value>
  </data>
  <data name="ToggleFullScreenCommand.Remarks" xml:space="preserve">
    <value>Switch the full screen state.</value>
  </data>
  <data name="ToggleFullScreenCommand_Off" xml:space="preserve">
    <value>Full screen OFF</value>
  </data>
  <data name="ToggleFullScreenCommand_On" xml:space="preserve">
    <value>Full screen</value>
  </data>
  <data name="ToggleGridCommand" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="ToggleGridCommand.Menu" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="ToggleGridCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of grid.</value>
  </data>
  <data name="ToggleGridCommand_Off" xml:space="preserve">
    <value>Grid OFF</value>
  </data>
  <data name="ToggleGridCommand_On" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="ToggleHideMenuCommand" xml:space="preserve">
    <value>Toggle auto hide menu</value>
  </data>
  <data name="ToggleHideMenuCommand.Menu" xml:space="preserve">
    <value>Auto hide menu</value>
  </data>
  <data name="ToggleHideMenuCommand.Remarks" xml:space="preserve">
    <value>Hide the menu. It is displayed by moving the cursor to the upper end of the window.</value>
  </data>
  <data name="ToggleHideMenuCommand_Off" xml:space="preserve">
    <value>Auto hide menu OFF</value>
  </data>
  <data name="ToggleHideMenuCommand_On" xml:space="preserve">
    <value>Auto hide menu</value>
  </data>
  <data name="ToggleHidePageSliderCommand" xml:space="preserve">
    <value>Toggle auto hide slider</value>
  </data>
  <data name="ToggleHidePageSliderCommand.Menu" xml:space="preserve">
    <value>Auto hide slider</value>
  </data>
  <data name="ToggleHidePageSliderCommand.Remarks" xml:space="preserve">
    <value>Hide the slider. It is displayed by moving the cursor to the lower end of the window.</value>
  </data>
  <data name="ToggleHidePageSliderCommand_Off" xml:space="preserve">
    <value>Auto hide slider OFF</value>
  </data>
  <data name="ToggleHidePageSliderCommand_On" xml:space="preserve">
    <value>Auto hide slider</value>
  </data>
  <data name="ToggleHidePanelCommand" xml:space="preserve">
    <value>Toggle auto hide panels</value>
  </data>
  <data name="ToggleHidePanelCommand.Menu" xml:space="preserve">
    <value>Auto hide panels</value>
  </data>
  <data name="ToggleHidePanelCommand.Remarks" xml:space="preserve">
    <value>Automatically hide the left and right panels. It is displayed by moving the cursor to the left and right edges of the window.</value>
  </data>
  <data name="ToggleHidePanelCommand_Off" xml:space="preserve">
    <value>Auto hide panels OFF</value>
  </data>
  <data name="ToggleHidePanelCommand_On" xml:space="preserve">
    <value>Auto hide panels</value>
  </data>
  <data name="ToggleHideThumbnailListCommand" xml:space="preserve">
    <value>Toggle auto hide filmstrip</value>
  </data>
  <data name="ToggleHideThumbnailListCommand.Menu" xml:space="preserve">
    <value>Auto hide filmstrip</value>
  </data>
  <data name="ToggleHideThumbnailListCommand.Remarks" xml:space="preserve">
    <value>Display the film strip only when using the slider.</value>
  </data>
  <data name="ToggleHideThumbnailListCommand_Off" xml:space="preserve">
    <value>Auto hide filmstrip OFF</value>
  </data>
  <data name="ToggleHideThumbnailListCommand_On" xml:space="preserve">
    <value>Auto hide filmstrip</value>
  </data>
  <data name="ToggleIsAutoRotateCommand" xml:space="preserve">
    <value>Toggle auto rotation</value>
  </data>
  <data name="ToggleIsAutoRotateLeftCommand" xml:space="preserve">
    <value>Toggle auto left rotation</value>
  </data>
  <data name="ToggleIsAutoRotateLeftCommand.Menu" xml:space="preserve">
    <value>Auto left rotate</value>
  </data>
  <data name="ToggleIsAutoRotateLeftCommand.Remarks" xml:space="preserve">
    <value>When displaying the page, left rotate the portrait image 90 degrees. If the window is portrait, rotate horizontally long image by 90 degrees.</value>
  </data>
  <data name="ToggleIsAutoRotateLeftCommand_Off" xml:space="preserve">
    <value>Auto left rotate OFF</value>
  </data>
  <data name="ToggleIsAutoRotateLeftCommand_On" xml:space="preserve">
    <value>Auto left rotate</value>
  </data>
  <data name="ToggleIsAutoRotateRightCommand" xml:space="preserve">
    <value>Toggle auto rithg rotation</value>
  </data>
  <data name="ToggleIsAutoRotateRightCommand.Menu" xml:space="preserve">
    <value>Auto right rotate</value>
  </data>
  <data name="ToggleIsAutoRotateRightCommand.Remarks" xml:space="preserve">
    <value>When displaying the page, right rotate the portrait image 90 degrees. If the window is portrait, rotate horizontally long image by 90 degrees.</value>
  </data>
  <data name="ToggleIsAutoRotateRightCommand_Off" xml:space="preserve">
    <value>Auto right rotate OFF</value>
  </data>
  <data name="ToggleIsAutoRotateRightCommand_On" xml:space="preserve">
    <value>Auto right rotate</value>
  </data>
  <data name="ToggleIsLoupeCommand" xml:space="preserve">
    <value>Toggle loupe</value>
  </data>
  <data name="ToggleIsLoupeCommand.Menu" xml:space="preserve">
    <value>Loupe</value>
  </data>
  <data name="ToggleIsLoupeCommand.Remarks" xml:space="preserve">
    <value>Turn the loupe on or off.</value>
  </data>
  <data name="ToggleIsLoupeCommand_Off" xml:space="preserve">
    <value>Loupe OFF</value>
  </data>
  <data name="ToggleIsLoupeCommand_On" xml:space="preserve">
    <value>Loupe</value>
  </data>
  <data name="ToggleIsRecursiveFolderCommand" xml:space="preserve">
    <value>Load subfolders</value>
  </data>
  <data name="ToggleIsRecursiveFolderCommand.Remarks" xml:space="preserve">
    <value>When loading images from folders, subfolders or compressed files are also loaded at the same time.</value>
  </data>
  <data name="ToggleIsRecursiveFolderCommand_Off" xml:space="preserve">
    <value>Load subfolders OFF</value>
  </data>
  <data name="ToggleIsRecursiveFolderCommand_On" xml:space="preserve">
    <value>Load subfolders</value>
  </data>
  <data name="ToggleIsSupportedDividePageCommand" xml:space="preserve">
    <value>Split wide page</value>
  </data>
  <data name="ToggleIsSupportedDividePageCommand.Remarks" xml:space="preserve">
    <value>When one page is displayed, divide the landscape page into pages.</value>
  </data>
  <data name="ToggleIsSupportedDividePageCommand_Off" xml:space="preserve">
    <value>Split wide page OFF</value>
  </data>
  <data name="ToggleIsSupportedDividePageCommand_On" xml:space="preserve">
    <value>Split wide page</value>
  </data>
  <data name="ToggleIsSupportedSingleFirstPageCommand" xml:space="preserve">
    <value>First page alone</value>
  </data>
  <data name="ToggleIsSupportedSingleFirstPageCommand.Remarks" xml:space="preserve">
    <value>Even on 2 page display, the first page is displayed as 1 page.</value>
  </data>
  <data name="ToggleIsSupportedSingleFirstPageCommand_Off" xml:space="preserve">
    <value>First page alone OFF</value>
  </data>
  <data name="ToggleIsSupportedSingleFirstPageCommand_On" xml:space="preserve">
    <value>First page alone</value>
  </data>
  <data name="ToggleIsSupportedSingleLastPageCommand" xml:space="preserve">
    <value>Last page alone</value>
  </data>
  <data name="ToggleIsSupportedSingleLastPageCommand.Remarks" xml:space="preserve">
    <value>Even on 2 page display, the last page is displayed on 1 page.</value>
  </data>
  <data name="ToggleIsSupportedSingleLastPageCommand_Off" xml:space="preserve">
    <value>Last page alone OFF</value>
  </data>
  <data name="ToggleIsSupportedSingleLastPageCommand_On" xml:space="preserve">
    <value>Last page alone</value>
  </data>
  <data name="ToggleIsSupportedWidePageCommand" xml:space="preserve">
    <value>Wide is two page</value>
  </data>
  <data name="ToggleIsSupportedWidePageCommand.Remarks" xml:space="preserve">
    <value>When two pages are displayed, the horizontally long image is regarded as two pages and is displayed independently.</value>
  </data>
  <data name="ToggleIsSupportedWidePageCommand_Off" xml:space="preserve">
    <value>Wide is two page OFF</value>
  </data>
  <data name="ToggleIsSupportedWidePageCommand_On" xml:space="preserve">
    <value>Wide is two page</value>
  </data>
  <data name="ToggleMainViewFloatingCommand" xml:space="preserve">
    <value>Toggle MainView window</value>
  </data>
  <data name="ToggleMainViewFloatingCommand.Menu" xml:space="preserve">
    <value>MainView window</value>
  </data>
  <data name="ToggleMainViewFloatingCommand.Remarks" xml:space="preserve">
    <value>Make the MainView a window.</value>
  </data>
  <data name="ToggleMainViewFloatingOff" xml:space="preserve">
    <value>MainView docking</value>
  </data>
  <data name="ToggleMainViewFloatingOn" xml:space="preserve">
    <value>MainView floating</value>
  </data>
  <data name="ToggleMediaPlayCommand" xml:space="preserve">
    <value>Play/Stop</value>
  </data>
  <data name="ToggleMediaPlayCommand.Remarks" xml:space="preserve">
    <value>Toggle between playing and stopping the movie.</value>
  </data>
  <data name="ToggleNearestNeighborCommand" xml:space="preserve">
    <value>Toggle keep dot</value>
  </data>
  <data name="ToggleNearestNeighborCommand.Menu" xml:space="preserve">
    <value>Keep dot</value>
  </data>
  <data name="ToggleNearestNeighborCommand.Remarks" xml:space="preserve">
    <value>When set to ON, it will expand while maintaining the dot. When it is OFF, scale conversion processing (Fant) is executed.</value>
  </data>
  <data name="ToggleNearestNeighborCommand_Off" xml:space="preserve">
    <value>Keep dot OFF</value>
  </data>
  <data name="ToggleNearestNeighborCommand_On" xml:space="preserve">
    <value>Keep dot</value>
  </data>
  <data name="TogglePageListPlacementBookshelfCommand" xml:space="preserve">
    <value>Place page list on bookshelf</value>
  </data>
  <data name="TogglePageListPlacementCommand" xml:space="preserve">
    <value>Switch placement of page list</value>
  </data>
  <data name="TogglePageListPlacementCommand.Menu" xml:space="preserve">
    <value>Page list placement</value>
  </data>
  <data name="TogglePageListPlacementCommand.Remarks" xml:space="preserve">
    <value>Switch placement of page list between bookshelf and side panel</value>
  </data>
  <data name="TogglePageListPlacementPanelCommand" xml:space="preserve">
    <value>Place page list on side panel</value>
  </data>
  <data name="TogglePagemarkCommand" xml:space="preserve">
    <value>Toggle pagemark</value>
  </data>
  <data name="TogglePagemarkCommand.Menu" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="TogglePagemarkCommand.Remarks" xml:space="preserve">
    <value>Toggles registration / cancellation of page mark of currently open page.</value>
  </data>
  <data name="TogglePagemarkCommand_Off" xml:space="preserve">
    <value>Pagemark OFF</value>
  </data>
  <data name="TogglePagemarkCommand_On" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="TogglePageModeCommand" xml:space="preserve">
    <value>Toggle page mode</value>
  </data>
  <data name="TogglePageModeCommand.Remarks" xml:space="preserve">
    <value>Switch between 1 page display and 2 page display.</value>
  </data>
  <data name="TogglePermitFileCommand" xml:space="preserve">
    <value>Toggle file operation</value>
  </data>
  <data name="TogglePermitFileCommand.Menu" xml:space="preserve">
    <value>File operation</value>
  </data>
  <data name="TogglePermitFileCommand.Remarks" xml:space="preserve">
    <value>Toggle enable / disable of file operation command.</value>
  </data>
  <data name="TogglePermitFileCommand_Off" xml:space="preserve">
    <value>Disable file operation</value>
  </data>
  <data name="TogglePermitFileCommand_On" xml:space="preserve">
    <value>Enable file operation</value>
  </data>
  <data name="ToggleResizeFilterCommand" xml:space="preserve">
    <value>Toggle resize filter</value>
  </data>
  <data name="ToggleResizeFilterCommand.Menu" xml:space="preserve">
    <value>Resize filter</value>
  </data>
  <data name="ToggleResizeFilterCommand.Remarks" xml:space="preserve">
    <value>Toggle resize filter on / off.</value>
  </data>
  <data name="ToggleResizeFilterCommand_Off" xml:space="preserve">
    <value>Resize filter OFF</value>
  </data>
  <data name="ToggleResizeFilterCommand_On" xml:space="preserve">
    <value>Resize filter</value>
  </data>
  <data name="ToggleSlideShowCommand" xml:space="preserve">
    <value>Toggle slideshow</value>
  </data>
  <data name="ToggleSlideShowCommand.Menu" xml:space="preserve">
    <value>Slideshow</value>
  </data>
  <data name="ToggleSlideShowCommand.Remarks" xml:space="preserve">
    <value>Toggle play / stop of the slideshow.</value>
  </data>
  <data name="ToggleSlideShowCommand_Off" xml:space="preserve">
    <value>Stop slideshw</value>
  </data>
  <data name="ToggleSlideShowCommand_On" xml:space="preserve">
    <value>Play slideshow</value>
  </data>
  <data name="ToggleSortModeCommand" xml:space="preserve">
    <value>Switch pages order</value>
  </data>
  <data name="ToggleSortModeCommand.Remarks" xml:space="preserve">
    <value>Switch the order of the pages in order.</value>
  </data>
  <data name="ToggleStretchAllowScaleDownCommand" xml:space="preserve">
    <value>Allow stretch scale down</value>
  </data>
  <data name="ToggleStretchAllowScaleDownCommand.Remarks" xml:space="preserve">
    <value>Allow scale down on stretch.</value>
  </data>
  <data name="ToggleStretchAllowScaleUpCommand" xml:space="preserve">
    <value>Allow stretch scale up</value>
  </data>
  <data name="ToggleStretchAllowScaleUpCommand.Remarks" xml:space="preserve">
    <value>Allow scale up on stretch.</value>
  </data>
  <data name="ToggleStretchModeCommand" xml:space="preserve">
    <value>Switch stretch</value>
  </data>
  <data name="ToggleStretchModeCommand.Remarks" xml:space="preserve">
    <value>Switch the stretch in order.</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsEnableNone" xml:space="preserve">
    <value>@PageStretchMode.None</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsEnableNone.Title" xml:space="preserve">
    <value>Switchable mode</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsEnableUniform" xml:space="preserve">
    <value>@PageStretchMode.Uniform</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsEnableUniformToFill" xml:space="preserve">
    <value>@PageStretchMode.UniformToFill</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsEnableUniformToHorizontal" xml:space="preserve">
    <value>@PageStretchMode.UniformToHorizontal</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsEnableUniformToSize" xml:space="preserve">
    <value>@PageStretchMode.UniformToSize</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsEnableUniformToVertical" xml:space="preserve">
    <value>@PageStretchMode.UniformToVertical</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsLoop" xml:space="preserve">
    <value>Loop</value>
  </data>
  <data name="ToggleStretchModeCommandParameter.IsLoop.Title" xml:space="preserve">
    <value>Loop setting</value>
  </data>
  <data name="ToggleStretchModeReverseCommand" xml:space="preserve">
    <value>Switch stretch (reverse)</value>
  </data>
  <data name="ToggleStretchModeReverseCommand.Remarks" xml:space="preserve">
    <value>Switch the stretch in order (reverse).</value>
  </data>
  <data name="ToggleTopmostCommand" xml:space="preserve">
    <value>Toggle topmost</value>
  </data>
  <data name="ToggleTopmostCommand.Menu" xml:space="preserve">
    <value>Topmost</value>
  </data>
  <data name="ToggleTopmostCommand.Remarks" xml:space="preserve">
    <value>Always display the window in front.</value>
  </data>
  <data name="ToggleTopmostCommand_Off" xml:space="preserve">
    <value>Topmost OFF</value>
  </data>
  <data name="ToggleTopmostCommand_On" xml:space="preserve">
    <value>Topmost</value>
  </data>
  <data name="ToggleViewFlipHorizontalCommand" xml:space="preserve">
    <value>Toggle flip horizontal</value>
  </data>
  <data name="ToggleViewFlipHorizontalCommand.Remarks" xml:space="preserve">
    <value>Flip the image left and right.</value>
  </data>
  <data name="ToggleViewFlipVerticalCommand" xml:space="preserve">
    <value>Toggle flip vertial</value>
  </data>
  <data name="ToggleViewFlipVerticalCommand.Remarks" xml:space="preserve">
    <value>Flip the image upside down.</value>
  </data>
  <data name="ToggleVisibleAddressBarCommand" xml:space="preserve">
    <value>Toggle address bar</value>
  </data>
  <data name="ToggleVisibleAddressBarCommand.Menu" xml:space="preserve">
    <value>Address bar</value>
  </data>
  <data name="ToggleVisibleAddressBarCommand.Remarks" xml:space="preserve">
    <value>Toggle vidible / hide of the address bar.</value>
  </data>
  <data name="ToggleVisibleAddressBarCommand_Off" xml:space="preserve">
    <value>Address bar OFF</value>
  </data>
  <data name="ToggleVisibleAddressBarCommand_On" xml:space="preserve">
    <value>Address bar</value>
  </data>
  <data name="ToggleVisibleBookmarkListCommand" xml:space="preserve">
    <value>Toggle bookmark list</value>
  </data>
  <data name="ToggleVisibleBookmarkListCommand.Menu" xml:space="preserve">
    <value>Bookmark list</value>
  </data>
  <data name="ToggleVisibleBookmarkListCommand.Remarks" xml:space="preserve">
    <value>Toggle vidible / hide of the bookmark list panel.</value>
  </data>
  <data name="ToggleVisibleBookmarkListCommand_Off" xml:space="preserve">
    <value>Bookmark list OFF</value>
  </data>
  <data name="ToggleVisibleBookmarkListCommand_On" xml:space="preserve">
    <value>Bookmark list</value>
  </data>
  <data name="ToggleVisibleBookshelfCommand" xml:space="preserve">
    <value>Toggle bookshelf</value>
  </data>
  <data name="ToggleVisibleBookshelfCommand.Menu" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="ToggleVisibleBookshelfCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of the bookshelf panel.</value>
  </data>
  <data name="ToggleVisibleBookshelfCommand_Off" xml:space="preserve">
    <value>Bookshelf OFF</value>
  </data>
  <data name="ToggleVisibleBookshelfCommand_On" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="ToggleVisibleEffectInfoCommand" xml:space="preserve">
    <value>Toggle effect panel</value>
  </data>
  <data name="ToggleVisibleEffectInfoCommand.Menu" xml:space="preserve">
    <value>Effect panel</value>
  </data>
  <data name="ToggleVisibleEffectInfoCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of the effect panel.</value>
  </data>
  <data name="ToggleVisibleEffectInfoCommand_Off" xml:space="preserve">
    <value>Effect panel OFF</value>
  </data>
  <data name="ToggleVisibleEffectInfoCommand_On" xml:space="preserve">
    <value>Effect panel</value>
  </data>
  <data name="ToggleVisibleFileInfoCommand" xml:space="preserve">
    <value>Toggle information</value>
  </data>
  <data name="ToggleVisibleFileInfoCommand.Menu" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="ToggleVisibleFileInfoCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of the information panel.</value>
  </data>
  <data name="ToggleVisibleFileInfoCommand_Off" xml:space="preserve">
    <value>Information OFF</value>
  </data>
  <data name="ToggleVisibleFileInfoCommand_On" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="ToggleVisibleFoldersTreeCommand" xml:space="preserve">
    <value>Toggle Folders tree</value>
  </data>
  <data name="ToggleVisibleFoldersTreeCommand.Menu" xml:space="preserve">
    <value>Folders tree</value>
  </data>
  <data name="ToggleVisibleFoldersTreeCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of the Folders tree. The bookshelf is displayed.</value>
  </data>
  <data name="ToggleVisibleFoldersTreeCommand_Off" xml:space="preserve">
    <value>Folders tree OFF</value>
  </data>
  <data name="ToggleVisibleFoldersTreeCommand_On" xml:space="preserve">
    <value>Folders tree</value>
  </data>
  <data name="ToggleVisibleHistoryListCommand" xml:space="preserve">
    <value>Toggle history list</value>
  </data>
  <data name="ToggleVisibleHistoryListCommand.Menu" xml:space="preserve">
    <value>History list</value>
  </data>
  <data name="ToggleVisibleHistoryListCommand.Remarks" xml:space="preserve">
    <value>Toggle vidible / hide of the history list panel.</value>
  </data>
  <data name="ToggleVisibleHistoryListCommand_Off" xml:space="preserve">
    <value>History list OFF</value>
  </data>
  <data name="ToggleVisibleHistoryListCommand_On" xml:space="preserve">
    <value>History list</value>
  </data>
  <data name="ToggleVisibleNavigatorCommand" xml:space="preserve">
    <value>Toggle navigator</value>
  </data>
  <data name="ToggleVisibleNavigatorCommand.Menu" xml:space="preserve">
    <value>Navigator</value>
  </data>
  <data name="ToggleVisibleNavigatorCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of the navigator</value>
  </data>
  <data name="ToggleVisibleNavigatorCommand_Off" xml:space="preserve">
    <value>Navigator OFF</value>
  </data>
  <data name="ToggleVisibleNavigatorCommand_On" xml:space="preserve">
    <value>Navigator</value>
  </data>
  <data name="ToggleVisiblePageListCommand" xml:space="preserve">
    <value>Toggle page list</value>
  </data>
  <data name="ToggleVisiblePageListCommand.Menu" xml:space="preserve">
    <value>Page list</value>
  </data>
  <data name="ToggleVisiblePageListCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of the page list. The bookshelf is displayed.</value>
  </data>
  <data name="ToggleVisiblePageListCommand_Off" xml:space="preserve">
    <value>Page list OFF</value>
  </data>
  <data name="ToggleVisiblePageListCommand_On" xml:space="preserve">
    <value>Page list</value>
  </data>
  <data name="ToggleVisiblePagemarkListCommand" xml:space="preserve">
    <value>Toggle pagemark list</value>
  </data>
  <data name="ToggleVisiblePagemarkListCommand.Menu" xml:space="preserve">
    <value>Pagemark list</value>
  </data>
  <data name="ToggleVisiblePagemarkListCommand.Remarks" xml:space="preserve">
    <value>Toggle vidible / hide of the pagemark list panel.</value>
  </data>
  <data name="ToggleVisiblePagemarkListCommand_Off" xml:space="preserve">
    <value>Pagemark list OFF</value>
  </data>
  <data name="ToggleVisiblePagemarkListCommand_On" xml:space="preserve">
    <value>Pagemark list</value>
  </data>
  <data name="ToggleVisibleSideBarCommand" xml:space="preserve">
    <value>Toggle side bar</value>
  </data>
  <data name="ToggleVisibleSideBarCommand.Menu" xml:space="preserve">
    <value>Side bar</value>
  </data>
  <data name="ToggleVisibleSideBarCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of sidebar.</value>
  </data>
  <data name="ToggleVisibleSideBarCommand_Off" xml:space="preserve">
    <value>Side bar OFF</value>
  </data>
  <data name="ToggleVisibleSideBarCommand_On" xml:space="preserve">
    <value>Side bar</value>
  </data>
  <data name="ToggleVisibleThumbnailListCommand" xml:space="preserve">
    <value>Toggle filmstrip</value>
  </data>
  <data name="ToggleVisibleThumbnailListCommand.Menu" xml:space="preserve">
    <value>Filmstrip</value>
  </data>
  <data name="ToggleVisibleThumbnailListCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of the filmstrip.</value>
  </data>
  <data name="ToggleVisibleThumbnailListCommand_Off" xml:space="preserve">
    <value>Filmstrip OFF</value>
  </data>
  <data name="ToggleVisibleThumbnailListCommand_On" xml:space="preserve">
    <value>Filmstrip</value>
  </data>
  <data name="ToggleVisibleTitleBarCommand" xml:space="preserve">
    <value>Toggle title bar</value>
  </data>
  <data name="ToggleVisibleTitleBarCommand.Menu" xml:space="preserve">
    <value>Title bar</value>
  </data>
  <data name="ToggleVisibleTitleBarCommand.Remarks" xml:space="preserve">
    <value>Toggle visible / hide of window title bar.</value>
  </data>
  <data name="ToggleVisibleTitleBarCommand_Off" xml:space="preserve">
    <value>Title bar OFF</value>
  </data>
  <data name="ToggleVisibleTitleBarCommand_On" xml:space="preserve">
    <value>Title bar</value>
  </data>
  <data name="ToggleWindowMaximizeCommand" xml:space="preserve">
    <value>Maximize window</value>
  </data>
  <data name="ToggleWindowMaximizeCommand.Menu" xml:space="preserve">
    <value>Maximize</value>
  </data>
  <data name="ToggleWindowMaximizeCommand.Remarks" xml:space="preserve">
    <value>Maximize the window. If it has already been maximized, restore it to its original size.</value>
  </data>
  <data name="ToggleWindowMinimizeCommand" xml:space="preserve">
    <value>Minimize window</value>
  </data>
  <data name="ToggleWindowMinimizeCommand.Menu" xml:space="preserve">
    <value>Minimize</value>
  </data>
  <data name="ToggleWindowMinimizeCommand.Remarks" xml:space="preserve">
    <value>Minimize the window. If it has already been minimized, restore it to its original size.</value>
  </data>
  <data name="TokenFormat" xml:space="preserve">
    <value>"{0}"</value>
  </data>
  <data name="TouchAction.Drag" xml:space="preserve">
    <value>Touch view operation</value>
  </data>
  <data name="TouchAction.Gesture" xml:space="preserve">
    <value>Gesture</value>
  </data>
  <data name="TouchAction.MouseDrag" xml:space="preserve">
    <value>Mouse drag operation</value>
  </data>
  <data name="TouchAction.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="TouchConfig.DragAction" xml:space="preserve">
    <value>Single touch drag operation</value>
  </data>
  <data name="TouchConfig.GestureMinimumDistance" xml:space="preserve">
    <value>Minimum movement distance for touch drag judgment</value>
  </data>
  <data name="TouchConfig.GestureMinimumDistance.Remarks" xml:space="preserve">
    <value>Dragging is judged to start for the first time by moving this distance.</value>
  </data>
  <data name="TouchConfig.HoldAction" xml:space="preserve">
    <value>Long press Touch drag operation</value>
  </data>
  <data name="TouchConfig.IsAngleEnabled" xml:space="preserve">
    <value>Enable rotation operation with multi-touch</value>
  </data>
  <data name="TouchConfig.IsEnabled" xml:space="preserve">
    <value>When set to OFF, it functions as standard mouse operation.</value>
  </data>
  <data name="TouchConfig.IsScaleEnabled" xml:space="preserve">
    <value>Enable sizing operation with pinch in and pinch out</value>
  </data>
  <data name="TouchConfig.MinimumManipulationDistance" xml:space="preserve">
    <value>Touch operation pinch minimum change distance</value>
  </data>
  <data name="TouchConfig.MinimumManipulationDistance.Remarks" xml:space="preserve">
    <value>This is the minimum operating distance at which rotation and enlargement / reduction by touch operation are effective.</value>
  </data>
  <data name="TouchConfig.MinimumManipulationRadius" xml:space="preserve">
    <value>Touch operation pinch minimum determination distance</value>
  </data>
  <data name="TouchConfig.MinimumManipulationRadius.Remarks" xml:space="preserve">
    <value>It is the distance between the minimum of 2 touches judged as rotation by touch operation, enlargement / reduction.</value>
  </data>
  <data name="TouchEmulateCommand" xml:space="preserve">
    <value>Touch emulate</value>
  </data>
  <data name="TouchEmulateCommand.Remarks" xml:space="preserve">
    <value>Execute the touch command at the mouse cursor position.</value>
  </data>
  <data name="UnloadCommand" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="UnloadCommand.Menu" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="UnloadCommand.Remarks" xml:space="preserve">
    <value>Close the open workbook.</value>
  </data>
  <data name="UnsharpMaskConfig.Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="UnsharpMaskConfig.Radius" xml:space="preserve">
    <value>Radius</value>
  </data>
  <data name="UnsharpMaskConfig.Threshold" xml:space="preserve">
    <value>Threshold</value>
  </data>
  <data name="Ver320" xml:space="preserve">
    <value>NeeVew 32.0 </value>
  </data>
  <data name="Ver320Note" xml:space="preserve">
    <value>· The bookmark list was integrated with the folder list and it became a bookshelf.
· The folder of the pagemark list is now automatically created.</value>
  </data>
  <data name="VersionChecker.Message.Checking" xml:space="preserve">
    <value>Checking the latest version ...</value>
  </data>
  <data name="VersionChecker.Message.Failed" xml:space="preserve">
    <value>Update check failed</value>
  </data>
  <data name="VersionChecker.Message.Lastest" xml:space="preserve">
    <value>NeeView is the latest version</value>
  </data>
  <data name="VersionChecker.Message.New" xml:space="preserve">
    <value>A new version has been released</value>
  </data>
  <data name="VersionChecker.Message.Unknown" xml:space="preserve">
    <value>NeeView is an unknown version</value>
  </data>
  <data name="VersionChecker.Message.WrongFormat" xml:space="preserve">
    <value>The format of the update page is different from what is supposed</value>
  </data>
  <data name="VersionWindow.Download" xml:space="preserve">
    <value>Go to download page</value>
  </data>
  <data name="VersionWindow.Menu.Copy" xml:space="preserve">
    <value>_Copy version info</value>
  </data>
  <data name="VersionWindow_License" xml:space="preserve">
    <value>License Info / Change Log</value>
  </data>
  <data name="VersionWindow_Project" xml:space="preserve">
    <value>Project Page</value>
  </data>
  <data name="VerticalAlignment_Bottom" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="VerticalAlignment_Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="VerticalAlignment_Top" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="ViewConfig.AllowStretchScaleDown" xml:space="preserve">
    <value>Allow scale down by stretching</value>
  </data>
  <data name="ViewConfig.AllowStretchScaleUp" xml:space="preserve">
    <value>Allow scale up by stretching</value>
  </data>
  <data name="ViewConfig.AngleFrequency" xml:space="preserve">
    <value>Rotating Snap</value>
  </data>
  <data name="ViewConfig.AutoRotate" xml:space="preserve">
    <value>Automatic rotation</value>
  </data>
  <data name="ViewConfig.BaseScale" xml:space="preserve">
    <value>Base scale</value>
  </data>
  <data name="ViewConfig.BaseScale.Remarks" xml:space="preserve">
    <value>After applying the stretch, apply this scale value.</value>
  </data>
  <data name="ViewConfig.FlipCenter" xml:space="preserve">
    <value>Center of flip</value>
  </data>
  <data name="ViewConfig.IsBaseScaleEnabled" xml:space="preserve">
    <value>Enable base scale</value>
  </data>
  <data name="ViewConfig.IsBaseScaleEnabled.Remarks" xml:space="preserve">
    <value>Enable base scale.</value>
  </data>
  <data name="ViewConfig.IsKeepAngle" xml:space="preserve">
    <value>Keeping rotation even if you change the page</value>
  </data>
  <data name="ViewConfig.IsKeepAngle.Remarks" xml:space="preserve">
    <value>This setting does not work when automatic rotation is enabled.</value>
  </data>
  <data name="ViewConfig.IsKeepFlip" xml:space="preserve">
    <value>Maintain reversal even when changing page</value>
  </data>
  <data name="ViewConfig.IsKeepScale" xml:space="preserve">
    <value>Maintain scaling even when changing pages</value>
  </data>
  <data name="ViewConfig.IsLimitMove" xml:space="preserve">
    <value>Move inside the window</value>
  </data>
  <data name="ViewConfig.IsRotateStretchEnabled" xml:space="preserve">
    <value>Apply stretch to navigator rotation buttons</value>
  </data>
  <data name="ViewConfig.IsViewStartPositionCenter" xml:space="preserve">
    <value>Use the display start position as the center of the image</value>
  </data>
  <data name="ViewConfig.IsViewStartPositionCenter.Remarks" xml:space="preserve">
    <value>When set to OFF, it becomes the upper right reference and the upper left reference depending on the spreading direction.</value>
  </data>
  <data name="ViewConfig.RotateCenter" xml:space="preserve">
    <value>Center of rotation</value>
  </data>
  <data name="ViewConfig.ScaleCenter" xml:space="preserve">
    <value>Center of scaling</value>
  </data>
  <data name="ViewConfig.StretchMode" xml:space="preserve">
    <value>Stretch mode</value>
  </data>
  <data name="ViewFlipHorizontalOffCommand" xml:space="preserve">
    <value>Flip horizontal OFF</value>
  </data>
  <data name="ViewFlipHorizontalOffCommand.Remarks" xml:space="preserve">
    <value>Cancel flip.</value>
  </data>
  <data name="ViewFlipHorizontalOnCommand" xml:space="preserve">
    <value>Flip horizontal</value>
  </data>
  <data name="ViewFlipHorizontalOnCommand.Remarks" xml:space="preserve">
    <value>Flip the image left and right.</value>
  </data>
  <data name="ViewFlipVerticalOffCommand" xml:space="preserve">
    <value>Flip vertial OFF</value>
  </data>
  <data name="ViewFlipVerticalOffCommand.Remarks" xml:space="preserve">
    <value>Cancel flip.</value>
  </data>
  <data name="ViewFlipVerticalOnCommand" xml:space="preserve">
    <value>Flip vertial</value>
  </data>
  <data name="ViewFlipVerticalOnCommand.Remarks" xml:space="preserve">
    <value>Turn it upside down.</value>
  </data>
  <data name="ViewPageAccessor" xml:space="preserve">
    <value>ViewPage accessor</value>
  </data>
  <data name="ViewPageAccessor.Example" xml:space="preserve">
    <value>//  Display the view page name with toast
nv.ShowToast(nv.Book.ViewPages[0].Path)</value>
  </data>
  <data name="ViewPageAccessor.Height" xml:space="preserve">
    <value>Page height</value>
  </data>
  <data name="ViewPageAccessor.Width" xml:space="preserve">
    <value>Page width</value>
  </data>
  <data name="ViewResetCommand" xml:space="preserve">
    <value>View reset</value>
  </data>
  <data name="ViewResetCommand.Remarks" xml:space="preserve">
    <value>Initialize rotation, scaling, movement, and inversion by manipulating the view.</value>
  </data>
  <data name="ViewRotateCommandParameter.Angle" xml:space="preserve">
    <value>Rotation angle</value>
  </data>
  <data name="ViewRotateCommandParameter.Angle.Remarks" xml:space="preserve">
    <value>It is an angle which rotates by one operation. (0-180)</value>
  </data>
  <data name="ViewRotateCommandParameter.IsStretch" xml:space="preserve">
    <value>Apply image stretch</value>
  </data>
  <data name="ViewRotateCommandParameter.IsStretch.Remarks" xml:space="preserve">
    <value>Re-apply image stretch after rotation.</value>
  </data>
  <data name="ViewRotateLeftCommand" xml:space="preserve">
    <value>Left rotate</value>
  </data>
  <data name="ViewRotateLeftCommand.Remarks" xml:space="preserve">
    <value>Rotates the image to the left.</value>
  </data>
  <data name="ViewRotateRightCommand" xml:space="preserve">
    <value>Right rotate</value>
  </data>
  <data name="ViewRotateRightCommand.Remarks" xml:space="preserve">
    <value>Rotate the image to the right.</value>
  </data>
  <data name="ViewScaleCommandParameter.IsSnapDefaultScale" xml:space="preserve">
    <value>100% snap</value>
  </data>
  <data name="ViewScaleCommandParameter.IsSnapDefaultScale.Remarks" xml:space="preserve">
    <value>Make sure to zoom in and out by 100%.</value>
  </data>
  <data name="ViewScaleCommandParameter.Scale" xml:space="preserve">
    <value>Scale rate</value>
  </data>
  <data name="ViewScaleCommandParameter.Scale.Remarks" xml:space="preserve">
    <value>It is the rate of change by one operation.</value>
  </data>
  <data name="ViewScaleDownCommand" xml:space="preserve">
    <value>Zoom out</value>
  </data>
  <data name="ViewScaleDownCommand.Remarks" xml:space="preserve">
    <value>Reduce the image.</value>
  </data>
  <data name="ViewScaleUpCommand" xml:space="preserve">
    <value>Zoom in</value>
  </data>
  <data name="ViewScaleUpCommand.Remarks" xml:space="preserve">
    <value>Enlarge the image.</value>
  </data>
  <data name="ViewScrollCommandParameter.AllowCrossScroll" xml:space="preserve">
    <value>Allow vertical scroll</value>
  </data>
  <data name="ViewScrollCommandParameter.AllowCrossScroll.Remarks" xml:space="preserve">
    <value>If you can not scroll in the axial direction, sucrose in the direction perpendicular to the axis.</value>
  </data>
  <data name="ViewScrollCommandParameter.Scroll" xml:space="preserve">
    <value>Amount of movement</value>
  </data>
  <data name="ViewScrollCommandParameter.Scroll.Remarks" xml:space="preserve">
    <value>The ratio of the screen to scroll in one operation.</value>
  </data>
  <data name="ViewScrollCommandParameter.ScrollDuration" xml:space="preserve">
    <value>Scroll time (sec)</value>
  </data>
  <data name="ViewScrollDownCommand" xml:space="preserve">
    <value>Scroll ↓</value>
  </data>
  <data name="ViewScrollDownCommand.Remarks" xml:space="preserve">
    <value>Roll the image downwards. When it is not possible to scroll vertically, side scrolling will occur.</value>
  </data>
  <data name="ViewScrollLeftCommand" xml:space="preserve">
    <value>Scroll ←</value>
  </data>
  <data name="ViewScrollLeftCommand.Remarks" xml:space="preserve">
    <value>Roll the image to the left. If horizontal scrolling is not possible, vertical scrolling will occur.</value>
  </data>
  <data name="ViewScrollNTypeCommandParameter.Margin" xml:space="preserve">
    <value>Minimum scrolling distance</value>
  </data>
  <data name="ViewScrollNTypeCommandParameter.Margin.Remarks" xml:space="preserve">
    <value>Scroll only if you can scroll above this pixel width.</value>
  </data>
  <data name="ViewScrollNTypeCommandParameter.Scroll" xml:space="preserve">
    <value>Amount of movement</value>
  </data>
  <data name="ViewScrollNTypeCommandParameter.Scroll.Remarks" xml:space="preserve">
    <value>The ratio to the screen to scroll in one operation.</value>
  </data>
  <data name="ViewScrollNTypeCommandParameter.ScrollDuration" xml:space="preserve">
    <value>Scroll time (sec)</value>
  </data>
  <data name="ViewScrollNTypeDownCommand" xml:space="preserve">
    <value>N-type scroll ↓</value>
  </data>
  <data name="ViewScrollNTypeDownCommand.Remarks" xml:space="preserve">
    <value>If you can scroll vertically and horizontally, scroll to draw N characters.</value>
  </data>
  <data name="ViewScrollNTypeUpCommand" xml:space="preserve">
    <value>N-type scroll ↑</value>
  </data>
  <data name="ViewScrollNTypeUpCommand.Remarks" xml:space="preserve">
    <value>If you can scroll vertically and horizontally, scroll to draw N characters.</value>
  </data>
  <data name="ViewScrollRightCommand" xml:space="preserve">
    <value>Scroll →</value>
  </data>
  <data name="ViewScrollRightCommand.Remarks" xml:space="preserve">
    <value>Roll the image to the right. If horizontal scrolling is not possible, vertical scrolling will occur.</value>
  </data>
  <data name="ViewScrollUpCommand" xml:space="preserve">
    <value>Scroll ↑</value>
  </data>
  <data name="ViewScrollUpCommand.Remarks" xml:space="preserve">
    <value>Roll the image upwards. When it is not possible to scroll vertically, side scrolling will occur.</value>
  </data>
  <data name="WindowAboutTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="WindowChromeFrame.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="WindowChromeFrame.WindowFrame" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="WindowConfig.IsAutoHideInFullScreen" xml:space="preserve">
    <value>Apply auto-hide mode in full screen</value>
  </data>
  <data name="WindowConfig.IsAutoHideInNormal" xml:space="preserve">
    <value>Apply auto-hide mode in normal window</value>
  </data>
  <data name="WindowConfig.IsAutoHidInMaximized" xml:space="preserve">
    <value>Apply auto-hide mode in maximized window</value>
  </data>
  <data name="WindowConfig.IsCaptionEmulateInFullScreen" xml:space="preserve">
    <value>Title bar operation at full screen</value>
  </data>
  <data name="WindowConfig.IsCaptionEmulateInFullScreen.Remarks" xml:space="preserve">
    <value>Enable the title bar operation (double click and drag) on ​​the menu at full screen.</value>
  </data>
  <data name="WindowConfig.IsCaptionVisible" xml:space="preserve">
    <value>Show title bar</value>
  </data>
  <data name="WindowConfig.IsRestoreAeroSnapPlacement" xml:space="preserve">
    <value>Restore AeroSnap window placement</value>
  </data>
  <data name="WindowConfig.IsTopmost" xml:space="preserve">
    <value>Window topmost</value>
  </data>
  <data name="WindowConfig.MaximizeWindowGapWidth" xml:space="preserve">
    <value>Gap adjustment of window maximization with title bar hidden</value>
  </data>
  <data name="WindowConfig.MaximizeWindowGapWidth.Remarks" xml:space="preserve">
    <value>If there is a gap in maximizing the window with the title bar hidden, adjust with this value.</value>
  </data>
  <data name="WindowConfig.MouseActivateAndEat" xml:space="preserve">
    <value>Disable mouse data when activating window with mouse</value>
  </data>
  <data name="WindowConfig.State" xml:space="preserve">
    <value>Window state</value>
  </data>
  <data name="WindowConfig.WindowChromeFrame" xml:space="preserve">
    <value>Window frame with title bar hidden</value>
  </data>
  <data name="WindowSettingTitle" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="WindowStateEx.FullScreen" xml:space="preserve">
    <value>FullScreen</value>
  </data>
  <data name="WindowStateEx.Maximized" xml:space="preserve">
    <value>Maximized</value>
  </data>
  <data name="WindowStateEx.Minimized" xml:space="preserve">
    <value>Minimized</value>
  </data>
  <data name="WindowStateEx.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="WindowStateEx.Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="WindowTitleConfig.IsMainViewDisplayEnabled" xml:space="preserve">
    <value>When the title bar is not displayed, the window title is displayed in the display area</value>
  </data>
  <data name="WindowTitleConfig.WindowTitleFormat1" xml:space="preserve">
    <value>For 1 page</value>
  </data>
  <data name="WindowTitleConfig.WindowTitleFormat2" xml:space="preserve">
    <value>For 2 page</value>
  </data>
  <data name="WindowTitleConfig.WindowTitleFormatMedia" xml:space="preserve">
    <value>For video</value>
  </data>
  <data name="Word.Example" xml:space="preserve">
    <value>Example</value>
  </data>
  <data name="Word.Fields" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="Word.Methods" xml:space="preserve">
    <value>Methods</value>
  </data>
  <data name="Word.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Word.Parameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="Word.Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="Word.Returns" xml:space="preserve">
    <value>Returns</value>
  </data>
  <data name="Word.Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="WordAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="WordAllHistory" xml:space="preserve">
    <value>All history</value>
  </data>
  <data name="WordAllPagemark" xml:space="preserve">
    <value>All pagemark</value>
  </data>
  <data name="WordArgument" xml:space="preserve">
    <value>Argument</value>
  </data>
  <data name="WordBookmark" xml:space="preserve">
    <value>Bookmark</value>
  </data>
  <data name="WordBookshelf" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="WordCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="WordCause" xml:space="preserve">
    <value>Cause</value>
  </data>
  <data name="WordCDRomDrive" xml:space="preserve">
    <value>Disk drive</value>
  </data>
  <data name="WordClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="WordClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="WordCommand" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="WordCommandList" xml:space="preserve">
    <value>Command list</value>
  </data>
  <data name="WordCommandName" xml:space="preserve">
    <value>Command name</value>
  </data>
  <data name="WordCommandParameter" xml:space="preserve">
    <value>Command parameter</value>
  </data>
  <data name="WordConfig" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="WordConfigList" xml:space="preserve">
    <value>Config list</value>
  </data>
  <data name="WordCustomBackground" xml:space="preserve">
    <value>Custom background</value>
  </data>
  <data name="WordDaysAgo" xml:space="preserve">
    <value>{0} days ago</value>
  </data>
  <data name="WordDefaultApp" xml:space="preserve">
    <value>Default app</value>
  </data>
  <data name="WordDefaultPagemark" xml:space="preserve">
    <value>Default pagemark</value>
  </data>
  <data name="WordDegree" xml:space="preserve">
    <value>degree</value>
  </data>
  <data name="WordDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="WordDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="WordDown" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="WordEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="WordEmbeddedImage" xml:space="preserve">
    <value>Embedded image</value>
  </data>
  <data name="WordExample" xml:space="preserve">
    <value>e.g.</value>
  </data>
  <data name="WordExcludePath" xml:space="preserve">
    <value>Excluded path</value>
  </data>
  <data name="WordExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="WordExtension" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="WordFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="WordFiles" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="WordFirstPage" xml:space="preserve">
    <value>First page</value>
  </data>
  <data name="WordFixedDrive" xml:space="preserve">
    <value>Local disk</value>
  </data>
  <data name="WordFolder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="WordFolders" xml:space="preserve">
    <value>Folders</value>
  </data>
  <data name="WordFoldersTree" xml:space="preserve">
    <value>Folders tree</value>
  </data>
  <data name="WordFullScreen" xml:space="preserve">
    <value>Full screen</value>
  </data>
  <data name="WordGesture" xml:space="preserve">
    <value>Gesture</value>
  </data>
  <data name="WordGroup" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="WordImport" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="WordInner" xml:space="preserve">
    <value>Innner</value>
  </data>
  <data name="WordIsPanelSelected" xml:space="preserve">
    <value>Panel selected</value>
  </data>
  <data name="WordIsPanelVisible" xml:space="preserve">
    <value>Panel visibility</value>
  </data>
  <data name="WordItem" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="WordItemNone" xml:space="preserve">
    <value>(None)</value>
  </data>
  <data name="WordJump" xml:space="preserve">
    <value>Jump</value>
  </data>
  <data name="WordLeft" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="WordLoop" xml:space="preserve">
    <value>Loop</value>
  </data>
  <data name="WordMainMenu" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="WordName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="WordNetworkDrive" xml:space="preserve">
    <value>Netword drive</value>
  </data>
  <data name="WordNewFolder" xml:space="preserve">
    <value>New Folder</value>
  </data>
  <data name="WordNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="WordNoLimit" xml:space="preserve">
    <value>No Limit</value>
  </data>
  <data name="WordNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="WordOff" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="WordOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="WordOn" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="WordOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="WordOpenInNeeView" xml:space="preserve">
    <value>Open in Nee&amp;View</value>
  </data>
  <data name="WordOpenStore" xml:space="preserve">
    <value>Open Microsoft Store</value>
  </data>
  <data name="WordPage" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="WordPageList" xml:space="preserve">
    <value>Page list</value>
  </data>
  <data name="WordPagemark" xml:space="preserve">
    <value>Pagemark</value>
  </data>
  <data name="WordParameter" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="WordPath" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="WordPeriod" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="WordPlay" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="WordPlaylist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="WordQuickAccess" xml:space="preserve">
    <value>Quick access</value>
  </data>
  <data name="WordRamDrive" xml:space="preserve">
    <value>RAM disk</value>
  </data>
  <data name="WordReadOnly" xml:space="preserve">
    <value>Read only</value>
  </data>
  <data name="WordRemovableDrive" xml:space="preserve">
    <value>Removable disk</value>
  </data>
  <data name="WordRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="WordRename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="WordReset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="WordResetLong" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="WordRestore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="WordRetry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="WordRight" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="WordSearchWord" xml:space="preserve">
    <value>Search word</value>
  </data>
  <data name="WordSec" xml:space="preserve">
    <value>sec</value>
  </data>
  <data name="WordShortcut" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="WordStepless" xml:space="preserve">
    <value>Stepless</value>
  </data>
  <data name="WordStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="WordStyleBanner" xml:space="preserve">
    <value>Banner style</value>
  </data>
  <data name="WordStyleContent" xml:space="preserve">
    <value>Content style</value>
  </data>
  <data name="WordStyleList" xml:space="preserve">
    <value>List style</value>
  </data>
  <data name="WordStyleThumbnail" xml:space="preserve">
    <value>Thumbnail style</value>
  </data>
  <data name="WordToDown" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="WordTopmost" xml:space="preserve">
    <value>Topmost</value>
  </data>
  <data name="WordTouch" xml:space="preserve">
    <value>Touch</value>
  </data>
  <data name="WordToUp" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="WordType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="WordUnsharpMask" xml:space="preserve">
    <value>Unsharp mask</value>
  </data>
  <data name="WordUp" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="WordYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="x.BookshelfCopyToFolderSelect" xml:space="preserve">
    <value>Select copy destination folder</value>
  </data>
  <data name="x.BookshelfCopyToFolderSuccess" xml:space="preserve">
    <value>Copied {0} items</value>
  </data>
  <data name="x.BookshelfItemMenuDestinationFolderSelect" xml:space="preserve">
    <value>_Select folder...</value>
  </data>
  <data name="x.BookshelfMoveToFolderSelect" xml:space="preserve">
    <value>Select move destination folder</value>
  </data>
  <data name="x.BookshelfMoveToFolderSuccess" xml:space="preserve">
    <value>Moved {0} items</value>
  </data>
  <data name="x.BookshelfName" xml:space="preserve">
    <value>Bookshelf</value>
  </data>
  <data name="x.ControlAboutChangeLog" xml:space="preserve">
    <value>Change Log</value>
  </data>
  <data name="x.ControlSaveOriginal" xml:space="preserve">
    <value>Save original file</value>
  </data>
  <data name="x.ControlSaveWidePage" xml:space="preserve">
    <value>Combine two pages</value>
  </data>
  <data name="ZipArchiveConfig.IsEnabled" xml:space="preserve">
    <value>Use ZIP compressed file expansion with standard function</value>
  </data>
  <data name="ZipArchiveConfig.SupportFileTypes" xml:space="preserve">
    <value>Compressed file extension</value>
  </data>
  <data name="ZipArchiveConfig.SupportFileTypes.Remarks" xml:space="preserve">
    <value>Only ZIP format is supported.</value>
  </data>
</root>